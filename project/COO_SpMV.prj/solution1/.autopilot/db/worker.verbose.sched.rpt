

================================================================
== Vivado HLS Report for 'worker'
================================================================
* Date:           Mon Dec  5 14:00:49 2022

* Version:        2016.2 (Build 1577090 on Thu Jun 02 16:59:10 MDT 2016)
* Project:        COO_SpMV.prj
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      8.09|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +------+------+------+------+---------+
    |   Latency   |   Interval  | Pipeline|
    |  min |  max |  min |  max |   Type  |
    +------+------+------+------+---------+
    |  3598|  3598|  3599|  3599|   none  |
    +------+------+------+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name| min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1  |  200|  200|         2|          -|          -|   100|    no    |
        +----------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 54
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	37  / true
37 --> 
	38  / true
38 --> 
	39  / true
39 --> 
	40  / true
40 --> 
	41  / true
41 --> 
	42  / true
42 --> 
	43  / true
43 --> 
	44  / true
44 --> 
	45  / true
45 --> 
	46  / true
46 --> 
	47  / true
47 --> 
	48  / true
48 --> 
	49  / true
49 --> 
	50  / true
50 --> 
	51  / true
51 --> 
	52  / true
52 --> 
	53  / true
53 --> 
	54  / (!exitcond)
54 --> 
	53  / true
* FSM state operations: 

 <State 1>: 2.71ns
ST_1: dest_1_0 [1/1] 0.00ns
.critedge:2  %dest_1_0 = alloca [100 x float], align 4

ST_1: dest_1_0_addr [1/1] 0.00ns
.critedge:3  %dest_1_0_addr = getelementptr [100 x float]* %dest_1_0, i64 0, i64 0

ST_1: stg_57 [1/1] 2.71ns
.critedge:4  store float 0.000000e+00, float* %dest_1_0_addr, align 16

ST_1: dest_1_0_addr_1 [1/1] 0.00ns
.critedge:5  %dest_1_0_addr_1 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 1

ST_1: stg_59 [1/1] 2.71ns
.critedge:6  store float 0.000000e+00, float* %dest_1_0_addr_1, align 4


 <State 2>: 2.71ns
ST_2: dest_1_0_addr_2 [1/1] 0.00ns
.critedge:7  %dest_1_0_addr_2 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 2

ST_2: stg_61 [1/1] 2.71ns
.critedge:8  store float 0.000000e+00, float* %dest_1_0_addr_2, align 8

ST_2: dest_1_0_addr_3 [1/1] 0.00ns
.critedge:9  %dest_1_0_addr_3 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 3

ST_2: stg_63 [1/1] 2.71ns
.critedge:10  store float 0.000000e+00, float* %dest_1_0_addr_3, align 4


 <State 3>: 2.71ns
ST_3: dest_1_0_addr_4 [1/1] 0.00ns
.critedge:11  %dest_1_0_addr_4 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 4

ST_3: stg_65 [1/1] 2.71ns
.critedge:12  store float 0.000000e+00, float* %dest_1_0_addr_4, align 16

ST_3: dest_1_0_addr_5 [1/1] 0.00ns
.critedge:13  %dest_1_0_addr_5 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 5

ST_3: stg_67 [1/1] 2.71ns
.critedge:14  store float 0.000000e+00, float* %dest_1_0_addr_5, align 4


 <State 4>: 2.71ns
ST_4: dest_1_0_addr_6 [1/1] 0.00ns
.critedge:15  %dest_1_0_addr_6 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 6

ST_4: stg_69 [1/1] 2.71ns
.critedge:16  store float 0.000000e+00, float* %dest_1_0_addr_6, align 8

ST_4: dest_1_0_addr_7 [1/1] 0.00ns
.critedge:17  %dest_1_0_addr_7 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 7

ST_4: stg_71 [1/1] 2.71ns
.critedge:18  store float 0.000000e+00, float* %dest_1_0_addr_7, align 4


 <State 5>: 2.71ns
ST_5: dest_1_0_addr_8 [1/1] 0.00ns
.critedge:19  %dest_1_0_addr_8 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 8

ST_5: stg_73 [1/1] 2.71ns
.critedge:20  store float 0.000000e+00, float* %dest_1_0_addr_8, align 16

ST_5: dest_1_0_addr_9 [1/1] 0.00ns
.critedge:21  %dest_1_0_addr_9 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 9

ST_5: stg_75 [1/1] 2.71ns
.critedge:22  store float 0.000000e+00, float* %dest_1_0_addr_9, align 4


 <State 6>: 2.71ns
ST_6: dest_1_0_addr_10 [1/1] 0.00ns
.critedge:23  %dest_1_0_addr_10 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 10

ST_6: stg_77 [1/1] 2.71ns
.critedge:24  store float 0.000000e+00, float* %dest_1_0_addr_10, align 8

ST_6: dest_1_0_addr_11 [1/1] 0.00ns
.critedge:25  %dest_1_0_addr_11 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 11

ST_6: stg_79 [1/1] 2.71ns
.critedge:26  store float 0.000000e+00, float* %dest_1_0_addr_11, align 4


 <State 7>: 2.71ns
ST_7: dest_1_0_addr_12 [1/1] 0.00ns
.critedge:27  %dest_1_0_addr_12 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 12

ST_7: stg_81 [1/1] 2.71ns
.critedge:28  store float 0.000000e+00, float* %dest_1_0_addr_12, align 16

ST_7: dest_1_0_addr_13 [1/1] 0.00ns
.critedge:29  %dest_1_0_addr_13 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 13

ST_7: stg_83 [1/1] 2.71ns
.critedge:30  store float 0.000000e+00, float* %dest_1_0_addr_13, align 4


 <State 8>: 2.71ns
ST_8: dest_1_0_addr_14 [1/1] 0.00ns
.critedge:31  %dest_1_0_addr_14 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 14

ST_8: stg_85 [1/1] 2.71ns
.critedge:32  store float 0.000000e+00, float* %dest_1_0_addr_14, align 8

ST_8: dest_1_0_addr_15 [1/1] 0.00ns
.critedge:33  %dest_1_0_addr_15 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 15

ST_8: stg_87 [1/1] 2.71ns
.critedge:34  store float 0.000000e+00, float* %dest_1_0_addr_15, align 4


 <State 9>: 2.71ns
ST_9: dest_1_0_addr_16 [1/1] 0.00ns
.critedge:35  %dest_1_0_addr_16 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 16

ST_9: stg_89 [1/1] 2.71ns
.critedge:36  store float 0.000000e+00, float* %dest_1_0_addr_16, align 16

ST_9: dest_1_0_addr_17 [1/1] 0.00ns
.critedge:37  %dest_1_0_addr_17 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 17

ST_9: stg_91 [1/1] 2.71ns
.critedge:38  store float 0.000000e+00, float* %dest_1_0_addr_17, align 4


 <State 10>: 2.71ns
ST_10: dest_1_0_addr_18 [1/1] 0.00ns
.critedge:39  %dest_1_0_addr_18 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 18

ST_10: stg_93 [1/1] 2.71ns
.critedge:40  store float 0.000000e+00, float* %dest_1_0_addr_18, align 8

ST_10: dest_1_0_addr_19 [1/1] 0.00ns
.critedge:41  %dest_1_0_addr_19 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 19

ST_10: stg_95 [1/1] 2.71ns
.critedge:42  store float 0.000000e+00, float* %dest_1_0_addr_19, align 4


 <State 11>: 2.71ns
ST_11: dest_1_0_addr_20 [1/1] 0.00ns
.critedge:43  %dest_1_0_addr_20 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 20

ST_11: stg_97 [1/1] 2.71ns
.critedge:44  store float 0.000000e+00, float* %dest_1_0_addr_20, align 16

ST_11: dest_1_0_addr_21 [1/1] 0.00ns
.critedge:45  %dest_1_0_addr_21 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 21

ST_11: stg_99 [1/1] 2.71ns
.critedge:46  store float 0.000000e+00, float* %dest_1_0_addr_21, align 4


 <State 12>: 2.71ns
ST_12: dest_1_0_addr_22 [1/1] 0.00ns
.critedge:47  %dest_1_0_addr_22 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 22

ST_12: stg_101 [1/1] 2.71ns
.critedge:48  store float 0.000000e+00, float* %dest_1_0_addr_22, align 8

ST_12: dest_1_0_addr_23 [1/1] 0.00ns
.critedge:49  %dest_1_0_addr_23 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 23

ST_12: stg_103 [1/1] 2.71ns
.critedge:50  store float 0.000000e+00, float* %dest_1_0_addr_23, align 4


 <State 13>: 2.71ns
ST_13: dest_1_0_addr_24 [1/1] 0.00ns
.critedge:51  %dest_1_0_addr_24 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 24

ST_13: stg_105 [1/1] 2.71ns
.critedge:52  store float 0.000000e+00, float* %dest_1_0_addr_24, align 16

ST_13: dest_1_0_addr_25 [1/1] 0.00ns
.critedge:53  %dest_1_0_addr_25 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 25

ST_13: stg_107 [1/1] 2.71ns
.critedge:54  store float 0.000000e+00, float* %dest_1_0_addr_25, align 4


 <State 14>: 2.71ns
ST_14: dest_1_0_addr_26 [1/1] 0.00ns
.critedge:55  %dest_1_0_addr_26 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 26

ST_14: stg_109 [1/1] 2.71ns
.critedge:56  store float 0.000000e+00, float* %dest_1_0_addr_26, align 8

ST_14: dest_1_0_addr_27 [1/1] 0.00ns
.critedge:57  %dest_1_0_addr_27 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 27

ST_14: stg_111 [1/1] 2.71ns
.critedge:58  store float 0.000000e+00, float* %dest_1_0_addr_27, align 4


 <State 15>: 2.71ns
ST_15: dest_1_0_addr_28 [1/1] 0.00ns
.critedge:59  %dest_1_0_addr_28 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 28

ST_15: stg_113 [1/1] 2.71ns
.critedge:60  store float 0.000000e+00, float* %dest_1_0_addr_28, align 16

ST_15: dest_1_0_addr_29 [1/1] 0.00ns
.critedge:61  %dest_1_0_addr_29 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 29

ST_15: stg_115 [1/1] 2.71ns
.critedge:62  store float 0.000000e+00, float* %dest_1_0_addr_29, align 4


 <State 16>: 2.71ns
ST_16: dest_1_0_addr_30 [1/1] 0.00ns
.critedge:63  %dest_1_0_addr_30 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 30

ST_16: stg_117 [1/1] 2.71ns
.critedge:64  store float 0.000000e+00, float* %dest_1_0_addr_30, align 8

ST_16: dest_1_0_addr_31 [1/1] 0.00ns
.critedge:65  %dest_1_0_addr_31 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 31

ST_16: stg_119 [1/1] 2.71ns
.critedge:66  store float 0.000000e+00, float* %dest_1_0_addr_31, align 4


 <State 17>: 2.71ns
ST_17: dest_1_0_addr_32 [1/1] 0.00ns
.critedge:67  %dest_1_0_addr_32 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 32

ST_17: stg_121 [1/1] 2.71ns
.critedge:68  store float 0.000000e+00, float* %dest_1_0_addr_32, align 16

ST_17: dest_1_0_addr_33 [1/1] 0.00ns
.critedge:69  %dest_1_0_addr_33 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 33

ST_17: stg_123 [1/1] 2.71ns
.critedge:70  store float 0.000000e+00, float* %dest_1_0_addr_33, align 4


 <State 18>: 2.71ns
ST_18: dest_1_0_addr_34 [1/1] 0.00ns
.critedge:71  %dest_1_0_addr_34 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 34

ST_18: stg_125 [1/1] 2.71ns
.critedge:72  store float 0.000000e+00, float* %dest_1_0_addr_34, align 8

ST_18: dest_1_0_addr_35 [1/1] 0.00ns
.critedge:73  %dest_1_0_addr_35 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 35

ST_18: stg_127 [1/1] 2.71ns
.critedge:74  store float 0.000000e+00, float* %dest_1_0_addr_35, align 4


 <State 19>: 2.71ns
ST_19: dest_1_0_addr_36 [1/1] 0.00ns
.critedge:75  %dest_1_0_addr_36 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 36

ST_19: stg_129 [1/1] 2.71ns
.critedge:76  store float 0.000000e+00, float* %dest_1_0_addr_36, align 16

ST_19: dest_1_0_addr_37 [1/1] 0.00ns
.critedge:77  %dest_1_0_addr_37 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 37

ST_19: stg_131 [1/1] 2.71ns
.critedge:78  store float 0.000000e+00, float* %dest_1_0_addr_37, align 4


 <State 20>: 2.71ns
ST_20: dest_1_0_addr_38 [1/1] 0.00ns
.critedge:79  %dest_1_0_addr_38 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 38

ST_20: stg_133 [1/1] 2.71ns
.critedge:80  store float 0.000000e+00, float* %dest_1_0_addr_38, align 8

ST_20: dest_1_0_addr_39 [1/1] 0.00ns
.critedge:81  %dest_1_0_addr_39 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 39

ST_20: stg_135 [1/1] 2.71ns
.critedge:82  store float 0.000000e+00, float* %dest_1_0_addr_39, align 4


 <State 21>: 2.71ns
ST_21: dest_1_0_addr_40 [1/1] 0.00ns
.critedge:83  %dest_1_0_addr_40 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 40

ST_21: stg_137 [1/1] 2.71ns
.critedge:84  store float 0.000000e+00, float* %dest_1_0_addr_40, align 16

ST_21: dest_1_0_addr_41 [1/1] 0.00ns
.critedge:85  %dest_1_0_addr_41 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 41

ST_21: stg_139 [1/1] 2.71ns
.critedge:86  store float 0.000000e+00, float* %dest_1_0_addr_41, align 4


 <State 22>: 2.71ns
ST_22: dest_1_0_addr_42 [1/1] 0.00ns
.critedge:87  %dest_1_0_addr_42 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 42

ST_22: stg_141 [1/1] 2.71ns
.critedge:88  store float 0.000000e+00, float* %dest_1_0_addr_42, align 8

ST_22: dest_1_0_addr_43 [1/1] 0.00ns
.critedge:89  %dest_1_0_addr_43 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 43

ST_22: stg_143 [1/1] 2.71ns
.critedge:90  store float 0.000000e+00, float* %dest_1_0_addr_43, align 4


 <State 23>: 2.71ns
ST_23: dest_1_0_addr_44 [1/1] 0.00ns
.critedge:91  %dest_1_0_addr_44 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 44

ST_23: stg_145 [1/1] 2.71ns
.critedge:92  store float 0.000000e+00, float* %dest_1_0_addr_44, align 16

ST_23: dest_1_0_addr_45 [1/1] 0.00ns
.critedge:93  %dest_1_0_addr_45 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 45

ST_23: stg_147 [1/1] 2.71ns
.critedge:94  store float 0.000000e+00, float* %dest_1_0_addr_45, align 4


 <State 24>: 2.71ns
ST_24: dest_1_0_addr_46 [1/1] 0.00ns
.critedge:95  %dest_1_0_addr_46 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 46

ST_24: stg_149 [1/1] 2.71ns
.critedge:96  store float 0.000000e+00, float* %dest_1_0_addr_46, align 8

ST_24: dest_1_0_addr_47 [1/1] 0.00ns
.critedge:97  %dest_1_0_addr_47 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 47

ST_24: stg_151 [1/1] 2.71ns
.critedge:98  store float 0.000000e+00, float* %dest_1_0_addr_47, align 4


 <State 25>: 2.71ns
ST_25: dest_1_0_addr_48 [1/1] 0.00ns
.critedge:99  %dest_1_0_addr_48 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 48

ST_25: stg_153 [1/1] 2.71ns
.critedge:100  store float 0.000000e+00, float* %dest_1_0_addr_48, align 16

ST_25: dest_1_0_addr_49 [1/1] 0.00ns
.critedge:101  %dest_1_0_addr_49 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 49

ST_25: stg_155 [1/1] 2.71ns
.critedge:102  store float 0.000000e+00, float* %dest_1_0_addr_49, align 4


 <State 26>: 2.71ns
ST_26: dest_1_0_addr_50 [1/1] 0.00ns
.critedge:103  %dest_1_0_addr_50 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 50

ST_26: stg_157 [1/1] 2.71ns
.critedge:104  store float 0.000000e+00, float* %dest_1_0_addr_50, align 8

ST_26: dest_1_0_addr_51 [1/1] 0.00ns
.critedge:105  %dest_1_0_addr_51 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 51

ST_26: stg_159 [1/1] 2.71ns
.critedge:106  store float 0.000000e+00, float* %dest_1_0_addr_51, align 4


 <State 27>: 2.71ns
ST_27: dest_1_0_addr_52 [1/1] 0.00ns
.critedge:107  %dest_1_0_addr_52 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 52

ST_27: stg_161 [1/1] 2.71ns
.critedge:108  store float 0.000000e+00, float* %dest_1_0_addr_52, align 16

ST_27: dest_1_0_addr_53 [1/1] 0.00ns
.critedge:109  %dest_1_0_addr_53 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 53

ST_27: stg_163 [1/1] 2.71ns
.critedge:110  store float 0.000000e+00, float* %dest_1_0_addr_53, align 4


 <State 28>: 2.71ns
ST_28: dest_1_0_addr_54 [1/1] 0.00ns
.critedge:111  %dest_1_0_addr_54 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 54

ST_28: stg_165 [1/1] 2.71ns
.critedge:112  store float 0.000000e+00, float* %dest_1_0_addr_54, align 8

ST_28: dest_1_0_addr_55 [1/1] 0.00ns
.critedge:113  %dest_1_0_addr_55 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 55

ST_28: stg_167 [1/1] 2.71ns
.critedge:114  store float 0.000000e+00, float* %dest_1_0_addr_55, align 4


 <State 29>: 2.71ns
ST_29: dest_1_0_addr_56 [1/1] 0.00ns
.critedge:115  %dest_1_0_addr_56 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 56

ST_29: stg_169 [1/1] 2.71ns
.critedge:116  store float 0.000000e+00, float* %dest_1_0_addr_56, align 16

ST_29: dest_1_0_addr_57 [1/1] 0.00ns
.critedge:117  %dest_1_0_addr_57 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 57

ST_29: stg_171 [1/1] 2.71ns
.critedge:118  store float 0.000000e+00, float* %dest_1_0_addr_57, align 4


 <State 30>: 2.71ns
ST_30: dest_1_0_addr_58 [1/1] 0.00ns
.critedge:119  %dest_1_0_addr_58 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 58

ST_30: stg_173 [1/1] 2.71ns
.critedge:120  store float 0.000000e+00, float* %dest_1_0_addr_58, align 8

ST_30: dest_1_0_addr_59 [1/1] 0.00ns
.critedge:121  %dest_1_0_addr_59 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 59

ST_30: stg_175 [1/1] 2.71ns
.critedge:122  store float 0.000000e+00, float* %dest_1_0_addr_59, align 4


 <State 31>: 2.71ns
ST_31: dest_1_0_addr_60 [1/1] 0.00ns
.critedge:123  %dest_1_0_addr_60 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 60

ST_31: stg_177 [1/1] 2.71ns
.critedge:124  store float 0.000000e+00, float* %dest_1_0_addr_60, align 16

ST_31: dest_1_0_addr_61 [1/1] 0.00ns
.critedge:125  %dest_1_0_addr_61 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 61

ST_31: stg_179 [1/1] 2.71ns
.critedge:126  store float 0.000000e+00, float* %dest_1_0_addr_61, align 4


 <State 32>: 2.71ns
ST_32: dest_1_0_addr_62 [1/1] 0.00ns
.critedge:127  %dest_1_0_addr_62 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 62

ST_32: stg_181 [1/1] 2.71ns
.critedge:128  store float 0.000000e+00, float* %dest_1_0_addr_62, align 8

ST_32: dest_1_0_addr_63 [1/1] 0.00ns
.critedge:129  %dest_1_0_addr_63 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 63

ST_32: stg_183 [1/1] 2.71ns
.critedge:130  store float 0.000000e+00, float* %dest_1_0_addr_63, align 4


 <State 33>: 2.71ns
ST_33: dest_1_0_addr_64 [1/1] 0.00ns
.critedge:131  %dest_1_0_addr_64 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 64

ST_33: stg_185 [1/1] 2.71ns
.critedge:132  store float 0.000000e+00, float* %dest_1_0_addr_64, align 16

ST_33: dest_1_0_addr_65 [1/1] 0.00ns
.critedge:133  %dest_1_0_addr_65 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 65

ST_33: stg_187 [1/1] 2.71ns
.critedge:134  store float 0.000000e+00, float* %dest_1_0_addr_65, align 4


 <State 34>: 2.71ns
ST_34: dest_1_0_addr_66 [1/1] 0.00ns
.critedge:135  %dest_1_0_addr_66 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 66

ST_34: stg_189 [1/1] 2.71ns
.critedge:136  store float 0.000000e+00, float* %dest_1_0_addr_66, align 8

ST_34: dest_1_0_addr_67 [1/1] 0.00ns
.critedge:137  %dest_1_0_addr_67 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 67

ST_34: stg_191 [1/1] 2.71ns
.critedge:138  store float 0.000000e+00, float* %dest_1_0_addr_67, align 4


 <State 35>: 2.71ns
ST_35: dest_1_0_addr_68 [1/1] 0.00ns
.critedge:139  %dest_1_0_addr_68 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 68

ST_35: stg_193 [1/1] 2.71ns
.critedge:140  store float 0.000000e+00, float* %dest_1_0_addr_68, align 16

ST_35: dest_1_0_addr_69 [1/1] 0.00ns
.critedge:141  %dest_1_0_addr_69 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 69

ST_35: stg_195 [1/1] 2.71ns
.critedge:142  store float 0.000000e+00, float* %dest_1_0_addr_69, align 4


 <State 36>: 2.71ns
ST_36: dest_1_0_addr_70 [1/1] 0.00ns
.critedge:143  %dest_1_0_addr_70 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 70

ST_36: stg_197 [1/1] 2.71ns
.critedge:144  store float 0.000000e+00, float* %dest_1_0_addr_70, align 8

ST_36: dest_1_0_addr_71 [1/1] 0.00ns
.critedge:145  %dest_1_0_addr_71 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 71

ST_36: stg_199 [1/1] 2.71ns
.critedge:146  store float 0.000000e+00, float* %dest_1_0_addr_71, align 4


 <State 37>: 2.71ns
ST_37: dest_1_0_addr_72 [1/1] 0.00ns
.critedge:147  %dest_1_0_addr_72 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 72

ST_37: stg_201 [1/1] 2.71ns
.critedge:148  store float 0.000000e+00, float* %dest_1_0_addr_72, align 16

ST_37: dest_1_0_addr_73 [1/1] 0.00ns
.critedge:149  %dest_1_0_addr_73 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 73

ST_37: stg_203 [1/1] 2.71ns
.critedge:150  store float 0.000000e+00, float* %dest_1_0_addr_73, align 4


 <State 38>: 2.71ns
ST_38: dest_1_0_addr_74 [1/1] 0.00ns
.critedge:151  %dest_1_0_addr_74 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 74

ST_38: stg_205 [1/1] 2.71ns
.critedge:152  store float 0.000000e+00, float* %dest_1_0_addr_74, align 8

ST_38: dest_1_0_addr_75 [1/1] 0.00ns
.critedge:153  %dest_1_0_addr_75 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 75

ST_38: stg_207 [1/1] 2.71ns
.critedge:154  store float 0.000000e+00, float* %dest_1_0_addr_75, align 4


 <State 39>: 2.71ns
ST_39: dest_1_0_addr_76 [1/1] 0.00ns
.critedge:155  %dest_1_0_addr_76 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 76

ST_39: stg_209 [1/1] 2.71ns
.critedge:156  store float 0.000000e+00, float* %dest_1_0_addr_76, align 16

ST_39: dest_1_0_addr_77 [1/1] 0.00ns
.critedge:157  %dest_1_0_addr_77 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 77

ST_39: stg_211 [1/1] 2.71ns
.critedge:158  store float 0.000000e+00, float* %dest_1_0_addr_77, align 4


 <State 40>: 2.71ns
ST_40: dest_1_0_addr_78 [1/1] 0.00ns
.critedge:159  %dest_1_0_addr_78 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 78

ST_40: stg_213 [1/1] 2.71ns
.critedge:160  store float 0.000000e+00, float* %dest_1_0_addr_78, align 8

ST_40: dest_1_0_addr_79 [1/1] 0.00ns
.critedge:161  %dest_1_0_addr_79 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 79

ST_40: stg_215 [1/1] 2.71ns
.critedge:162  store float 0.000000e+00, float* %dest_1_0_addr_79, align 4


 <State 41>: 2.71ns
ST_41: dest_1_0_addr_80 [1/1] 0.00ns
.critedge:163  %dest_1_0_addr_80 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 80

ST_41: stg_217 [1/1] 2.71ns
.critedge:164  store float 0.000000e+00, float* %dest_1_0_addr_80, align 16

ST_41: dest_1_0_addr_81 [1/1] 0.00ns
.critedge:165  %dest_1_0_addr_81 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 81

ST_41: stg_219 [1/1] 2.71ns
.critedge:166  store float 0.000000e+00, float* %dest_1_0_addr_81, align 4


 <State 42>: 2.71ns
ST_42: dest_1_0_addr_82 [1/1] 0.00ns
.critedge:167  %dest_1_0_addr_82 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 82

ST_42: stg_221 [1/1] 2.71ns
.critedge:168  store float 0.000000e+00, float* %dest_1_0_addr_82, align 8

ST_42: dest_1_0_addr_83 [1/1] 0.00ns
.critedge:169  %dest_1_0_addr_83 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 83

ST_42: stg_223 [1/1] 2.71ns
.critedge:170  store float 0.000000e+00, float* %dest_1_0_addr_83, align 4


 <State 43>: 2.71ns
ST_43: dest_1_0_addr_84 [1/1] 0.00ns
.critedge:171  %dest_1_0_addr_84 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 84

ST_43: stg_225 [1/1] 2.71ns
.critedge:172  store float 0.000000e+00, float* %dest_1_0_addr_84, align 16

ST_43: dest_1_0_addr_85 [1/1] 0.00ns
.critedge:173  %dest_1_0_addr_85 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 85

ST_43: stg_227 [1/1] 2.71ns
.critedge:174  store float 0.000000e+00, float* %dest_1_0_addr_85, align 4


 <State 44>: 2.71ns
ST_44: dest_1_0_addr_86 [1/1] 0.00ns
.critedge:175  %dest_1_0_addr_86 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 86

ST_44: stg_229 [1/1] 2.71ns
.critedge:176  store float 0.000000e+00, float* %dest_1_0_addr_86, align 8

ST_44: dest_1_0_addr_87 [1/1] 0.00ns
.critedge:177  %dest_1_0_addr_87 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 87

ST_44: stg_231 [1/1] 2.71ns
.critedge:178  store float 0.000000e+00, float* %dest_1_0_addr_87, align 4


 <State 45>: 2.71ns
ST_45: dest_1_0_addr_88 [1/1] 0.00ns
.critedge:179  %dest_1_0_addr_88 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 88

ST_45: stg_233 [1/1] 2.71ns
.critedge:180  store float 0.000000e+00, float* %dest_1_0_addr_88, align 16

ST_45: dest_1_0_addr_89 [1/1] 0.00ns
.critedge:181  %dest_1_0_addr_89 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 89

ST_45: stg_235 [1/1] 2.71ns
.critedge:182  store float 0.000000e+00, float* %dest_1_0_addr_89, align 4


 <State 46>: 2.71ns
ST_46: dest_1_0_addr_90 [1/1] 0.00ns
.critedge:183  %dest_1_0_addr_90 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 90

ST_46: stg_237 [1/1] 2.71ns
.critedge:184  store float 0.000000e+00, float* %dest_1_0_addr_90, align 8

ST_46: dest_1_0_addr_91 [1/1] 0.00ns
.critedge:185  %dest_1_0_addr_91 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 91

ST_46: stg_239 [1/1] 2.71ns
.critedge:186  store float 0.000000e+00, float* %dest_1_0_addr_91, align 4


 <State 47>: 2.71ns
ST_47: dest_1_0_addr_92 [1/1] 0.00ns
.critedge:187  %dest_1_0_addr_92 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 92

ST_47: stg_241 [1/1] 2.71ns
.critedge:188  store float 0.000000e+00, float* %dest_1_0_addr_92, align 16

ST_47: dest_1_0_addr_93 [1/1] 0.00ns
.critedge:189  %dest_1_0_addr_93 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 93

ST_47: stg_243 [1/1] 2.71ns
.critedge:190  store float 0.000000e+00, float* %dest_1_0_addr_93, align 4


 <State 48>: 2.71ns
ST_48: dest_1_0_addr_94 [1/1] 0.00ns
.critedge:191  %dest_1_0_addr_94 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 94

ST_48: stg_245 [1/1] 2.71ns
.critedge:192  store float 0.000000e+00, float* %dest_1_0_addr_94, align 8

ST_48: dest_1_0_addr_95 [1/1] 0.00ns
.critedge:193  %dest_1_0_addr_95 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 95

ST_48: stg_247 [1/1] 2.71ns
.critedge:194  store float 0.000000e+00, float* %dest_1_0_addr_95, align 4


 <State 49>: 2.71ns
ST_49: dest_1_0_addr_96 [1/1] 0.00ns
.critedge:195  %dest_1_0_addr_96 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 96

ST_49: stg_249 [1/1] 2.71ns
.critedge:196  store float 0.000000e+00, float* %dest_1_0_addr_96, align 16

ST_49: dest_1_0_addr_97 [1/1] 0.00ns
.critedge:197  %dest_1_0_addr_97 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 97

ST_49: stg_251 [1/1] 2.71ns
.critedge:198  store float 0.000000e+00, float* %dest_1_0_addr_97, align 4


 <State 50>: 2.71ns
ST_50: dest_1_0_addr_98 [1/1] 0.00ns
.critedge:199  %dest_1_0_addr_98 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 98

ST_50: stg_253 [1/1] 2.71ns
.critedge:200  store float 0.000000e+00, float* %dest_1_0_addr_98, align 8

ST_50: dest_1_0_addr_99 [1/1] 0.00ns
.critedge:201  %dest_1_0_addr_99 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 99

ST_50: stg_255 [1/1] 2.71ns
.critedge:202  store float 0.000000e+00, float* %dest_1_0_addr_99, align 4


 <State 51>: 0.00ns
ST_51: stg_256 [2/2] 0.00ns
.critedge:203  call fastcc void @worker_COO_SpMV.0([100 x float]* %dest_1_0) nounwind


 <State 52>: 1.57ns
ST_52: stg_257 [1/1] 0.00ns
.critedge:0  call void (...)* @_ssdm_op_SpecBitsMap([100 x float]* %dest) nounwind, !map !26

ST_52: stg_258 [1/1] 0.00ns
.critedge:1  call void (...)* @_ssdm_op_SpecTopModule([7 x i8]* @worker_str) nounwind

ST_52: stg_259 [1/2] 0.00ns
.critedge:203  call fastcc void @worker_COO_SpMV.0([100 x float]* %dest_1_0) nounwind

ST_52: empty [1/1] 0.00ns
.critedge:204  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1, i64 1, i64 1) nounwind

ST_52: stg_261 [1/1] 1.57ns
.critedge:205  br label %0


 <State 53>: 2.71ns
ST_53: j2 [1/1] 0.00ns
:0  %j2 = phi i7 [ 0, %.critedge ], [ %j, %branch0 ]

ST_53: exitcond [1/1] 1.97ns
:1  %exitcond = icmp eq i7 %j2, -28

ST_53: empty_3 [1/1] 0.00ns
:2  %empty_3 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 100, i64 100, i64 100) nounwind

ST_53: j [1/1] 1.72ns
:3  %j = add i7 %j2, 1

ST_53: stg_266 [1/1] 0.00ns
:4  br i1 %exitcond, label %1, label %branch0

ST_53: tmp_4 [1/1] 0.00ns
branch0:0  %tmp_4 = zext i7 %j2 to i64

ST_53: dest_1_0_addr_100 [1/1] 0.00ns
branch0:1  %dest_1_0_addr_100 = getelementptr [100 x float]* %dest_1_0, i64 0, i64 %tmp_4

ST_53: dest_1_0_load [2/2] 2.71ns
branch0:2  %dest_1_0_load = load float* %dest_1_0_addr_100, align 4

ST_53: empty_4 [1/1] 0.00ns
:0  %empty_4 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1, i64 1, i64 1) nounwind

ST_53: stg_271 [1/1] 0.00ns
:1  ret void


 <State 54>: 5.42ns
ST_54: dest_1_0_load [1/2] 2.71ns
branch0:2  %dest_1_0_load = load float* %dest_1_0_addr_100, align 4

ST_54: dest_addr [1/1] 0.00ns
branch0:3  %dest_addr = getelementptr [100 x float]* %dest, i64 0, i64 %tmp_4

ST_54: stg_274 [1/1] 2.71ns
branch0:4  store float %dest_1_0_load, float* %dest_addr, align 4

ST_54: stg_275 [1/1] 0.00ns
branch0:5  br label %0



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 No timing violations. 


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
