// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module worker_create_COO (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_r_address0,
        input_r_ce0,
        input_r_q0,
        row_address0,
        row_ce0,
        row_we0,
        row_d0,
        col_address0,
        col_ce0,
        col_we0,
        col_d0,
        val_r_address0,
        val_r_ce0,
        val_r_we0,
        val_r_d0,
        nnz_address0,
        nnz_ce0,
        nnz_q0,
        ap_return
);

parameter    ap_ST_st1_fsm_0 = 9'b1;
parameter    ap_ST_st2_fsm_1 = 9'b10;
parameter    ap_ST_st3_fsm_2 = 9'b100;
parameter    ap_ST_st4_fsm_3 = 9'b1000;
parameter    ap_ST_st5_fsm_4 = 9'b10000;
parameter    ap_ST_st6_fsm_5 = 9'b100000;
parameter    ap_ST_st7_fsm_6 = 9'b1000000;
parameter    ap_ST_st8_fsm_7 = 9'b10000000;
parameter    ap_ST_st9_fsm_8 = 9'b100000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv12_0 = 12'b000000000000;
parameter    ap_const_lv7_0 = 7'b0000000;
parameter    ap_const_lv6_3F = 6'b111111;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_const_lv5_19 = 5'b11001;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv12_9C4 = 12'b100111000100;
parameter    ap_const_lv12_1 = 12'b1;
parameter    ap_const_lv12_64 = 12'b1100100;
parameter    ap_const_lv7_64 = 7'b1100100;
parameter    ap_const_lv7_1 = 7'b1;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv23_0 = 23'b00000000000000000000000;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] input_r_address0;
output   input_r_ce0;
input  [31:0] input_r_q0;
output  [11:0] row_address0;
output   row_ce0;
output   row_we0;
output  [5:0] row_d0;
output  [11:0] col_address0;
output   col_ce0;
output   col_we0;
output  [7:0] col_d0;
output  [11:0] val_r_address0;
output   val_r_ce0;
output   val_r_we0;
output  [31:0] val_r_d0;
output  [4:0] nnz_address0;
output   nnz_ce0;
input  [31:0] nnz_q0;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg input_r_ce0;
reg[11:0] row_address0;
reg row_ce0;
reg row_we0;
reg[5:0] row_d0;
reg[11:0] col_address0;
reg col_ce0;
reg col_we0;
reg[7:0] col_d0;
reg[11:0] val_r_address0;
reg val_r_ce0;
reg val_r_we0;
reg[31:0] val_r_d0;
reg[4:0] nnz_address0;
reg nnz_ce0;

(* fsm_encoding = "none" *) reg   [8:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_26;
wire   [4:0] i_1_fu_266_p2;
reg   [4:0] i_1_reg_474;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_72;
wire   [0:0] exitcond3_fu_260_p2;
wire   [31:0] p_sep_fu_283_p3;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_87;
wire   [11:0] i_2_fu_297_p2;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_96;
reg   [31:0] cur_ind_1_reg_511;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_105;
wire   [11:0] next_mul_fu_323_p2;
reg   [11:0] next_mul_reg_517;
wire   [4:0] i_3_fu_335_p2;
reg   [4:0] i_3_reg_525;
wire   [0:0] exitcond1_fu_329_p2;
wire   [0:0] grp_fu_251_p2;
reg   [0:0] tmp_9_reg_535;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_123;
wire   [5:0] i2_cast2_cast_fu_352_p1;
reg   [5:0] i2_cast2_cast_reg_539;
wire   [6:0] j_4_fu_362_p2;
reg   [6:0] j_4_reg_547;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_137;
wire   [0:0] exitcond_fu_356_p2;
reg   [31:0] input_load_reg_558;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_154;
wire   [31:0] cur_ind_2_fu_460_p2;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_163;
wire   [0:0] tmp_15_fu_428_p2;
reg   [4:0] i_reg_161;
reg   [31:0] sep_reg_172;
reg   [11:0] i1_reg_184;
wire   [0:0] exitcond2_fu_291_p2;
reg   [4:0] i2_reg_195;
reg   [11:0] phi_mul_reg_207;
reg   [31:0] max_ind_1_reg_219;
reg   [6:0] j_reg_232;
wire   [63:0] tmp_fu_272_p1;
wire   [63:0] tmp_6_fu_303_p1;
wire   [63:0] tmp_8_fu_341_p1;
wire   [63:0] tmp_5_cast_fu_378_p1;
wire  signed [63:0] tmp_3_fu_434_p1;
reg   [31:0] cur_ind_fu_58;
wire   [31:0] start_fu_383_p2;
reg   [31:0] max_ind_fu_62;
wire   [31:0] cur_ind_0_max_ind_1_fu_452_p3;
wire   [7:0] j_cast1_cast_fu_441_p1;
wire   [31:0] sep_1_fu_277_p2;
wire   [11:0] tmp_1_cast_fu_368_p1;
wire   [11:0] tmp_5_fu_372_p2;
wire   [31:0] input_load_to_int_fu_393_p1;
wire   [7:0] tmp_12_fu_396_p4;
wire   [22:0] tmp_11_fu_406_p1;
wire   [0:0] notrhs_fu_416_p2;
wire   [0:0] notlhs_fu_410_p2;
wire   [0:0] tmp_13_fu_422_p2;
wire   [0:0] tmp_14_fu_246_p2;
wire   [0:0] tmp_4_fu_446_p2;
reg   [8:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 9'b1;
end

worker_fcmp_32ns_32ns_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
worker_fcmp_32ns_32ns_1_1_U1(
    .din0(input_load_reg_558),
    .din1(ap_const_lv32_0),
    .opcode(ap_const_lv5_1),
    .dout(tmp_14_fu_246_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st7_fsm_6) & ~(1'b0 == tmp_9_reg_535) & ~(1'b0 == exitcond_fu_356_p2))) begin
        cur_ind_fu_58 <= start_fu_383_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & ~(1'b0 == exitcond2_fu_291_p2))) begin
        cur_ind_fu_58 <= ap_const_lv32_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond3_fu_260_p2 == 1'b0))) begin
        i1_reg_184 <= ap_const_lv12_0;
    end else if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (1'b0 == exitcond2_fu_291_p2))) begin
        i1_reg_184 <= i_2_fu_297_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st7_fsm_6) & ((1'b0 == tmp_9_reg_535) | ~(1'b0 == exitcond_fu_356_p2)))) begin
        i2_reg_195 <= i_3_reg_525;
    end else if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & ~(1'b0 == exitcond2_fu_291_p2))) begin
        i2_reg_195 <= ap_const_lv5_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        i_reg_161 <= i_1_reg_474;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        i_reg_161 <= ap_const_lv5_0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_sig_cseq_ST_st9_fsm_8) & (1'b0 == tmp_15_fu_428_p2)) | ((1'b1 == ap_sig_cseq_ST_st9_fsm_8) & ~(1'b0 == tmp_15_fu_428_p2)))) begin
        j_reg_232 <= j_4_reg_547;
    end else if (((1'b1 == ap_sig_cseq_ST_st6_fsm_5) & ~(1'b0 == grp_fu_251_p2))) begin
        j_reg_232 <= ap_const_lv7_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st9_fsm_8) & ~(1'b0 == tmp_15_fu_428_p2))) begin
        max_ind_1_reg_219 <= max_ind_1_reg_219;
    end else if (((1'b1 == ap_sig_cseq_ST_st9_fsm_8) & (1'b0 == tmp_15_fu_428_p2))) begin
        max_ind_1_reg_219 <= cur_ind_2_fu_460_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st6_fsm_5) & ~(1'b0 == grp_fu_251_p2))) begin
        max_ind_1_reg_219 <= cur_ind_1_reg_511;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st9_fsm_8) & (1'b0 == tmp_15_fu_428_p2))) begin
        max_ind_fu_62 <= cur_ind_0_max_ind_1_fu_452_p3;
    end else if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & ~(1'b0 == exitcond2_fu_291_p2))) begin
        max_ind_fu_62 <= ap_const_lv32_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st7_fsm_6) & ((1'b0 == tmp_9_reg_535) | ~(1'b0 == exitcond_fu_356_p2)))) begin
        phi_mul_reg_207 <= next_mul_reg_517;
    end else if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & ~(1'b0 == exitcond2_fu_291_p2))) begin
        phi_mul_reg_207 <= ap_const_lv12_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        sep_reg_172 <= p_sep_fu_283_p3;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        sep_reg_172 <= ap_const_lv32_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        cur_ind_1_reg_511 <= cur_ind_fu_58;
        i_3_reg_525 <= i_3_fu_335_p2;
        next_mul_reg_517 <= next_mul_fu_323_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st6_fsm_5) & ~(1'b0 == grp_fu_251_p2))) begin
        i2_cast2_cast_reg_539[4 : 0] <= i2_cast2_cast_fu_352_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        i_1_reg_474 <= i_1_fu_266_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        input_load_reg_558 <= input_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st7_fsm_6) & ~(1'b0 == tmp_9_reg_535))) begin
        j_4_reg_547 <= j_4_fu_362_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        tmp_9_reg_535 <= grp_fu_251_p2;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0)) | ((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & ~(1'b0 == exitcond1_fu_329_p2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & ~(1'b0 == exitcond1_fu_329_p2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_26) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_72) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_87) begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_96) begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_105) begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_123) begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_137) begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_154) begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_163) begin
        ap_sig_cseq_ST_st9_fsm_8 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        col_address0 = tmp_3_fu_434_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        col_address0 = tmp_6_fu_303_p1;
    end else begin
        col_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) | (1'b1 == ap_sig_cseq_ST_st9_fsm_8))) begin
        col_ce0 = 1'b1;
    end else begin
        col_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        col_d0 = j_cast1_cast_fu_441_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        col_d0 = ap_const_lv8_FF;
    end else begin
        col_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st9_fsm_8) & (1'b0 == tmp_15_fu_428_p2)) | ((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (1'b0 == exitcond2_fu_291_p2)))) begin
        col_we0 = 1'b1;
    end else begin
        col_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        input_r_ce0 = 1'b1;
    end else begin
        input_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        nnz_address0 = tmp_8_fu_341_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        nnz_address0 = tmp_fu_272_p1;
    end else begin
        nnz_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) | (1'b1 == ap_sig_cseq_ST_st5_fsm_4))) begin
        nnz_ce0 = 1'b1;
    end else begin
        nnz_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        row_address0 = tmp_3_fu_434_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        row_address0 = tmp_6_fu_303_p1;
    end else begin
        row_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) | (1'b1 == ap_sig_cseq_ST_st9_fsm_8))) begin
        row_ce0 = 1'b1;
    end else begin
        row_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        row_d0 = i2_cast2_cast_reg_539;
    end else if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        row_d0 = ap_const_lv6_3F;
    end else begin
        row_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st9_fsm_8) & (1'b0 == tmp_15_fu_428_p2)) | ((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (1'b0 == exitcond2_fu_291_p2)))) begin
        row_we0 = 1'b1;
    end else begin
        row_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        val_r_address0 = tmp_3_fu_434_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        val_r_address0 = tmp_6_fu_303_p1;
    end else begin
        val_r_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) | (1'b1 == ap_sig_cseq_ST_st9_fsm_8))) begin
        val_r_ce0 = 1'b1;
    end else begin
        val_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        val_r_d0 = input_load_reg_558;
    end else if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        val_r_d0 = ap_const_lv32_0;
    end else begin
        val_r_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st9_fsm_8) & (1'b0 == tmp_15_fu_428_p2)) | ((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (1'b0 == exitcond2_fu_291_p2)))) begin
        val_r_we0 = 1'b1;
    end else begin
        val_r_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            if (~(exitcond3_fu_260_p2 == 1'b0)) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st3_fsm_2 : begin
            ap_NS_fsm = ap_ST_st2_fsm_1;
        end
        ap_ST_st4_fsm_3 : begin
            if (~(1'b0 == exitcond2_fu_291_p2)) begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end
        end
        ap_ST_st5_fsm_4 : begin
            if (~(1'b0 == exitcond1_fu_329_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end
        end
        ap_ST_st6_fsm_5 : begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : begin
            if (((1'b0 == tmp_9_reg_535) | ~(1'b0 == exitcond_fu_356_p2))) begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end
        end
        ap_ST_st8_fsm_7 : begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_return = (max_ind_fu_62 + ap_const_lv32_1);

always @ (*) begin
    ap_sig_105 = (1'b1 == ap_CS_fsm[ap_const_lv32_4]);
end

always @ (*) begin
    ap_sig_123 = (1'b1 == ap_CS_fsm[ap_const_lv32_5]);
end

always @ (*) begin
    ap_sig_137 = (1'b1 == ap_CS_fsm[ap_const_lv32_6]);
end

always @ (*) begin
    ap_sig_154 = (1'b1 == ap_CS_fsm[ap_const_lv32_7]);
end

always @ (*) begin
    ap_sig_163 = (1'b1 == ap_CS_fsm[ap_const_lv32_8]);
end

always @ (*) begin
    ap_sig_26 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_72 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_87 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

always @ (*) begin
    ap_sig_96 = (1'b1 == ap_CS_fsm[ap_const_lv32_3]);
end

assign cur_ind_0_max_ind_1_fu_452_p3 = ((tmp_4_fu_446_p2[0:0] === 1'b1) ? max_ind_1_reg_219 : max_ind_fu_62);

assign cur_ind_2_fu_460_p2 = (max_ind_1_reg_219 + sep_reg_172);

assign exitcond1_fu_329_p2 = ((i2_reg_195 == ap_const_lv5_19) ? 1'b1 : 1'b0);

assign exitcond2_fu_291_p2 = ((i1_reg_184 == ap_const_lv12_9C4) ? 1'b1 : 1'b0);

assign exitcond3_fu_260_p2 = ((i_reg_161 == ap_const_lv5_19) ? 1'b1 : 1'b0);

assign exitcond_fu_356_p2 = ((j_reg_232 == ap_const_lv7_64) ? 1'b1 : 1'b0);

assign grp_fu_251_p2 = (($signed(nnz_q0) > $signed(32'b00000000000000000000000000000000)) ? 1'b1 : 1'b0);

assign i2_cast2_cast_fu_352_p1 = i2_reg_195;

assign i_1_fu_266_p2 = (i_reg_161 + ap_const_lv5_1);

assign i_2_fu_297_p2 = (i1_reg_184 + ap_const_lv12_1);

assign i_3_fu_335_p2 = (i2_reg_195 + ap_const_lv5_1);

assign input_load_to_int_fu_393_p1 = input_load_reg_558;

assign input_r_address0 = tmp_5_cast_fu_378_p1;

assign j_4_fu_362_p2 = (j_reg_232 + ap_const_lv7_1);

assign j_cast1_cast_fu_441_p1 = j_reg_232;

assign next_mul_fu_323_p2 = (phi_mul_reg_207 + ap_const_lv12_64);

assign notlhs_fu_410_p2 = ((tmp_12_fu_396_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notrhs_fu_416_p2 = ((tmp_11_fu_406_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign p_sep_fu_283_p3 = ((grp_fu_251_p2[0:0] === 1'b1) ? sep_1_fu_277_p2 : sep_reg_172);

assign sep_1_fu_277_p2 = (sep_reg_172 + ap_const_lv32_1);

assign start_fu_383_p2 = (cur_ind_1_reg_511 + ap_const_lv32_1);

assign tmp_11_fu_406_p1 = input_load_to_int_fu_393_p1[22:0];

assign tmp_12_fu_396_p4 = {{input_load_to_int_fu_393_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_13_fu_422_p2 = (notrhs_fu_416_p2 | notlhs_fu_410_p2);

assign tmp_15_fu_428_p2 = (tmp_13_fu_422_p2 & tmp_14_fu_246_p2);

assign tmp_1_cast_fu_368_p1 = j_reg_232;

assign tmp_3_fu_434_p1 = $signed(max_ind_1_reg_219);

assign tmp_4_fu_446_p2 = (($signed(max_ind_1_reg_219) > $signed(max_ind_fu_62)) ? 1'b1 : 1'b0);

assign tmp_5_cast_fu_378_p1 = tmp_5_fu_372_p2;

assign tmp_5_fu_372_p2 = (phi_mul_reg_207 + tmp_1_cast_fu_368_p1);

assign tmp_6_fu_303_p1 = i1_reg_184;

assign tmp_8_fu_341_p1 = i2_reg_195;

assign tmp_fu_272_p1 = i_reg_161;

always @ (posedge ap_clk) begin
    i2_cast2_cast_reg_539[5] <= 1'b0;
end

endmodule //worker_create_COO
