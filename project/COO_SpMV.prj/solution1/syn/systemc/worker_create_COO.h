// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _worker_create_COO_HH_
#define _worker_create_COO_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "worker_fcmp_32ns_32ns_1_1.h"
#include "worker_create_COO_temp_row.h"
#include "worker_create_COO_temp_col.h"
#include "worker_create_COO_temp_val.h"

namespace ap_rtl {

struct worker_create_COO : public sc_module {
    // Port declarations 22
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<12> > input_r_address0;
    sc_out< sc_logic > input_r_ce0;
    sc_in< sc_lv<32> > input_r_q0;
    sc_out< sc_lv<12> > row_address0;
    sc_out< sc_logic > row_ce0;
    sc_out< sc_logic > row_we0;
    sc_out< sc_lv<5> > row_d0;
    sc_out< sc_lv<12> > col_address0;
    sc_out< sc_logic > col_ce0;
    sc_out< sc_logic > col_we0;
    sc_out< sc_lv<7> > col_d0;
    sc_out< sc_lv<12> > val_r_address0;
    sc_out< sc_logic > val_r_ce0;
    sc_out< sc_logic > val_r_we0;
    sc_out< sc_lv<32> > val_r_d0;
    sc_out< sc_lv<32> > ap_return;
    sc_signal< sc_lv<32> > ap_var_for_const0;
    sc_signal< sc_lv<5> > ap_var_for_const1;


    // Module declarations
    worker_create_COO(sc_module_name name);
    SC_HAS_PROCESS(worker_create_COO);

    ~worker_create_COO();

    sc_trace_file* mVcdFile;

    worker_create_COO_temp_row* temp_row_U;
    worker_create_COO_temp_col* temp_col_U;
    worker_create_COO_temp_val* temp_val_U;
    worker_fcmp_32ns_32ns_1_1<1,1,32,32,1>* worker_fcmp_32ns_32ns_1_1_U1;
    sc_signal< sc_lv<7> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_24;
    sc_signal< sc_lv<12> > next_mul_fu_249_p2;
    sc_signal< sc_lv<12> > next_mul_reg_455;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_64;
    sc_signal< sc_lv<5> > i_4_fu_261_p2;
    sc_signal< sc_lv<5> > i_4_reg_463;
    sc_signal< sc_lv<7> > j_1_fu_283_p2;
    sc_signal< sc_lv<7> > j_1_reg_485;
    sc_signal< sc_logic > ap_sig_cseq_ST_st3_fsm_2;
    sc_signal< bool > ap_sig_75;
    sc_signal< sc_lv<1> > exitcond1_fu_277_p2;
    sc_signal< sc_lv<32> > input_load_reg_495;
    sc_signal< sc_logic > ap_sig_cseq_ST_st4_fsm_3;
    sc_signal< bool > ap_sig_89;
    sc_signal< sc_lv<12> > i_3_fu_373_p2;
    sc_signal< sc_lv<12> > i_3_reg_508;
    sc_signal< sc_logic > ap_sig_cseq_ST_st6_fsm_5;
    sc_signal< bool > ap_sig_98;
    sc_signal< sc_lv<32> > counter_load_reg_513;
    sc_signal< sc_lv<1> > exitcond_fu_367_p2;
    sc_signal< sc_lv<1> > tmp_s_fu_379_p2;
    sc_signal< sc_lv<1> > tmp_s_reg_518;
    sc_signal< sc_lv<12> > temp_row_address0;
    sc_signal< sc_logic > temp_row_ce0;
    sc_signal< sc_logic > temp_row_we0;
    sc_signal< sc_lv<5> > temp_row_q0;
    sc_signal< sc_lv<12> > temp_col_address0;
    sc_signal< sc_logic > temp_col_ce0;
    sc_signal< sc_logic > temp_col_we0;
    sc_signal< sc_lv<7> > temp_col_q0;
    sc_signal< sc_lv<12> > temp_val_address0;
    sc_signal< sc_logic > temp_val_ce0;
    sc_signal< sc_logic > temp_val_we0;
    sc_signal< sc_lv<32> > temp_val_q0;
    sc_signal< sc_lv<5> > i_reg_187;
    sc_signal< sc_lv<12> > phi_mul_reg_200;
    sc_signal< sc_lv<7> > j_reg_212;
    sc_signal< sc_logic > ap_sig_cseq_ST_st5_fsm_4;
    sc_signal< bool > ap_sig_165;
    sc_signal< sc_lv<1> > exitcond2_fu_255_p2;
    sc_signal< sc_lv<12> > i1_reg_225;
    sc_signal< sc_logic > ap_sig_cseq_ST_st7_fsm_6;
    sc_signal< bool > ap_sig_180;
    sc_signal< sc_lv<64> > tmp_12_cast_fu_299_p1;
    sc_signal< sc_lv<64> > tmp_6_fu_345_p1;
    sc_signal< sc_lv<1> > tmp_8_fu_339_p2;
    sc_signal< sc_lv<64> > tmp_3_fu_385_p1;
    sc_signal< sc_lv<64> > tmp_4_fu_398_p1;
    sc_signal< sc_lv<32> > counter_fu_58;
    sc_signal< sc_lv<32> > counter_1_fu_352_p2;
    sc_signal< sc_lv<32> > cur_ind_1_fu_74;
    sc_signal< sc_lv<32> > start_0_s_fu_430_p3;
    sc_signal< sc_lv<32> > cur_ind_fu_78;
    sc_signal< sc_lv<32> > p_start_fu_422_p3;
    sc_signal< sc_lv<12> > tmp_1_cast_fu_289_p1;
    sc_signal< sc_lv<12> > tmp_1_fu_293_p2;
    sc_signal< sc_lv<32> > input_load_to_int_fu_304_p1;
    sc_signal< sc_lv<8> > tmp_7_fu_307_p4;
    sc_signal< sc_lv<23> > tmp_fu_317_p1;
    sc_signal< sc_lv<1> > notrhs_fu_327_p2;
    sc_signal< sc_lv<1> > notlhs_fu_321_p2;
    sc_signal< sc_lv<1> > tmp_9_fu_333_p2;
    sc_signal< sc_lv<1> > tmp_2_fu_236_p2;
    sc_signal< sc_lv<32> > i1_cast1_fu_363_p1;
    sc_signal< sc_lv<32> > cur_ind_2_fu_405_p2;
    sc_signal< sc_lv<1> > tmp_5_fu_411_p2;
    sc_signal< sc_lv<32> > start_fu_416_p2;
    sc_signal< sc_lv<7> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<7> ap_ST_st1_fsm_0;
    static const sc_lv<7> ap_ST_st2_fsm_1;
    static const sc_lv<7> ap_ST_st3_fsm_2;
    static const sc_lv<7> ap_ST_st4_fsm_3;
    static const sc_lv<7> ap_ST_st5_fsm_4;
    static const sc_lv<7> ap_ST_st6_fsm_5;
    static const sc_lv<7> ap_ST_st7_fsm_6;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<12> ap_const_lv12_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<12> ap_const_lv12_64;
    static const sc_lv<5> ap_const_lv5_19;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<7> ap_const_lv7_64;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<12> ap_const_lv12_9C4;
    static const sc_lv<12> ap_const_lv12_1;
    static const sc_lv<32> ap_const_lv32_8;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_ap_sig_165();
    void thread_ap_sig_180();
    void thread_ap_sig_24();
    void thread_ap_sig_64();
    void thread_ap_sig_75();
    void thread_ap_sig_89();
    void thread_ap_sig_98();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_cseq_ST_st3_fsm_2();
    void thread_ap_sig_cseq_ST_st4_fsm_3();
    void thread_ap_sig_cseq_ST_st5_fsm_4();
    void thread_ap_sig_cseq_ST_st6_fsm_5();
    void thread_ap_sig_cseq_ST_st7_fsm_6();
    void thread_col_address0();
    void thread_col_ce0();
    void thread_col_d0();
    void thread_col_we0();
    void thread_counter_1_fu_352_p2();
    void thread_cur_ind_2_fu_405_p2();
    void thread_exitcond1_fu_277_p2();
    void thread_exitcond2_fu_255_p2();
    void thread_exitcond_fu_367_p2();
    void thread_i1_cast1_fu_363_p1();
    void thread_i_3_fu_373_p2();
    void thread_i_4_fu_261_p2();
    void thread_input_load_to_int_fu_304_p1();
    void thread_input_r_address0();
    void thread_input_r_ce0();
    void thread_j_1_fu_283_p2();
    void thread_next_mul_fu_249_p2();
    void thread_notlhs_fu_321_p2();
    void thread_notrhs_fu_327_p2();
    void thread_p_start_fu_422_p3();
    void thread_row_address0();
    void thread_row_ce0();
    void thread_row_d0();
    void thread_row_we0();
    void thread_start_0_s_fu_430_p3();
    void thread_start_fu_416_p2();
    void thread_temp_col_address0();
    void thread_temp_col_ce0();
    void thread_temp_col_we0();
    void thread_temp_row_address0();
    void thread_temp_row_ce0();
    void thread_temp_row_we0();
    void thread_temp_val_address0();
    void thread_temp_val_ce0();
    void thread_temp_val_we0();
    void thread_tmp_12_cast_fu_299_p1();
    void thread_tmp_1_cast_fu_289_p1();
    void thread_tmp_1_fu_293_p2();
    void thread_tmp_3_fu_385_p1();
    void thread_tmp_4_fu_398_p1();
    void thread_tmp_5_fu_411_p2();
    void thread_tmp_6_fu_345_p1();
    void thread_tmp_7_fu_307_p4();
    void thread_tmp_8_fu_339_p2();
    void thread_tmp_9_fu_333_p2();
    void thread_tmp_fu_317_p1();
    void thread_tmp_s_fu_379_p2();
    void thread_val_r_address0();
    void thread_val_r_ce0();
    void thread_val_r_d0();
    void thread_val_r_we0();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
