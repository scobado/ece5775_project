// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _worker_create_COO_HH_
#define _worker_create_COO_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "worker_fcmp_32ns_32ns_1_1.h"

namespace ap_rtl {

struct worker_create_COO : public sc_module {
    // Port declarations 25
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<12> > input_r_address0;
    sc_out< sc_logic > input_r_ce0;
    sc_in< sc_lv<32> > input_r_q0;
    sc_out< sc_lv<12> > row_address0;
    sc_out< sc_logic > row_ce0;
    sc_out< sc_logic > row_we0;
    sc_out< sc_lv<6> > row_d0;
    sc_out< sc_lv<12> > col_address0;
    sc_out< sc_logic > col_ce0;
    sc_out< sc_logic > col_we0;
    sc_out< sc_lv<8> > col_d0;
    sc_out< sc_lv<12> > val_r_address0;
    sc_out< sc_logic > val_r_ce0;
    sc_out< sc_logic > val_r_we0;
    sc_out< sc_lv<32> > val_r_d0;
    sc_out< sc_lv<5> > nnz_address0;
    sc_out< sc_logic > nnz_ce0;
    sc_in< sc_lv<32> > nnz_q0;
    sc_out< sc_lv<32> > ap_return;
    sc_signal< sc_lv<32> > ap_var_for_const0;
    sc_signal< sc_lv<5> > ap_var_for_const1;


    // Module declarations
    worker_create_COO(sc_module_name name);
    SC_HAS_PROCESS(worker_create_COO);

    ~worker_create_COO();

    sc_trace_file* mVcdFile;

    worker_fcmp_32ns_32ns_1_1<1,1,32,32,1>* worker_fcmp_32ns_32ns_1_1_U1;
    sc_signal< sc_lv<9> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_26;
    sc_signal< sc_lv<5> > i_1_fu_266_p2;
    sc_signal< sc_lv<5> > i_1_reg_474;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_72;
    sc_signal< sc_lv<1> > exitcond3_fu_260_p2;
    sc_signal< sc_lv<32> > p_sep_fu_283_p3;
    sc_signal< sc_logic > ap_sig_cseq_ST_st3_fsm_2;
    sc_signal< bool > ap_sig_87;
    sc_signal< sc_lv<12> > i_2_fu_297_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st4_fsm_3;
    sc_signal< bool > ap_sig_96;
    sc_signal< sc_lv<32> > cur_ind_1_reg_511;
    sc_signal< sc_logic > ap_sig_cseq_ST_st5_fsm_4;
    sc_signal< bool > ap_sig_105;
    sc_signal< sc_lv<12> > next_mul_fu_323_p2;
    sc_signal< sc_lv<12> > next_mul_reg_517;
    sc_signal< sc_lv<5> > i_3_fu_335_p2;
    sc_signal< sc_lv<5> > i_3_reg_525;
    sc_signal< sc_lv<1> > exitcond1_fu_329_p2;
    sc_signal< sc_lv<1> > grp_fu_251_p2;
    sc_signal< sc_lv<1> > tmp_9_reg_535;
    sc_signal< sc_logic > ap_sig_cseq_ST_st6_fsm_5;
    sc_signal< bool > ap_sig_123;
    sc_signal< sc_lv<6> > i2_cast2_cast_fu_352_p1;
    sc_signal< sc_lv<6> > i2_cast2_cast_reg_539;
    sc_signal< sc_lv<7> > j_4_fu_362_p2;
    sc_signal< sc_lv<7> > j_4_reg_547;
    sc_signal< sc_logic > ap_sig_cseq_ST_st7_fsm_6;
    sc_signal< bool > ap_sig_137;
    sc_signal< sc_lv<1> > exitcond_fu_356_p2;
    sc_signal< sc_lv<32> > input_load_reg_558;
    sc_signal< sc_logic > ap_sig_cseq_ST_st8_fsm_7;
    sc_signal< bool > ap_sig_154;
    sc_signal< sc_lv<32> > cur_ind_2_fu_460_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st9_fsm_8;
    sc_signal< bool > ap_sig_163;
    sc_signal< sc_lv<1> > tmp_15_fu_428_p2;
    sc_signal< sc_lv<5> > i_reg_161;
    sc_signal< sc_lv<32> > sep_reg_172;
    sc_signal< sc_lv<12> > i1_reg_184;
    sc_signal< sc_lv<1> > exitcond2_fu_291_p2;
    sc_signal< sc_lv<5> > i2_reg_195;
    sc_signal< sc_lv<12> > phi_mul_reg_207;
    sc_signal< sc_lv<32> > max_ind_1_reg_219;
    sc_signal< sc_lv<7> > j_reg_232;
    sc_signal< sc_lv<64> > tmp_fu_272_p1;
    sc_signal< sc_lv<64> > tmp_6_fu_303_p1;
    sc_signal< sc_lv<64> > tmp_8_fu_341_p1;
    sc_signal< sc_lv<64> > tmp_5_cast_fu_378_p1;
    sc_signal< sc_lv<64> > tmp_3_fu_434_p1;
    sc_signal< sc_lv<32> > cur_ind_fu_58;
    sc_signal< sc_lv<32> > start_fu_383_p2;
    sc_signal< sc_lv<32> > max_ind_fu_62;
    sc_signal< sc_lv<32> > cur_ind_0_max_ind_1_fu_452_p3;
    sc_signal< sc_lv<8> > j_cast1_cast_fu_441_p1;
    sc_signal< sc_lv<32> > sep_1_fu_277_p2;
    sc_signal< sc_lv<12> > tmp_1_cast_fu_368_p1;
    sc_signal< sc_lv<12> > tmp_5_fu_372_p2;
    sc_signal< sc_lv<32> > input_load_to_int_fu_393_p1;
    sc_signal< sc_lv<8> > tmp_12_fu_396_p4;
    sc_signal< sc_lv<23> > tmp_11_fu_406_p1;
    sc_signal< sc_lv<1> > notrhs_fu_416_p2;
    sc_signal< sc_lv<1> > notlhs_fu_410_p2;
    sc_signal< sc_lv<1> > tmp_13_fu_422_p2;
    sc_signal< sc_lv<1> > tmp_14_fu_246_p2;
    sc_signal< sc_lv<1> > tmp_4_fu_446_p2;
    sc_signal< sc_lv<9> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<9> ap_ST_st1_fsm_0;
    static const sc_lv<9> ap_ST_st2_fsm_1;
    static const sc_lv<9> ap_ST_st3_fsm_2;
    static const sc_lv<9> ap_ST_st4_fsm_3;
    static const sc_lv<9> ap_ST_st5_fsm_4;
    static const sc_lv<9> ap_ST_st6_fsm_5;
    static const sc_lv<9> ap_ST_st7_fsm_6;
    static const sc_lv<9> ap_ST_st8_fsm_7;
    static const sc_lv<9> ap_ST_st9_fsm_8;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<12> ap_const_lv12_0;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<6> ap_const_lv6_3F;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<5> ap_const_lv5_19;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<12> ap_const_lv12_9C4;
    static const sc_lv<12> ap_const_lv12_1;
    static const sc_lv<12> ap_const_lv12_64;
    static const sc_lv<7> ap_const_lv7_64;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<23> ap_const_lv23_0;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_ap_sig_105();
    void thread_ap_sig_123();
    void thread_ap_sig_137();
    void thread_ap_sig_154();
    void thread_ap_sig_163();
    void thread_ap_sig_26();
    void thread_ap_sig_72();
    void thread_ap_sig_87();
    void thread_ap_sig_96();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_cseq_ST_st3_fsm_2();
    void thread_ap_sig_cseq_ST_st4_fsm_3();
    void thread_ap_sig_cseq_ST_st5_fsm_4();
    void thread_ap_sig_cseq_ST_st6_fsm_5();
    void thread_ap_sig_cseq_ST_st7_fsm_6();
    void thread_ap_sig_cseq_ST_st8_fsm_7();
    void thread_ap_sig_cseq_ST_st9_fsm_8();
    void thread_col_address0();
    void thread_col_ce0();
    void thread_col_d0();
    void thread_col_we0();
    void thread_cur_ind_0_max_ind_1_fu_452_p3();
    void thread_cur_ind_2_fu_460_p2();
    void thread_exitcond1_fu_329_p2();
    void thread_exitcond2_fu_291_p2();
    void thread_exitcond3_fu_260_p2();
    void thread_exitcond_fu_356_p2();
    void thread_grp_fu_251_p2();
    void thread_i2_cast2_cast_fu_352_p1();
    void thread_i_1_fu_266_p2();
    void thread_i_2_fu_297_p2();
    void thread_i_3_fu_335_p2();
    void thread_input_load_to_int_fu_393_p1();
    void thread_input_r_address0();
    void thread_input_r_ce0();
    void thread_j_4_fu_362_p2();
    void thread_j_cast1_cast_fu_441_p1();
    void thread_next_mul_fu_323_p2();
    void thread_nnz_address0();
    void thread_nnz_ce0();
    void thread_notlhs_fu_410_p2();
    void thread_notrhs_fu_416_p2();
    void thread_p_sep_fu_283_p3();
    void thread_row_address0();
    void thread_row_ce0();
    void thread_row_d0();
    void thread_row_we0();
    void thread_sep_1_fu_277_p2();
    void thread_start_fu_383_p2();
    void thread_tmp_11_fu_406_p1();
    void thread_tmp_12_fu_396_p4();
    void thread_tmp_13_fu_422_p2();
    void thread_tmp_15_fu_428_p2();
    void thread_tmp_1_cast_fu_368_p1();
    void thread_tmp_3_fu_434_p1();
    void thread_tmp_4_fu_446_p2();
    void thread_tmp_5_cast_fu_378_p1();
    void thread_tmp_5_fu_372_p2();
    void thread_tmp_6_fu_303_p1();
    void thread_tmp_8_fu_341_p1();
    void thread_tmp_fu_272_p1();
    void thread_val_r_address0();
    void thread_val_r_ce0();
    void thread_val_r_d0();
    void thread_val_r_we0();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
