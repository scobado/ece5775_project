// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="worker,hls_ip_2016_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.092000,HLS_SYN_LAT=3598,HLS_SYN_TPT=none,HLS_SYN_MEM=15,HLS_SYN_DSP=5,HLS_SYN_FF=600,HLS_SYN_LUT=1122}" *)

module worker (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        dest_address0,
        dest_ce0,
        dest_we0,
        dest_d0
);

parameter    ap_ST_st1_fsm_0 = 54'b1;
parameter    ap_ST_st2_fsm_1 = 54'b10;
parameter    ap_ST_st3_fsm_2 = 54'b100;
parameter    ap_ST_st4_fsm_3 = 54'b1000;
parameter    ap_ST_st5_fsm_4 = 54'b10000;
parameter    ap_ST_st6_fsm_5 = 54'b100000;
parameter    ap_ST_st7_fsm_6 = 54'b1000000;
parameter    ap_ST_st8_fsm_7 = 54'b10000000;
parameter    ap_ST_st9_fsm_8 = 54'b100000000;
parameter    ap_ST_st10_fsm_9 = 54'b1000000000;
parameter    ap_ST_st11_fsm_10 = 54'b10000000000;
parameter    ap_ST_st12_fsm_11 = 54'b100000000000;
parameter    ap_ST_st13_fsm_12 = 54'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 54'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 54'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 54'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 54'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 54'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 54'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 54'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 54'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 54'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 54'b10000000000000000000000;
parameter    ap_ST_st24_fsm_23 = 54'b100000000000000000000000;
parameter    ap_ST_st25_fsm_24 = 54'b1000000000000000000000000;
parameter    ap_ST_st26_fsm_25 = 54'b10000000000000000000000000;
parameter    ap_ST_st27_fsm_26 = 54'b100000000000000000000000000;
parameter    ap_ST_st28_fsm_27 = 54'b1000000000000000000000000000;
parameter    ap_ST_st29_fsm_28 = 54'b10000000000000000000000000000;
parameter    ap_ST_st30_fsm_29 = 54'b100000000000000000000000000000;
parameter    ap_ST_st31_fsm_30 = 54'b1000000000000000000000000000000;
parameter    ap_ST_st32_fsm_31 = 54'b10000000000000000000000000000000;
parameter    ap_ST_st33_fsm_32 = 54'b100000000000000000000000000000000;
parameter    ap_ST_st34_fsm_33 = 54'b1000000000000000000000000000000000;
parameter    ap_ST_st35_fsm_34 = 54'b10000000000000000000000000000000000;
parameter    ap_ST_st36_fsm_35 = 54'b100000000000000000000000000000000000;
parameter    ap_ST_st37_fsm_36 = 54'b1000000000000000000000000000000000000;
parameter    ap_ST_st38_fsm_37 = 54'b10000000000000000000000000000000000000;
parameter    ap_ST_st39_fsm_38 = 54'b100000000000000000000000000000000000000;
parameter    ap_ST_st40_fsm_39 = 54'b1000000000000000000000000000000000000000;
parameter    ap_ST_st41_fsm_40 = 54'b10000000000000000000000000000000000000000;
parameter    ap_ST_st42_fsm_41 = 54'b100000000000000000000000000000000000000000;
parameter    ap_ST_st43_fsm_42 = 54'b1000000000000000000000000000000000000000000;
parameter    ap_ST_st44_fsm_43 = 54'b10000000000000000000000000000000000000000000;
parameter    ap_ST_st45_fsm_44 = 54'b100000000000000000000000000000000000000000000;
parameter    ap_ST_st46_fsm_45 = 54'b1000000000000000000000000000000000000000000000;
parameter    ap_ST_st47_fsm_46 = 54'b10000000000000000000000000000000000000000000000;
parameter    ap_ST_st48_fsm_47 = 54'b100000000000000000000000000000000000000000000000;
parameter    ap_ST_st49_fsm_48 = 54'b1000000000000000000000000000000000000000000000000;
parameter    ap_ST_st50_fsm_49 = 54'b10000000000000000000000000000000000000000000000000;
parameter    ap_ST_st51_fsm_50 = 54'b100000000000000000000000000000000000000000000000000;
parameter    ap_ST_st52_fsm_51 = 54'b1000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st53_fsm_52 = 54'b10000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st54_fsm_53 = 54'b100000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_34 = 32'b110100;
parameter    ap_const_lv7_0 = 7'b0000000;
parameter    ap_const_lv32_33 = 32'b110011;
parameter    ap_const_lv32_35 = 32'b110101;
parameter    ap_const_lv32_32 = 32'b110010;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv64_1 = 64'b1;
parameter    ap_const_lv64_2 = 64'b10;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv64_3 = 64'b11;
parameter    ap_const_lv64_4 = 64'b100;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv64_5 = 64'b101;
parameter    ap_const_lv64_6 = 64'b110;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv64_7 = 64'b111;
parameter    ap_const_lv64_8 = 64'b1000;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv64_9 = 64'b1001;
parameter    ap_const_lv64_A = 64'b1010;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv64_B = 64'b1011;
parameter    ap_const_lv64_C = 64'b1100;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv64_D = 64'b1101;
parameter    ap_const_lv64_E = 64'b1110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv64_F = 64'b1111;
parameter    ap_const_lv64_10 = 64'b10000;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv64_11 = 64'b10001;
parameter    ap_const_lv64_12 = 64'b10010;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv64_13 = 64'b10011;
parameter    ap_const_lv64_14 = 64'b10100;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv64_15 = 64'b10101;
parameter    ap_const_lv64_16 = 64'b10110;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv64_17 = 64'b10111;
parameter    ap_const_lv64_18 = 64'b11000;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv64_19 = 64'b11001;
parameter    ap_const_lv64_1A = 64'b11010;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv64_1B = 64'b11011;
parameter    ap_const_lv64_1C = 64'b11100;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv64_1D = 64'b11101;
parameter    ap_const_lv64_1E = 64'b11110;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv64_1F = 64'b11111;
parameter    ap_const_lv64_20 = 64'b100000;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv64_21 = 64'b100001;
parameter    ap_const_lv64_22 = 64'b100010;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv64_23 = 64'b100011;
parameter    ap_const_lv64_24 = 64'b100100;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv64_25 = 64'b100101;
parameter    ap_const_lv64_26 = 64'b100110;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv64_27 = 64'b100111;
parameter    ap_const_lv64_28 = 64'b101000;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv64_29 = 64'b101001;
parameter    ap_const_lv64_2A = 64'b101010;
parameter    ap_const_lv32_15 = 32'b10101;
parameter    ap_const_lv64_2B = 64'b101011;
parameter    ap_const_lv64_2C = 64'b101100;
parameter    ap_const_lv32_16 = 32'b10110;
parameter    ap_const_lv64_2D = 64'b101101;
parameter    ap_const_lv64_2E = 64'b101110;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv64_2F = 64'b101111;
parameter    ap_const_lv64_30 = 64'b110000;
parameter    ap_const_lv32_18 = 32'b11000;
parameter    ap_const_lv64_31 = 64'b110001;
parameter    ap_const_lv64_32 = 64'b110010;
parameter    ap_const_lv32_19 = 32'b11001;
parameter    ap_const_lv64_33 = 64'b110011;
parameter    ap_const_lv64_34 = 64'b110100;
parameter    ap_const_lv32_1A = 32'b11010;
parameter    ap_const_lv64_35 = 64'b110101;
parameter    ap_const_lv64_36 = 64'b110110;
parameter    ap_const_lv32_1B = 32'b11011;
parameter    ap_const_lv64_37 = 64'b110111;
parameter    ap_const_lv64_38 = 64'b111000;
parameter    ap_const_lv32_1C = 32'b11100;
parameter    ap_const_lv64_39 = 64'b111001;
parameter    ap_const_lv64_3A = 64'b111010;
parameter    ap_const_lv32_1D = 32'b11101;
parameter    ap_const_lv64_3B = 64'b111011;
parameter    ap_const_lv64_3C = 64'b111100;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv64_3D = 64'b111101;
parameter    ap_const_lv64_3E = 64'b111110;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv64_3F = 64'b111111;
parameter    ap_const_lv64_40 = 64'b1000000;
parameter    ap_const_lv32_20 = 32'b100000;
parameter    ap_const_lv64_41 = 64'b1000001;
parameter    ap_const_lv64_42 = 64'b1000010;
parameter    ap_const_lv32_21 = 32'b100001;
parameter    ap_const_lv64_43 = 64'b1000011;
parameter    ap_const_lv64_44 = 64'b1000100;
parameter    ap_const_lv32_22 = 32'b100010;
parameter    ap_const_lv64_45 = 64'b1000101;
parameter    ap_const_lv64_46 = 64'b1000110;
parameter    ap_const_lv32_23 = 32'b100011;
parameter    ap_const_lv64_47 = 64'b1000111;
parameter    ap_const_lv64_48 = 64'b1001000;
parameter    ap_const_lv32_24 = 32'b100100;
parameter    ap_const_lv64_49 = 64'b1001001;
parameter    ap_const_lv64_4A = 64'b1001010;
parameter    ap_const_lv32_25 = 32'b100101;
parameter    ap_const_lv64_4B = 64'b1001011;
parameter    ap_const_lv64_4C = 64'b1001100;
parameter    ap_const_lv32_26 = 32'b100110;
parameter    ap_const_lv64_4D = 64'b1001101;
parameter    ap_const_lv64_4E = 64'b1001110;
parameter    ap_const_lv32_27 = 32'b100111;
parameter    ap_const_lv64_4F = 64'b1001111;
parameter    ap_const_lv64_50 = 64'b1010000;
parameter    ap_const_lv32_28 = 32'b101000;
parameter    ap_const_lv64_51 = 64'b1010001;
parameter    ap_const_lv64_52 = 64'b1010010;
parameter    ap_const_lv32_29 = 32'b101001;
parameter    ap_const_lv64_53 = 64'b1010011;
parameter    ap_const_lv64_54 = 64'b1010100;
parameter    ap_const_lv32_2A = 32'b101010;
parameter    ap_const_lv64_55 = 64'b1010101;
parameter    ap_const_lv64_56 = 64'b1010110;
parameter    ap_const_lv32_2B = 32'b101011;
parameter    ap_const_lv64_57 = 64'b1010111;
parameter    ap_const_lv64_58 = 64'b1011000;
parameter    ap_const_lv32_2C = 32'b101100;
parameter    ap_const_lv64_59 = 64'b1011001;
parameter    ap_const_lv64_5A = 64'b1011010;
parameter    ap_const_lv32_2D = 32'b101101;
parameter    ap_const_lv64_5B = 64'b1011011;
parameter    ap_const_lv64_5C = 64'b1011100;
parameter    ap_const_lv32_2E = 32'b101110;
parameter    ap_const_lv64_5D = 64'b1011101;
parameter    ap_const_lv64_5E = 64'b1011110;
parameter    ap_const_lv32_2F = 32'b101111;
parameter    ap_const_lv64_5F = 64'b1011111;
parameter    ap_const_lv64_60 = 64'b1100000;
parameter    ap_const_lv32_30 = 32'b110000;
parameter    ap_const_lv64_61 = 64'b1100001;
parameter    ap_const_lv64_62 = 64'b1100010;
parameter    ap_const_lv32_31 = 32'b110001;
parameter    ap_const_lv64_63 = 64'b1100011;
parameter    ap_const_lv7_64 = 7'b1100100;
parameter    ap_const_lv7_1 = 7'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [6:0] dest_address0;
output   dest_ce0;
output   dest_we0;
output  [31:0] dest_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg dest_ce0;
reg dest_we0;

(* fsm_encoding = "none" *) reg   [53:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_69;
wire   [6:0] j_fu_1095_p2;
reg   [6:0] j_reg_1109;
reg    ap_sig_cseq_ST_st53_fsm_52;
reg    ap_sig_90;
wire   [63:0] tmp_4_fu_1101_p1;
reg   [63:0] tmp_4_reg_1114;
wire   [0:0] exitcond_fu_1089_p2;
reg   [6:0] dest_1_0_address0;
reg    dest_1_0_ce0;
reg    dest_1_0_we0;
wire   [31:0] dest_1_0_q0;
reg   [6:0] dest_1_0_address1;
reg    dest_1_0_ce1;
reg    dest_1_0_we1;
reg   [31:0] dest_1_0_d1;
wire    grp_worker_COO_SpMV_0_fu_1076_ap_start;
wire    grp_worker_COO_SpMV_0_fu_1076_ap_done;
wire    grp_worker_COO_SpMV_0_fu_1076_ap_idle;
wire    grp_worker_COO_SpMV_0_fu_1076_ap_ready;
wire   [6:0] grp_worker_COO_SpMV_0_fu_1076_output_r_address0;
wire    grp_worker_COO_SpMV_0_fu_1076_output_r_ce0;
wire   [6:0] grp_worker_COO_SpMV_0_fu_1076_output_r_address1;
wire    grp_worker_COO_SpMV_0_fu_1076_output_r_ce1;
wire    grp_worker_COO_SpMV_0_fu_1076_output_r_we1;
wire   [31:0] grp_worker_COO_SpMV_0_fu_1076_output_r_d1;
reg   [6:0] j2_reg_1065;
reg    ap_sig_cseq_ST_st52_fsm_51;
reg    ap_sig_135;
reg    ap_sig_cseq_ST_st54_fsm_53;
reg    ap_sig_145;
reg    ap_reg_grp_worker_COO_SpMV_0_fu_1076_ap_start;
reg    ap_sig_cseq_ST_st51_fsm_50;
reg    ap_sig_154;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_199;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_210;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_221;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_232;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_243;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_254;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_265;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_276;
reg    ap_sig_cseq_ST_st10_fsm_9;
reg    ap_sig_287;
reg    ap_sig_cseq_ST_st11_fsm_10;
reg    ap_sig_298;
reg    ap_sig_cseq_ST_st12_fsm_11;
reg    ap_sig_309;
reg    ap_sig_cseq_ST_st13_fsm_12;
reg    ap_sig_320;
reg    ap_sig_cseq_ST_st14_fsm_13;
reg    ap_sig_331;
reg    ap_sig_cseq_ST_st15_fsm_14;
reg    ap_sig_342;
reg    ap_sig_cseq_ST_st16_fsm_15;
reg    ap_sig_353;
reg    ap_sig_cseq_ST_st17_fsm_16;
reg    ap_sig_364;
reg    ap_sig_cseq_ST_st18_fsm_17;
reg    ap_sig_375;
reg    ap_sig_cseq_ST_st19_fsm_18;
reg    ap_sig_386;
reg    ap_sig_cseq_ST_st20_fsm_19;
reg    ap_sig_397;
reg    ap_sig_cseq_ST_st21_fsm_20;
reg    ap_sig_408;
reg    ap_sig_cseq_ST_st22_fsm_21;
reg    ap_sig_419;
reg    ap_sig_cseq_ST_st23_fsm_22;
reg    ap_sig_430;
reg    ap_sig_cseq_ST_st24_fsm_23;
reg    ap_sig_441;
reg    ap_sig_cseq_ST_st25_fsm_24;
reg    ap_sig_452;
reg    ap_sig_cseq_ST_st26_fsm_25;
reg    ap_sig_463;
reg    ap_sig_cseq_ST_st27_fsm_26;
reg    ap_sig_474;
reg    ap_sig_cseq_ST_st28_fsm_27;
reg    ap_sig_485;
reg    ap_sig_cseq_ST_st29_fsm_28;
reg    ap_sig_496;
reg    ap_sig_cseq_ST_st30_fsm_29;
reg    ap_sig_507;
reg    ap_sig_cseq_ST_st31_fsm_30;
reg    ap_sig_518;
reg    ap_sig_cseq_ST_st32_fsm_31;
reg    ap_sig_529;
reg    ap_sig_cseq_ST_st33_fsm_32;
reg    ap_sig_540;
reg    ap_sig_cseq_ST_st34_fsm_33;
reg    ap_sig_551;
reg    ap_sig_cseq_ST_st35_fsm_34;
reg    ap_sig_562;
reg    ap_sig_cseq_ST_st36_fsm_35;
reg    ap_sig_573;
reg    ap_sig_cseq_ST_st37_fsm_36;
reg    ap_sig_584;
reg    ap_sig_cseq_ST_st38_fsm_37;
reg    ap_sig_595;
reg    ap_sig_cseq_ST_st39_fsm_38;
reg    ap_sig_606;
reg    ap_sig_cseq_ST_st40_fsm_39;
reg    ap_sig_617;
reg    ap_sig_cseq_ST_st41_fsm_40;
reg    ap_sig_628;
reg    ap_sig_cseq_ST_st42_fsm_41;
reg    ap_sig_639;
reg    ap_sig_cseq_ST_st43_fsm_42;
reg    ap_sig_650;
reg    ap_sig_cseq_ST_st44_fsm_43;
reg    ap_sig_661;
reg    ap_sig_cseq_ST_st45_fsm_44;
reg    ap_sig_672;
reg    ap_sig_cseq_ST_st46_fsm_45;
reg    ap_sig_683;
reg    ap_sig_cseq_ST_st47_fsm_46;
reg    ap_sig_694;
reg    ap_sig_cseq_ST_st48_fsm_47;
reg    ap_sig_705;
reg    ap_sig_cseq_ST_st49_fsm_48;
reg    ap_sig_716;
reg    ap_sig_cseq_ST_st50_fsm_49;
reg    ap_sig_727;
reg   [53:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 54'b1;
#0 ap_reg_grp_worker_COO_SpMV_0_fu_1076_ap_start = 1'b0;
end

worker_dest_1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 100 ),
    .AddressWidth( 7 ))
dest_1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dest_1_0_address0),
    .ce0(dest_1_0_ce0),
    .we0(dest_1_0_we0),
    .d0(ap_const_lv32_0),
    .q0(dest_1_0_q0),
    .address1(dest_1_0_address1),
    .ce1(dest_1_0_ce1),
    .we1(dest_1_0_we1),
    .d1(dest_1_0_d1)
);

worker_COO_SpMV_0 grp_worker_COO_SpMV_0_fu_1076(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_worker_COO_SpMV_0_fu_1076_ap_start),
    .ap_done(grp_worker_COO_SpMV_0_fu_1076_ap_done),
    .ap_idle(grp_worker_COO_SpMV_0_fu_1076_ap_idle),
    .ap_ready(grp_worker_COO_SpMV_0_fu_1076_ap_ready),
    .output_r_address0(grp_worker_COO_SpMV_0_fu_1076_output_r_address0),
    .output_r_ce0(grp_worker_COO_SpMV_0_fu_1076_output_r_ce0),
    .output_r_q0(dest_1_0_q0),
    .output_r_address1(grp_worker_COO_SpMV_0_fu_1076_output_r_address1),
    .output_r_ce1(grp_worker_COO_SpMV_0_fu_1076_output_r_ce1),
    .output_r_we1(grp_worker_COO_SpMV_0_fu_1076_output_r_we1),
    .output_r_d1(grp_worker_COO_SpMV_0_fu_1076_output_r_d1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_worker_COO_SpMV_0_fu_1076_ap_start <= 1'b0;
    end else begin
        if ((1'b1 == ap_sig_cseq_ST_st51_fsm_50)) begin
            ap_reg_grp_worker_COO_SpMV_0_fu_1076_ap_start <= 1'b1;
        end else if ((1'b1 == grp_worker_COO_SpMV_0_fu_1076_ap_ready)) begin
            ap_reg_grp_worker_COO_SpMV_0_fu_1076_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st54_fsm_53)) begin
        j2_reg_1065 <= j_reg_1109;
    end else if (((1'b1 == ap_sig_cseq_ST_st52_fsm_51) & ~(1'b0 == grp_worker_COO_SpMV_0_fu_1076_ap_done))) begin
        j2_reg_1065 <= ap_const_lv7_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st53_fsm_52)) begin
        j_reg_1109 <= j_fu_1095_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st53_fsm_52) & (exitcond_fu_1089_p2 == 1'b0))) begin
        tmp_4_reg_1114[6 : 0] <= tmp_4_fu_1101_p1[6 : 0];
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st53_fsm_52) & ~(exitcond_fu_1089_p2 == 1'b0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st53_fsm_52) & ~(exitcond_fu_1089_p2 == 1'b0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_287) begin
        ap_sig_cseq_ST_st10_fsm_9 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st10_fsm_9 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_298) begin
        ap_sig_cseq_ST_st11_fsm_10 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_10 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_309) begin
        ap_sig_cseq_ST_st12_fsm_11 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st12_fsm_11 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_320) begin
        ap_sig_cseq_ST_st13_fsm_12 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st13_fsm_12 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_331) begin
        ap_sig_cseq_ST_st14_fsm_13 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st14_fsm_13 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_342) begin
        ap_sig_cseq_ST_st15_fsm_14 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st15_fsm_14 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_353) begin
        ap_sig_cseq_ST_st16_fsm_15 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st16_fsm_15 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_364) begin
        ap_sig_cseq_ST_st17_fsm_16 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st17_fsm_16 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_375) begin
        ap_sig_cseq_ST_st18_fsm_17 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st18_fsm_17 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_386) begin
        ap_sig_cseq_ST_st19_fsm_18 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st19_fsm_18 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_69) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_397) begin
        ap_sig_cseq_ST_st20_fsm_19 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st20_fsm_19 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_408) begin
        ap_sig_cseq_ST_st21_fsm_20 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st21_fsm_20 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_419) begin
        ap_sig_cseq_ST_st22_fsm_21 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st22_fsm_21 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_430) begin
        ap_sig_cseq_ST_st23_fsm_22 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st23_fsm_22 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_441) begin
        ap_sig_cseq_ST_st24_fsm_23 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st24_fsm_23 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_452) begin
        ap_sig_cseq_ST_st25_fsm_24 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st25_fsm_24 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_463) begin
        ap_sig_cseq_ST_st26_fsm_25 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st26_fsm_25 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_474) begin
        ap_sig_cseq_ST_st27_fsm_26 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st27_fsm_26 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_485) begin
        ap_sig_cseq_ST_st28_fsm_27 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st28_fsm_27 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_496) begin
        ap_sig_cseq_ST_st29_fsm_28 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st29_fsm_28 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_199) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_507) begin
        ap_sig_cseq_ST_st30_fsm_29 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st30_fsm_29 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_518) begin
        ap_sig_cseq_ST_st31_fsm_30 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st31_fsm_30 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_529) begin
        ap_sig_cseq_ST_st32_fsm_31 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st32_fsm_31 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_540) begin
        ap_sig_cseq_ST_st33_fsm_32 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st33_fsm_32 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_551) begin
        ap_sig_cseq_ST_st34_fsm_33 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st34_fsm_33 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_562) begin
        ap_sig_cseq_ST_st35_fsm_34 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st35_fsm_34 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_573) begin
        ap_sig_cseq_ST_st36_fsm_35 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st36_fsm_35 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_584) begin
        ap_sig_cseq_ST_st37_fsm_36 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st37_fsm_36 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_595) begin
        ap_sig_cseq_ST_st38_fsm_37 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st38_fsm_37 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_606) begin
        ap_sig_cseq_ST_st39_fsm_38 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st39_fsm_38 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_210) begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_617) begin
        ap_sig_cseq_ST_st40_fsm_39 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st40_fsm_39 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_628) begin
        ap_sig_cseq_ST_st41_fsm_40 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st41_fsm_40 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_639) begin
        ap_sig_cseq_ST_st42_fsm_41 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st42_fsm_41 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_650) begin
        ap_sig_cseq_ST_st43_fsm_42 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st43_fsm_42 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_661) begin
        ap_sig_cseq_ST_st44_fsm_43 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st44_fsm_43 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_672) begin
        ap_sig_cseq_ST_st45_fsm_44 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st45_fsm_44 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_683) begin
        ap_sig_cseq_ST_st46_fsm_45 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st46_fsm_45 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_694) begin
        ap_sig_cseq_ST_st47_fsm_46 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st47_fsm_46 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_705) begin
        ap_sig_cseq_ST_st48_fsm_47 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st48_fsm_47 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_716) begin
        ap_sig_cseq_ST_st49_fsm_48 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st49_fsm_48 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_221) begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_727) begin
        ap_sig_cseq_ST_st50_fsm_49 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st50_fsm_49 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_154) begin
        ap_sig_cseq_ST_st51_fsm_50 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st51_fsm_50 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_135) begin
        ap_sig_cseq_ST_st52_fsm_51 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st52_fsm_51 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_90) begin
        ap_sig_cseq_ST_st53_fsm_52 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st53_fsm_52 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_145) begin
        ap_sig_cseq_ST_st54_fsm_53 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st54_fsm_53 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_232) begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_243) begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_254) begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_265) begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_276) begin
        ap_sig_cseq_ST_st9_fsm_8 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st50_fsm_49)) begin
        dest_1_0_address0 = ap_const_lv64_62;
    end else if ((1'b1 == ap_sig_cseq_ST_st49_fsm_48)) begin
        dest_1_0_address0 = ap_const_lv64_60;
    end else if ((1'b1 == ap_sig_cseq_ST_st48_fsm_47)) begin
        dest_1_0_address0 = ap_const_lv64_5E;
    end else if ((1'b1 == ap_sig_cseq_ST_st47_fsm_46)) begin
        dest_1_0_address0 = ap_const_lv64_5C;
    end else if ((1'b1 == ap_sig_cseq_ST_st46_fsm_45)) begin
        dest_1_0_address0 = ap_const_lv64_5A;
    end else if ((1'b1 == ap_sig_cseq_ST_st45_fsm_44)) begin
        dest_1_0_address0 = ap_const_lv64_58;
    end else if ((1'b1 == ap_sig_cseq_ST_st44_fsm_43)) begin
        dest_1_0_address0 = ap_const_lv64_56;
    end else if ((1'b1 == ap_sig_cseq_ST_st43_fsm_42)) begin
        dest_1_0_address0 = ap_const_lv64_54;
    end else if ((1'b1 == ap_sig_cseq_ST_st42_fsm_41)) begin
        dest_1_0_address0 = ap_const_lv64_52;
    end else if ((1'b1 == ap_sig_cseq_ST_st41_fsm_40)) begin
        dest_1_0_address0 = ap_const_lv64_50;
    end else if ((1'b1 == ap_sig_cseq_ST_st40_fsm_39)) begin
        dest_1_0_address0 = ap_const_lv64_4E;
    end else if ((1'b1 == ap_sig_cseq_ST_st39_fsm_38)) begin
        dest_1_0_address0 = ap_const_lv64_4C;
    end else if ((1'b1 == ap_sig_cseq_ST_st38_fsm_37)) begin
        dest_1_0_address0 = ap_const_lv64_4A;
    end else if ((1'b1 == ap_sig_cseq_ST_st37_fsm_36)) begin
        dest_1_0_address0 = ap_const_lv64_48;
    end else if ((1'b1 == ap_sig_cseq_ST_st36_fsm_35)) begin
        dest_1_0_address0 = ap_const_lv64_46;
    end else if ((1'b1 == ap_sig_cseq_ST_st35_fsm_34)) begin
        dest_1_0_address0 = ap_const_lv64_44;
    end else if ((1'b1 == ap_sig_cseq_ST_st34_fsm_33)) begin
        dest_1_0_address0 = ap_const_lv64_42;
    end else if ((1'b1 == ap_sig_cseq_ST_st33_fsm_32)) begin
        dest_1_0_address0 = ap_const_lv64_40;
    end else if ((1'b1 == ap_sig_cseq_ST_st32_fsm_31)) begin
        dest_1_0_address0 = ap_const_lv64_3E;
    end else if ((1'b1 == ap_sig_cseq_ST_st31_fsm_30)) begin
        dest_1_0_address0 = ap_const_lv64_3C;
    end else if ((1'b1 == ap_sig_cseq_ST_st30_fsm_29)) begin
        dest_1_0_address0 = ap_const_lv64_3A;
    end else if ((1'b1 == ap_sig_cseq_ST_st29_fsm_28)) begin
        dest_1_0_address0 = ap_const_lv64_38;
    end else if ((1'b1 == ap_sig_cseq_ST_st28_fsm_27)) begin
        dest_1_0_address0 = ap_const_lv64_36;
    end else if ((1'b1 == ap_sig_cseq_ST_st27_fsm_26)) begin
        dest_1_0_address0 = ap_const_lv64_34;
    end else if ((1'b1 == ap_sig_cseq_ST_st26_fsm_25)) begin
        dest_1_0_address0 = ap_const_lv64_32;
    end else if ((1'b1 == ap_sig_cseq_ST_st25_fsm_24)) begin
        dest_1_0_address0 = ap_const_lv64_30;
    end else if ((1'b1 == ap_sig_cseq_ST_st24_fsm_23)) begin
        dest_1_0_address0 = ap_const_lv64_2E;
    end else if ((1'b1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        dest_1_0_address0 = ap_const_lv64_2C;
    end else if ((1'b1 == ap_sig_cseq_ST_st22_fsm_21)) begin
        dest_1_0_address0 = ap_const_lv64_2A;
    end else if ((1'b1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        dest_1_0_address0 = ap_const_lv64_28;
    end else if ((1'b1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        dest_1_0_address0 = ap_const_lv64_26;
    end else if ((1'b1 == ap_sig_cseq_ST_st19_fsm_18)) begin
        dest_1_0_address0 = ap_const_lv64_24;
    end else if ((1'b1 == ap_sig_cseq_ST_st18_fsm_17)) begin
        dest_1_0_address0 = ap_const_lv64_22;
    end else if ((1'b1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        dest_1_0_address0 = ap_const_lv64_20;
    end else if ((1'b1 == ap_sig_cseq_ST_st16_fsm_15)) begin
        dest_1_0_address0 = ap_const_lv64_1E;
    end else if ((1'b1 == ap_sig_cseq_ST_st15_fsm_14)) begin
        dest_1_0_address0 = ap_const_lv64_1C;
    end else if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        dest_1_0_address0 = ap_const_lv64_1A;
    end else if ((1'b1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        dest_1_0_address0 = ap_const_lv64_18;
    end else if ((1'b1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        dest_1_0_address0 = ap_const_lv64_16;
    end else if ((1'b1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        dest_1_0_address0 = ap_const_lv64_14;
    end else if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        dest_1_0_address0 = ap_const_lv64_12;
    end else if ((1'b1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        dest_1_0_address0 = ap_const_lv64_10;
    end else if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        dest_1_0_address0 = ap_const_lv64_E;
    end else if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        dest_1_0_address0 = ap_const_lv64_C;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        dest_1_0_address0 = ap_const_lv64_A;
    end else if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        dest_1_0_address0 = ap_const_lv64_8;
    end else if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        dest_1_0_address0 = ap_const_lv64_6;
    end else if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        dest_1_0_address0 = ap_const_lv64_4;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        dest_1_0_address0 = ap_const_lv64_2;
    end else if ((1'b1 == ap_sig_cseq_ST_st1_fsm_0)) begin
        dest_1_0_address0 = ap_const_lv64_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st53_fsm_52)) begin
        dest_1_0_address0 = tmp_4_fu_1101_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st52_fsm_51)) begin
        dest_1_0_address0 = grp_worker_COO_SpMV_0_fu_1076_output_r_address0;
    end else begin
        dest_1_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st50_fsm_49)) begin
        dest_1_0_address1 = ap_const_lv64_63;
    end else if ((1'b1 == ap_sig_cseq_ST_st49_fsm_48)) begin
        dest_1_0_address1 = ap_const_lv64_61;
    end else if ((1'b1 == ap_sig_cseq_ST_st48_fsm_47)) begin
        dest_1_0_address1 = ap_const_lv64_5F;
    end else if ((1'b1 == ap_sig_cseq_ST_st47_fsm_46)) begin
        dest_1_0_address1 = ap_const_lv64_5D;
    end else if ((1'b1 == ap_sig_cseq_ST_st46_fsm_45)) begin
        dest_1_0_address1 = ap_const_lv64_5B;
    end else if ((1'b1 == ap_sig_cseq_ST_st45_fsm_44)) begin
        dest_1_0_address1 = ap_const_lv64_59;
    end else if ((1'b1 == ap_sig_cseq_ST_st44_fsm_43)) begin
        dest_1_0_address1 = ap_const_lv64_57;
    end else if ((1'b1 == ap_sig_cseq_ST_st43_fsm_42)) begin
        dest_1_0_address1 = ap_const_lv64_55;
    end else if ((1'b1 == ap_sig_cseq_ST_st42_fsm_41)) begin
        dest_1_0_address1 = ap_const_lv64_53;
    end else if ((1'b1 == ap_sig_cseq_ST_st41_fsm_40)) begin
        dest_1_0_address1 = ap_const_lv64_51;
    end else if ((1'b1 == ap_sig_cseq_ST_st40_fsm_39)) begin
        dest_1_0_address1 = ap_const_lv64_4F;
    end else if ((1'b1 == ap_sig_cseq_ST_st39_fsm_38)) begin
        dest_1_0_address1 = ap_const_lv64_4D;
    end else if ((1'b1 == ap_sig_cseq_ST_st38_fsm_37)) begin
        dest_1_0_address1 = ap_const_lv64_4B;
    end else if ((1'b1 == ap_sig_cseq_ST_st37_fsm_36)) begin
        dest_1_0_address1 = ap_const_lv64_49;
    end else if ((1'b1 == ap_sig_cseq_ST_st36_fsm_35)) begin
        dest_1_0_address1 = ap_const_lv64_47;
    end else if ((1'b1 == ap_sig_cseq_ST_st35_fsm_34)) begin
        dest_1_0_address1 = ap_const_lv64_45;
    end else if ((1'b1 == ap_sig_cseq_ST_st34_fsm_33)) begin
        dest_1_0_address1 = ap_const_lv64_43;
    end else if ((1'b1 == ap_sig_cseq_ST_st33_fsm_32)) begin
        dest_1_0_address1 = ap_const_lv64_41;
    end else if ((1'b1 == ap_sig_cseq_ST_st32_fsm_31)) begin
        dest_1_0_address1 = ap_const_lv64_3F;
    end else if ((1'b1 == ap_sig_cseq_ST_st31_fsm_30)) begin
        dest_1_0_address1 = ap_const_lv64_3D;
    end else if ((1'b1 == ap_sig_cseq_ST_st30_fsm_29)) begin
        dest_1_0_address1 = ap_const_lv64_3B;
    end else if ((1'b1 == ap_sig_cseq_ST_st29_fsm_28)) begin
        dest_1_0_address1 = ap_const_lv64_39;
    end else if ((1'b1 == ap_sig_cseq_ST_st28_fsm_27)) begin
        dest_1_0_address1 = ap_const_lv64_37;
    end else if ((1'b1 == ap_sig_cseq_ST_st27_fsm_26)) begin
        dest_1_0_address1 = ap_const_lv64_35;
    end else if ((1'b1 == ap_sig_cseq_ST_st26_fsm_25)) begin
        dest_1_0_address1 = ap_const_lv64_33;
    end else if ((1'b1 == ap_sig_cseq_ST_st25_fsm_24)) begin
        dest_1_0_address1 = ap_const_lv64_31;
    end else if ((1'b1 == ap_sig_cseq_ST_st24_fsm_23)) begin
        dest_1_0_address1 = ap_const_lv64_2F;
    end else if ((1'b1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        dest_1_0_address1 = ap_const_lv64_2D;
    end else if ((1'b1 == ap_sig_cseq_ST_st22_fsm_21)) begin
        dest_1_0_address1 = ap_const_lv64_2B;
    end else if ((1'b1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        dest_1_0_address1 = ap_const_lv64_29;
    end else if ((1'b1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        dest_1_0_address1 = ap_const_lv64_27;
    end else if ((1'b1 == ap_sig_cseq_ST_st19_fsm_18)) begin
        dest_1_0_address1 = ap_const_lv64_25;
    end else if ((1'b1 == ap_sig_cseq_ST_st18_fsm_17)) begin
        dest_1_0_address1 = ap_const_lv64_23;
    end else if ((1'b1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        dest_1_0_address1 = ap_const_lv64_21;
    end else if ((1'b1 == ap_sig_cseq_ST_st16_fsm_15)) begin
        dest_1_0_address1 = ap_const_lv64_1F;
    end else if ((1'b1 == ap_sig_cseq_ST_st15_fsm_14)) begin
        dest_1_0_address1 = ap_const_lv64_1D;
    end else if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        dest_1_0_address1 = ap_const_lv64_1B;
    end else if ((1'b1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        dest_1_0_address1 = ap_const_lv64_19;
    end else if ((1'b1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        dest_1_0_address1 = ap_const_lv64_17;
    end else if ((1'b1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        dest_1_0_address1 = ap_const_lv64_15;
    end else if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        dest_1_0_address1 = ap_const_lv64_13;
    end else if ((1'b1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        dest_1_0_address1 = ap_const_lv64_11;
    end else if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        dest_1_0_address1 = ap_const_lv64_F;
    end else if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        dest_1_0_address1 = ap_const_lv64_D;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        dest_1_0_address1 = ap_const_lv64_B;
    end else if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        dest_1_0_address1 = ap_const_lv64_9;
    end else if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        dest_1_0_address1 = ap_const_lv64_7;
    end else if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        dest_1_0_address1 = ap_const_lv64_5;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        dest_1_0_address1 = ap_const_lv64_3;
    end else if ((1'b1 == ap_sig_cseq_ST_st1_fsm_0)) begin
        dest_1_0_address1 = ap_const_lv64_1;
    end else if ((1'b1 == ap_sig_cseq_ST_st52_fsm_51)) begin
        dest_1_0_address1 = grp_worker_COO_SpMV_0_fu_1076_output_r_address1;
    end else begin
        dest_1_0_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st53_fsm_52) | (1'b1 == ap_sig_cseq_ST_st2_fsm_1) | (1'b1 == ap_sig_cseq_ST_st3_fsm_2) | (1'b1 == ap_sig_cseq_ST_st4_fsm_3) | (1'b1 == ap_sig_cseq_ST_st5_fsm_4) | (1'b1 == ap_sig_cseq_ST_st6_fsm_5) | (1'b1 == ap_sig_cseq_ST_st7_fsm_6) | (1'b1 == ap_sig_cseq_ST_st8_fsm_7) | (1'b1 == ap_sig_cseq_ST_st9_fsm_8) | (1'b1 == ap_sig_cseq_ST_st10_fsm_9) | (1'b1 == ap_sig_cseq_ST_st11_fsm_10) | (1'b1 == ap_sig_cseq_ST_st12_fsm_11) | (1'b1 == ap_sig_cseq_ST_st13_fsm_12) | (1'b1 == ap_sig_cseq_ST_st14_fsm_13) | (1'b1 == ap_sig_cseq_ST_st15_fsm_14) | (1'b1 == ap_sig_cseq_ST_st16_fsm_15) | (1'b1 == ap_sig_cseq_ST_st17_fsm_16) | (1'b1 == ap_sig_cseq_ST_st18_fsm_17) | (1'b1 == ap_sig_cseq_ST_st19_fsm_18) | (1'b1 == ap_sig_cseq_ST_st20_fsm_19) | (1'b1 == ap_sig_cseq_ST_st21_fsm_20) | (1'b1 == ap_sig_cseq_ST_st22_fsm_21) | (1'b1 == ap_sig_cseq_ST_st23_fsm_22) | (1'b1 == ap_sig_cseq_ST_st24_fsm_23) | (1'b1 == ap_sig_cseq_ST_st25_fsm_24) | (1'b1 == ap_sig_cseq_ST_st26_fsm_25) | (1'b1 == ap_sig_cseq_ST_st27_fsm_26) | (1'b1 == ap_sig_cseq_ST_st28_fsm_27) | (1'b1 == ap_sig_cseq_ST_st29_fsm_28) | (1'b1 == ap_sig_cseq_ST_st30_fsm_29) | (1'b1 == ap_sig_cseq_ST_st31_fsm_30) | (1'b1 == ap_sig_cseq_ST_st32_fsm_31) | (1'b1 == ap_sig_cseq_ST_st33_fsm_32) | (1'b1 == ap_sig_cseq_ST_st34_fsm_33) | (1'b1 == ap_sig_cseq_ST_st35_fsm_34) | (1'b1 == ap_sig_cseq_ST_st36_fsm_35) | (1'b1 == ap_sig_cseq_ST_st37_fsm_36) | (1'b1 == ap_sig_cseq_ST_st38_fsm_37) | (1'b1 == ap_sig_cseq_ST_st39_fsm_38) | (1'b1 == ap_sig_cseq_ST_st40_fsm_39) | (1'b1 == ap_sig_cseq_ST_st41_fsm_40) | (1'b1 == ap_sig_cseq_ST_st42_fsm_41) | (1'b1 == ap_sig_cseq_ST_st43_fsm_42) | (1'b1 == ap_sig_cseq_ST_st44_fsm_43) | (1'b1 == ap_sig_cseq_ST_st45_fsm_44) | (1'b1 == ap_sig_cseq_ST_st46_fsm_45) | (1'b1 == ap_sig_cseq_ST_st47_fsm_46) | (1'b1 == ap_sig_cseq_ST_st48_fsm_47) | (1'b1 == ap_sig_cseq_ST_st49_fsm_48) | (1'b1 == ap_sig_cseq_ST_st50_fsm_49) | ((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0)))) begin
        dest_1_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_sig_cseq_ST_st52_fsm_51)) begin
        dest_1_0_ce0 = grp_worker_COO_SpMV_0_fu_1076_output_r_ce0;
    end else begin
        dest_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) | (1'b1 == ap_sig_cseq_ST_st3_fsm_2) | (1'b1 == ap_sig_cseq_ST_st4_fsm_3) | (1'b1 == ap_sig_cseq_ST_st5_fsm_4) | (1'b1 == ap_sig_cseq_ST_st6_fsm_5) | (1'b1 == ap_sig_cseq_ST_st7_fsm_6) | (1'b1 == ap_sig_cseq_ST_st8_fsm_7) | (1'b1 == ap_sig_cseq_ST_st9_fsm_8) | (1'b1 == ap_sig_cseq_ST_st10_fsm_9) | (1'b1 == ap_sig_cseq_ST_st11_fsm_10) | (1'b1 == ap_sig_cseq_ST_st12_fsm_11) | (1'b1 == ap_sig_cseq_ST_st13_fsm_12) | (1'b1 == ap_sig_cseq_ST_st14_fsm_13) | (1'b1 == ap_sig_cseq_ST_st15_fsm_14) | (1'b1 == ap_sig_cseq_ST_st16_fsm_15) | (1'b1 == ap_sig_cseq_ST_st17_fsm_16) | (1'b1 == ap_sig_cseq_ST_st18_fsm_17) | (1'b1 == ap_sig_cseq_ST_st19_fsm_18) | (1'b1 == ap_sig_cseq_ST_st20_fsm_19) | (1'b1 == ap_sig_cseq_ST_st21_fsm_20) | (1'b1 == ap_sig_cseq_ST_st22_fsm_21) | (1'b1 == ap_sig_cseq_ST_st23_fsm_22) | (1'b1 == ap_sig_cseq_ST_st24_fsm_23) | (1'b1 == ap_sig_cseq_ST_st25_fsm_24) | (1'b1 == ap_sig_cseq_ST_st26_fsm_25) | (1'b1 == ap_sig_cseq_ST_st27_fsm_26) | (1'b1 == ap_sig_cseq_ST_st28_fsm_27) | (1'b1 == ap_sig_cseq_ST_st29_fsm_28) | (1'b1 == ap_sig_cseq_ST_st30_fsm_29) | (1'b1 == ap_sig_cseq_ST_st31_fsm_30) | (1'b1 == ap_sig_cseq_ST_st32_fsm_31) | (1'b1 == ap_sig_cseq_ST_st33_fsm_32) | (1'b1 == ap_sig_cseq_ST_st34_fsm_33) | (1'b1 == ap_sig_cseq_ST_st35_fsm_34) | (1'b1 == ap_sig_cseq_ST_st36_fsm_35) | (1'b1 == ap_sig_cseq_ST_st37_fsm_36) | (1'b1 == ap_sig_cseq_ST_st38_fsm_37) | (1'b1 == ap_sig_cseq_ST_st39_fsm_38) | (1'b1 == ap_sig_cseq_ST_st40_fsm_39) | (1'b1 == ap_sig_cseq_ST_st41_fsm_40) | (1'b1 == ap_sig_cseq_ST_st42_fsm_41) | (1'b1 == ap_sig_cseq_ST_st43_fsm_42) | (1'b1 == ap_sig_cseq_ST_st44_fsm_43) | (1'b1 == ap_sig_cseq_ST_st45_fsm_44) | (1'b1 == ap_sig_cseq_ST_st46_fsm_45) | (1'b1 == ap_sig_cseq_ST_st47_fsm_46) | (1'b1 == ap_sig_cseq_ST_st48_fsm_47) | (1'b1 == ap_sig_cseq_ST_st49_fsm_48) | (1'b1 == ap_sig_cseq_ST_st50_fsm_49) | ((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0)))) begin
        dest_1_0_ce1 = 1'b1;
    end else if ((1'b1 == ap_sig_cseq_ST_st52_fsm_51)) begin
        dest_1_0_ce1 = grp_worker_COO_SpMV_0_fu_1076_output_r_ce1;
    end else begin
        dest_1_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) | (1'b1 == ap_sig_cseq_ST_st2_fsm_1) | (1'b1 == ap_sig_cseq_ST_st3_fsm_2) | (1'b1 == ap_sig_cseq_ST_st4_fsm_3) | (1'b1 == ap_sig_cseq_ST_st5_fsm_4) | (1'b1 == ap_sig_cseq_ST_st6_fsm_5) | (1'b1 == ap_sig_cseq_ST_st7_fsm_6) | (1'b1 == ap_sig_cseq_ST_st8_fsm_7) | (1'b1 == ap_sig_cseq_ST_st9_fsm_8) | (1'b1 == ap_sig_cseq_ST_st10_fsm_9) | (1'b1 == ap_sig_cseq_ST_st11_fsm_10) | (1'b1 == ap_sig_cseq_ST_st12_fsm_11) | (1'b1 == ap_sig_cseq_ST_st13_fsm_12) | (1'b1 == ap_sig_cseq_ST_st14_fsm_13) | (1'b1 == ap_sig_cseq_ST_st15_fsm_14) | (1'b1 == ap_sig_cseq_ST_st16_fsm_15) | (1'b1 == ap_sig_cseq_ST_st17_fsm_16) | (1'b1 == ap_sig_cseq_ST_st18_fsm_17) | (1'b1 == ap_sig_cseq_ST_st19_fsm_18) | (1'b1 == ap_sig_cseq_ST_st20_fsm_19) | (1'b1 == ap_sig_cseq_ST_st21_fsm_20) | (1'b1 == ap_sig_cseq_ST_st22_fsm_21) | (1'b1 == ap_sig_cseq_ST_st23_fsm_22) | (1'b1 == ap_sig_cseq_ST_st24_fsm_23) | (1'b1 == ap_sig_cseq_ST_st25_fsm_24) | (1'b1 == ap_sig_cseq_ST_st26_fsm_25) | (1'b1 == ap_sig_cseq_ST_st27_fsm_26) | (1'b1 == ap_sig_cseq_ST_st28_fsm_27) | (1'b1 == ap_sig_cseq_ST_st29_fsm_28) | (1'b1 == ap_sig_cseq_ST_st30_fsm_29) | (1'b1 == ap_sig_cseq_ST_st31_fsm_30) | (1'b1 == ap_sig_cseq_ST_st32_fsm_31) | (1'b1 == ap_sig_cseq_ST_st33_fsm_32) | (1'b1 == ap_sig_cseq_ST_st34_fsm_33) | (1'b1 == ap_sig_cseq_ST_st35_fsm_34) | (1'b1 == ap_sig_cseq_ST_st36_fsm_35) | (1'b1 == ap_sig_cseq_ST_st37_fsm_36) | (1'b1 == ap_sig_cseq_ST_st38_fsm_37) | (1'b1 == ap_sig_cseq_ST_st39_fsm_38) | (1'b1 == ap_sig_cseq_ST_st40_fsm_39) | (1'b1 == ap_sig_cseq_ST_st41_fsm_40) | (1'b1 == ap_sig_cseq_ST_st42_fsm_41) | (1'b1 == ap_sig_cseq_ST_st43_fsm_42) | (1'b1 == ap_sig_cseq_ST_st44_fsm_43) | (1'b1 == ap_sig_cseq_ST_st45_fsm_44) | (1'b1 == ap_sig_cseq_ST_st46_fsm_45) | (1'b1 == ap_sig_cseq_ST_st47_fsm_46) | (1'b1 == ap_sig_cseq_ST_st48_fsm_47) | (1'b1 == ap_sig_cseq_ST_st49_fsm_48) | (1'b1 == ap_sig_cseq_ST_st50_fsm_49))) begin
        dest_1_0_d1 = ap_const_lv32_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st52_fsm_51)) begin
        dest_1_0_d1 = grp_worker_COO_SpMV_0_fu_1076_output_r_d1;
    end else begin
        dest_1_0_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) | (1'b1 == ap_sig_cseq_ST_st3_fsm_2) | (1'b1 == ap_sig_cseq_ST_st4_fsm_3) | (1'b1 == ap_sig_cseq_ST_st5_fsm_4) | (1'b1 == ap_sig_cseq_ST_st6_fsm_5) | (1'b1 == ap_sig_cseq_ST_st7_fsm_6) | (1'b1 == ap_sig_cseq_ST_st8_fsm_7) | (1'b1 == ap_sig_cseq_ST_st9_fsm_8) | (1'b1 == ap_sig_cseq_ST_st10_fsm_9) | (1'b1 == ap_sig_cseq_ST_st11_fsm_10) | (1'b1 == ap_sig_cseq_ST_st12_fsm_11) | (1'b1 == ap_sig_cseq_ST_st13_fsm_12) | (1'b1 == ap_sig_cseq_ST_st14_fsm_13) | (1'b1 == ap_sig_cseq_ST_st15_fsm_14) | (1'b1 == ap_sig_cseq_ST_st16_fsm_15) | (1'b1 == ap_sig_cseq_ST_st17_fsm_16) | (1'b1 == ap_sig_cseq_ST_st18_fsm_17) | (1'b1 == ap_sig_cseq_ST_st19_fsm_18) | (1'b1 == ap_sig_cseq_ST_st20_fsm_19) | (1'b1 == ap_sig_cseq_ST_st21_fsm_20) | (1'b1 == ap_sig_cseq_ST_st22_fsm_21) | (1'b1 == ap_sig_cseq_ST_st23_fsm_22) | (1'b1 == ap_sig_cseq_ST_st24_fsm_23) | (1'b1 == ap_sig_cseq_ST_st25_fsm_24) | (1'b1 == ap_sig_cseq_ST_st26_fsm_25) | (1'b1 == ap_sig_cseq_ST_st27_fsm_26) | (1'b1 == ap_sig_cseq_ST_st28_fsm_27) | (1'b1 == ap_sig_cseq_ST_st29_fsm_28) | (1'b1 == ap_sig_cseq_ST_st30_fsm_29) | (1'b1 == ap_sig_cseq_ST_st31_fsm_30) | (1'b1 == ap_sig_cseq_ST_st32_fsm_31) | (1'b1 == ap_sig_cseq_ST_st33_fsm_32) | (1'b1 == ap_sig_cseq_ST_st34_fsm_33) | (1'b1 == ap_sig_cseq_ST_st35_fsm_34) | (1'b1 == ap_sig_cseq_ST_st36_fsm_35) | (1'b1 == ap_sig_cseq_ST_st37_fsm_36) | (1'b1 == ap_sig_cseq_ST_st38_fsm_37) | (1'b1 == ap_sig_cseq_ST_st39_fsm_38) | (1'b1 == ap_sig_cseq_ST_st40_fsm_39) | (1'b1 == ap_sig_cseq_ST_st41_fsm_40) | (1'b1 == ap_sig_cseq_ST_st42_fsm_41) | (1'b1 == ap_sig_cseq_ST_st43_fsm_42) | (1'b1 == ap_sig_cseq_ST_st44_fsm_43) | (1'b1 == ap_sig_cseq_ST_st45_fsm_44) | (1'b1 == ap_sig_cseq_ST_st46_fsm_45) | (1'b1 == ap_sig_cseq_ST_st47_fsm_46) | (1'b1 == ap_sig_cseq_ST_st48_fsm_47) | (1'b1 == ap_sig_cseq_ST_st49_fsm_48) | (1'b1 == ap_sig_cseq_ST_st50_fsm_49) | ((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0)))) begin
        dest_1_0_we0 = 1'b1;
    end else begin
        dest_1_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) | (1'b1 == ap_sig_cseq_ST_st3_fsm_2) | (1'b1 == ap_sig_cseq_ST_st4_fsm_3) | (1'b1 == ap_sig_cseq_ST_st5_fsm_4) | (1'b1 == ap_sig_cseq_ST_st6_fsm_5) | (1'b1 == ap_sig_cseq_ST_st7_fsm_6) | (1'b1 == ap_sig_cseq_ST_st8_fsm_7) | (1'b1 == ap_sig_cseq_ST_st9_fsm_8) | (1'b1 == ap_sig_cseq_ST_st10_fsm_9) | (1'b1 == ap_sig_cseq_ST_st11_fsm_10) | (1'b1 == ap_sig_cseq_ST_st12_fsm_11) | (1'b1 == ap_sig_cseq_ST_st13_fsm_12) | (1'b1 == ap_sig_cseq_ST_st14_fsm_13) | (1'b1 == ap_sig_cseq_ST_st15_fsm_14) | (1'b1 == ap_sig_cseq_ST_st16_fsm_15) | (1'b1 == ap_sig_cseq_ST_st17_fsm_16) | (1'b1 == ap_sig_cseq_ST_st18_fsm_17) | (1'b1 == ap_sig_cseq_ST_st19_fsm_18) | (1'b1 == ap_sig_cseq_ST_st20_fsm_19) | (1'b1 == ap_sig_cseq_ST_st21_fsm_20) | (1'b1 == ap_sig_cseq_ST_st22_fsm_21) | (1'b1 == ap_sig_cseq_ST_st23_fsm_22) | (1'b1 == ap_sig_cseq_ST_st24_fsm_23) | (1'b1 == ap_sig_cseq_ST_st25_fsm_24) | (1'b1 == ap_sig_cseq_ST_st26_fsm_25) | (1'b1 == ap_sig_cseq_ST_st27_fsm_26) | (1'b1 == ap_sig_cseq_ST_st28_fsm_27) | (1'b1 == ap_sig_cseq_ST_st29_fsm_28) | (1'b1 == ap_sig_cseq_ST_st30_fsm_29) | (1'b1 == ap_sig_cseq_ST_st31_fsm_30) | (1'b1 == ap_sig_cseq_ST_st32_fsm_31) | (1'b1 == ap_sig_cseq_ST_st33_fsm_32) | (1'b1 == ap_sig_cseq_ST_st34_fsm_33) | (1'b1 == ap_sig_cseq_ST_st35_fsm_34) | (1'b1 == ap_sig_cseq_ST_st36_fsm_35) | (1'b1 == ap_sig_cseq_ST_st37_fsm_36) | (1'b1 == ap_sig_cseq_ST_st38_fsm_37) | (1'b1 == ap_sig_cseq_ST_st39_fsm_38) | (1'b1 == ap_sig_cseq_ST_st40_fsm_39) | (1'b1 == ap_sig_cseq_ST_st41_fsm_40) | (1'b1 == ap_sig_cseq_ST_st42_fsm_41) | (1'b1 == ap_sig_cseq_ST_st43_fsm_42) | (1'b1 == ap_sig_cseq_ST_st44_fsm_43) | (1'b1 == ap_sig_cseq_ST_st45_fsm_44) | (1'b1 == ap_sig_cseq_ST_st46_fsm_45) | (1'b1 == ap_sig_cseq_ST_st47_fsm_46) | (1'b1 == ap_sig_cseq_ST_st48_fsm_47) | (1'b1 == ap_sig_cseq_ST_st49_fsm_48) | (1'b1 == ap_sig_cseq_ST_st50_fsm_49) | ((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0)))) begin
        dest_1_0_we1 = 1'b1;
    end else if ((1'b1 == ap_sig_cseq_ST_st52_fsm_51)) begin
        dest_1_0_we1 = grp_worker_COO_SpMV_0_fu_1076_output_r_we1;
    end else begin
        dest_1_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st54_fsm_53)) begin
        dest_ce0 = 1'b1;
    end else begin
        dest_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st54_fsm_53)) begin
        dest_we0 = 1'b1;
    end else begin
        dest_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            ap_NS_fsm = ap_ST_st3_fsm_2;
        end
        ap_ST_st3_fsm_2 : begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        ap_ST_st21_fsm_20 : begin
            ap_NS_fsm = ap_ST_st22_fsm_21;
        end
        ap_ST_st22_fsm_21 : begin
            ap_NS_fsm = ap_ST_st23_fsm_22;
        end
        ap_ST_st23_fsm_22 : begin
            ap_NS_fsm = ap_ST_st24_fsm_23;
        end
        ap_ST_st24_fsm_23 : begin
            ap_NS_fsm = ap_ST_st25_fsm_24;
        end
        ap_ST_st25_fsm_24 : begin
            ap_NS_fsm = ap_ST_st26_fsm_25;
        end
        ap_ST_st26_fsm_25 : begin
            ap_NS_fsm = ap_ST_st27_fsm_26;
        end
        ap_ST_st27_fsm_26 : begin
            ap_NS_fsm = ap_ST_st28_fsm_27;
        end
        ap_ST_st28_fsm_27 : begin
            ap_NS_fsm = ap_ST_st29_fsm_28;
        end
        ap_ST_st29_fsm_28 : begin
            ap_NS_fsm = ap_ST_st30_fsm_29;
        end
        ap_ST_st30_fsm_29 : begin
            ap_NS_fsm = ap_ST_st31_fsm_30;
        end
        ap_ST_st31_fsm_30 : begin
            ap_NS_fsm = ap_ST_st32_fsm_31;
        end
        ap_ST_st32_fsm_31 : begin
            ap_NS_fsm = ap_ST_st33_fsm_32;
        end
        ap_ST_st33_fsm_32 : begin
            ap_NS_fsm = ap_ST_st34_fsm_33;
        end
        ap_ST_st34_fsm_33 : begin
            ap_NS_fsm = ap_ST_st35_fsm_34;
        end
        ap_ST_st35_fsm_34 : begin
            ap_NS_fsm = ap_ST_st36_fsm_35;
        end
        ap_ST_st36_fsm_35 : begin
            ap_NS_fsm = ap_ST_st37_fsm_36;
        end
        ap_ST_st37_fsm_36 : begin
            ap_NS_fsm = ap_ST_st38_fsm_37;
        end
        ap_ST_st38_fsm_37 : begin
            ap_NS_fsm = ap_ST_st39_fsm_38;
        end
        ap_ST_st39_fsm_38 : begin
            ap_NS_fsm = ap_ST_st40_fsm_39;
        end
        ap_ST_st40_fsm_39 : begin
            ap_NS_fsm = ap_ST_st41_fsm_40;
        end
        ap_ST_st41_fsm_40 : begin
            ap_NS_fsm = ap_ST_st42_fsm_41;
        end
        ap_ST_st42_fsm_41 : begin
            ap_NS_fsm = ap_ST_st43_fsm_42;
        end
        ap_ST_st43_fsm_42 : begin
            ap_NS_fsm = ap_ST_st44_fsm_43;
        end
        ap_ST_st44_fsm_43 : begin
            ap_NS_fsm = ap_ST_st45_fsm_44;
        end
        ap_ST_st45_fsm_44 : begin
            ap_NS_fsm = ap_ST_st46_fsm_45;
        end
        ap_ST_st46_fsm_45 : begin
            ap_NS_fsm = ap_ST_st47_fsm_46;
        end
        ap_ST_st47_fsm_46 : begin
            ap_NS_fsm = ap_ST_st48_fsm_47;
        end
        ap_ST_st48_fsm_47 : begin
            ap_NS_fsm = ap_ST_st49_fsm_48;
        end
        ap_ST_st49_fsm_48 : begin
            ap_NS_fsm = ap_ST_st50_fsm_49;
        end
        ap_ST_st50_fsm_49 : begin
            ap_NS_fsm = ap_ST_st51_fsm_50;
        end
        ap_ST_st51_fsm_50 : begin
            ap_NS_fsm = ap_ST_st52_fsm_51;
        end
        ap_ST_st52_fsm_51 : begin
            if (~(1'b0 == grp_worker_COO_SpMV_0_fu_1076_ap_done)) begin
                ap_NS_fsm = ap_ST_st53_fsm_52;
            end else begin
                ap_NS_fsm = ap_ST_st52_fsm_51;
            end
        end
        ap_ST_st53_fsm_52 : begin
            if (~(exitcond_fu_1089_p2 == 1'b0)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st54_fsm_53;
            end
        end
        ap_ST_st54_fsm_53 : begin
            ap_NS_fsm = ap_ST_st53_fsm_52;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    ap_sig_135 = (1'b1 == ap_CS_fsm[ap_const_lv32_33]);
end

always @ (*) begin
    ap_sig_145 = (1'b1 == ap_CS_fsm[ap_const_lv32_35]);
end

always @ (*) begin
    ap_sig_154 = (1'b1 == ap_CS_fsm[ap_const_lv32_32]);
end

always @ (*) begin
    ap_sig_199 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_210 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

always @ (*) begin
    ap_sig_221 = (1'b1 == ap_CS_fsm[ap_const_lv32_3]);
end

always @ (*) begin
    ap_sig_232 = (1'b1 == ap_CS_fsm[ap_const_lv32_4]);
end

always @ (*) begin
    ap_sig_243 = (1'b1 == ap_CS_fsm[ap_const_lv32_5]);
end

always @ (*) begin
    ap_sig_254 = (1'b1 == ap_CS_fsm[ap_const_lv32_6]);
end

always @ (*) begin
    ap_sig_265 = (1'b1 == ap_CS_fsm[ap_const_lv32_7]);
end

always @ (*) begin
    ap_sig_276 = (1'b1 == ap_CS_fsm[ap_const_lv32_8]);
end

always @ (*) begin
    ap_sig_287 = (1'b1 == ap_CS_fsm[ap_const_lv32_9]);
end

always @ (*) begin
    ap_sig_298 = (1'b1 == ap_CS_fsm[ap_const_lv32_A]);
end

always @ (*) begin
    ap_sig_309 = (1'b1 == ap_CS_fsm[ap_const_lv32_B]);
end

always @ (*) begin
    ap_sig_320 = (1'b1 == ap_CS_fsm[ap_const_lv32_C]);
end

always @ (*) begin
    ap_sig_331 = (1'b1 == ap_CS_fsm[ap_const_lv32_D]);
end

always @ (*) begin
    ap_sig_342 = (1'b1 == ap_CS_fsm[ap_const_lv32_E]);
end

always @ (*) begin
    ap_sig_353 = (1'b1 == ap_CS_fsm[ap_const_lv32_F]);
end

always @ (*) begin
    ap_sig_364 = (1'b1 == ap_CS_fsm[ap_const_lv32_10]);
end

always @ (*) begin
    ap_sig_375 = (1'b1 == ap_CS_fsm[ap_const_lv32_11]);
end

always @ (*) begin
    ap_sig_386 = (1'b1 == ap_CS_fsm[ap_const_lv32_12]);
end

always @ (*) begin
    ap_sig_397 = (1'b1 == ap_CS_fsm[ap_const_lv32_13]);
end

always @ (*) begin
    ap_sig_408 = (1'b1 == ap_CS_fsm[ap_const_lv32_14]);
end

always @ (*) begin
    ap_sig_419 = (1'b1 == ap_CS_fsm[ap_const_lv32_15]);
end

always @ (*) begin
    ap_sig_430 = (1'b1 == ap_CS_fsm[ap_const_lv32_16]);
end

always @ (*) begin
    ap_sig_441 = (1'b1 == ap_CS_fsm[ap_const_lv32_17]);
end

always @ (*) begin
    ap_sig_452 = (1'b1 == ap_CS_fsm[ap_const_lv32_18]);
end

always @ (*) begin
    ap_sig_463 = (1'b1 == ap_CS_fsm[ap_const_lv32_19]);
end

always @ (*) begin
    ap_sig_474 = (1'b1 == ap_CS_fsm[ap_const_lv32_1A]);
end

always @ (*) begin
    ap_sig_485 = (1'b1 == ap_CS_fsm[ap_const_lv32_1B]);
end

always @ (*) begin
    ap_sig_496 = (1'b1 == ap_CS_fsm[ap_const_lv32_1C]);
end

always @ (*) begin
    ap_sig_507 = (1'b1 == ap_CS_fsm[ap_const_lv32_1D]);
end

always @ (*) begin
    ap_sig_518 = (1'b1 == ap_CS_fsm[ap_const_lv32_1E]);
end

always @ (*) begin
    ap_sig_529 = (1'b1 == ap_CS_fsm[ap_const_lv32_1F]);
end

always @ (*) begin
    ap_sig_540 = (1'b1 == ap_CS_fsm[ap_const_lv32_20]);
end

always @ (*) begin
    ap_sig_551 = (1'b1 == ap_CS_fsm[ap_const_lv32_21]);
end

always @ (*) begin
    ap_sig_562 = (1'b1 == ap_CS_fsm[ap_const_lv32_22]);
end

always @ (*) begin
    ap_sig_573 = (1'b1 == ap_CS_fsm[ap_const_lv32_23]);
end

always @ (*) begin
    ap_sig_584 = (1'b1 == ap_CS_fsm[ap_const_lv32_24]);
end

always @ (*) begin
    ap_sig_595 = (1'b1 == ap_CS_fsm[ap_const_lv32_25]);
end

always @ (*) begin
    ap_sig_606 = (1'b1 == ap_CS_fsm[ap_const_lv32_26]);
end

always @ (*) begin
    ap_sig_617 = (1'b1 == ap_CS_fsm[ap_const_lv32_27]);
end

always @ (*) begin
    ap_sig_628 = (1'b1 == ap_CS_fsm[ap_const_lv32_28]);
end

always @ (*) begin
    ap_sig_639 = (1'b1 == ap_CS_fsm[ap_const_lv32_29]);
end

always @ (*) begin
    ap_sig_650 = (1'b1 == ap_CS_fsm[ap_const_lv32_2A]);
end

always @ (*) begin
    ap_sig_661 = (1'b1 == ap_CS_fsm[ap_const_lv32_2B]);
end

always @ (*) begin
    ap_sig_672 = (1'b1 == ap_CS_fsm[ap_const_lv32_2C]);
end

always @ (*) begin
    ap_sig_683 = (1'b1 == ap_CS_fsm[ap_const_lv32_2D]);
end

always @ (*) begin
    ap_sig_69 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_694 = (1'b1 == ap_CS_fsm[ap_const_lv32_2E]);
end

always @ (*) begin
    ap_sig_705 = (1'b1 == ap_CS_fsm[ap_const_lv32_2F]);
end

always @ (*) begin
    ap_sig_716 = (1'b1 == ap_CS_fsm[ap_const_lv32_30]);
end

always @ (*) begin
    ap_sig_727 = (1'b1 == ap_CS_fsm[ap_const_lv32_31]);
end

always @ (*) begin
    ap_sig_90 = (1'b1 == ap_CS_fsm[ap_const_lv32_34]);
end

assign dest_address0 = tmp_4_reg_1114;

assign dest_d0 = dest_1_0_q0;

assign exitcond_fu_1089_p2 = ((j2_reg_1065 == ap_const_lv7_64) ? 1'b1 : 1'b0);

assign grp_worker_COO_SpMV_0_fu_1076_ap_start = ap_reg_grp_worker_COO_SpMV_0_fu_1076_ap_start;

assign j_fu_1095_p2 = (j2_reg_1065 + ap_const_lv7_1);

assign tmp_4_fu_1101_p1 = j2_reg_1065;

always @ (posedge ap_clk) begin
    tmp_4_reg_1114[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
end

endmodule //worker
