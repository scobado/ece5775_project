// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module worker_COO_SpMV (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        row_address0,
        row_ce0,
        row_q0,
        col_address0,
        col_ce0,
        col_q0,
        val_r_address0,
        val_r_ce0,
        val_r_q0,
        output_0_address0,
        output_0_ce0,
        output_0_q0,
        output_0_address1,
        output_0_ce1,
        output_0_we1,
        output_0_d1,
        output_1_address0,
        output_1_ce0,
        output_1_q0,
        output_1_address1,
        output_1_ce1,
        output_1_we1,
        output_1_d1,
        output_2_address0,
        output_2_ce0,
        output_2_q0,
        output_2_address1,
        output_2_ce1,
        output_2_we1,
        output_2_d1,
        output_3_address0,
        output_3_ce0,
        output_3_q0,
        output_3_address1,
        output_3_ce1,
        output_3_we1,
        output_3_d1,
        nnz
);

parameter    ap_ST_st1_fsm_0 = 3'b1;
parameter    ap_ST_pp0_stg0_fsm_1 = 3'b10;
parameter    ap_ST_st21_fsm_2 = 3'b100;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv12_0 = 12'b000000000000;
parameter    ap_const_lv28_0 = 28'b0000000000000000000000000000;
parameter    ap_const_lv28_1 = 28'b1;
parameter    ap_const_lv28_2 = 28'b10;
parameter    ap_const_lv12_9C4 = 12'b100111000100;
parameter    ap_const_lv12_1 = 12'b1;
parameter    ap_const_lv7_19 = 7'b11001;
parameter    ap_const_lv65_147AE147B = 65'b101000111101011100001010001111011;
parameter    ap_const_lv32_25 = 32'b100101;
parameter    ap_const_lv32_40 = 32'b1000000;
parameter    ap_const_lv32_2 = 32'b10;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] row_address0;
output   row_ce0;
input  [6:0] row_q0;
output  [11:0] col_address0;
output   col_ce0;
input  [6:0] col_q0;
output  [11:0] val_r_address0;
output   val_r_ce0;
input  [31:0] val_r_q0;
output  [4:0] output_0_address0;
output   output_0_ce0;
input  [31:0] output_0_q0;
output  [4:0] output_0_address1;
output   output_0_ce1;
output   output_0_we1;
output  [31:0] output_0_d1;
output  [4:0] output_1_address0;
output   output_1_ce0;
input  [31:0] output_1_q0;
output  [4:0] output_1_address1;
output   output_1_ce1;
output   output_1_we1;
output  [31:0] output_1_d1;
output  [4:0] output_2_address0;
output   output_2_ce0;
input  [31:0] output_2_q0;
output  [4:0] output_2_address1;
output   output_2_ce1;
output   output_2_we1;
output  [31:0] output_2_d1;
output  [4:0] output_3_address0;
output   output_3_ce0;
input  [31:0] output_3_q0;
output  [4:0] output_3_address1;
output   output_3_ce1;
output   output_3_we1;
output  [31:0] output_3_d1;
input  [31:0] nnz;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg row_ce0;
reg col_ce0;
reg val_r_ce0;
reg output_0_ce0;
reg output_0_ce1;
reg output_0_we1;
reg output_1_ce0;
reg output_1_ce1;
reg output_1_we1;
reg output_2_ce0;
reg output_2_ce1;
reg output_2_we1;
reg output_3_ce0;
reg output_3_ce1;
reg output_3_we1;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_20;
wire   [6:0] vector_address0;
reg    vector_ce0;
wire   [31:0] vector_q0;
reg   [11:0] i_reg_180;
wire   [0:0] exitcond_fu_200_p2;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_1;
reg    ap_sig_105;
reg    ap_reg_ppiten_pp0_it0;
reg    ap_reg_ppiten_pp0_it1;
reg    ap_reg_ppiten_pp0_it2;
reg    ap_reg_ppiten_pp0_it3;
reg    ap_reg_ppiten_pp0_it4;
reg    ap_reg_ppiten_pp0_it5;
reg    ap_reg_ppiten_pp0_it6;
reg    ap_reg_ppiten_pp0_it7;
reg    ap_reg_ppiten_pp0_it8;
reg    ap_reg_ppiten_pp0_it9;
reg    ap_reg_ppiten_pp0_it10;
reg    ap_reg_ppiten_pp0_it11;
reg    ap_reg_ppiten_pp0_it12;
reg    ap_reg_ppiten_pp0_it13;
reg    ap_reg_ppiten_pp0_it14;
reg    ap_reg_ppiten_pp0_it15;
reg    ap_reg_ppiten_pp0_it16;
reg    ap_reg_ppiten_pp0_it17;
reg    ap_reg_ppiten_pp0_it18;
wire   [11:0] i_4_fu_206_p2;
wire   [0:0] tmp_fu_216_p2;
reg   [0:0] tmp_reg_298;
reg   [0:0] ap_reg_ppstg_tmp_reg_298_pp0_iter1;
reg   [0:0] ap_reg_ppstg_tmp_reg_298_pp0_iter2;
reg   [0:0] ap_reg_ppstg_tmp_reg_298_pp0_iter3;
reg   [0:0] ap_reg_ppstg_tmp_reg_298_pp0_iter4;
reg   [0:0] ap_reg_ppstg_tmp_reg_298_pp0_iter5;
reg   [0:0] ap_reg_ppstg_tmp_reg_298_pp0_iter6;
reg   [0:0] ap_reg_ppstg_tmp_reg_298_pp0_iter7;
reg   [0:0] ap_reg_ppstg_tmp_reg_298_pp0_iter8;
reg   [0:0] ap_reg_ppstg_tmp_reg_298_pp0_iter9;
reg   [0:0] ap_reg_ppstg_tmp_reg_298_pp0_iter10;
reg   [0:0] ap_reg_ppstg_tmp_reg_298_pp0_iter11;
reg   [0:0] ap_reg_ppstg_tmp_reg_298_pp0_iter12;
reg   [0:0] ap_reg_ppstg_tmp_reg_298_pp0_iter13;
reg   [0:0] ap_reg_ppstg_tmp_reg_298_pp0_iter14;
reg   [0:0] ap_reg_ppstg_tmp_reg_298_pp0_iter15;
reg   [0:0] ap_reg_ppstg_tmp_reg_298_pp0_iter16;
reg   [0:0] ap_reg_ppstg_tmp_reg_298_pp0_iter17;
reg   [31:0] val_load_reg_317;
reg   [6:0] row_load_reg_327;
reg   [6:0] ap_reg_ppstg_row_load_reg_327_pp0_iter2;
reg   [6:0] ap_reg_ppstg_row_load_reg_327_pp0_iter3;
reg   [6:0] ap_reg_ppstg_row_load_reg_327_pp0_iter4;
reg   [6:0] ap_reg_ppstg_row_load_reg_327_pp0_iter5;
reg   [6:0] ap_reg_ppstg_row_load_reg_327_pp0_iter6;
reg   [6:0] ap_reg_ppstg_row_load_reg_327_pp0_iter7;
reg   [6:0] ap_reg_ppstg_row_load_reg_327_pp0_iter8;
reg   [6:0] ap_reg_ppstg_row_load_reg_327_pp0_iter9;
wire   [31:0] grp_fu_195_p2;
reg   [31:0] tmp_4_reg_338;
reg   [31:0] ap_reg_ppstg_tmp_4_reg_338_pp0_iter6;
reg   [31:0] ap_reg_ppstg_tmp_4_reg_338_pp0_iter7;
reg   [31:0] ap_reg_ppstg_tmp_4_reg_338_pp0_iter8;
reg   [31:0] ap_reg_ppstg_tmp_4_reg_338_pp0_iter9;
reg   [31:0] ap_reg_ppstg_tmp_4_reg_338_pp0_iter10;
reg   [31:0] ap_reg_ppstg_tmp_4_reg_338_pp0_iter11;
reg   [31:0] ap_reg_ppstg_tmp_4_reg_338_pp0_iter12;
reg   [4:0] output_0_addr_reg_348;
reg   [4:0] ap_reg_ppstg_output_0_addr_reg_348_pp0_iter12;
reg   [4:0] ap_reg_ppstg_output_0_addr_reg_348_pp0_iter13;
reg   [4:0] ap_reg_ppstg_output_0_addr_reg_348_pp0_iter14;
reg   [4:0] ap_reg_ppstg_output_0_addr_reg_348_pp0_iter15;
reg   [4:0] ap_reg_ppstg_output_0_addr_reg_348_pp0_iter16;
reg   [4:0] ap_reg_ppstg_output_0_addr_reg_348_pp0_iter17;
reg   [4:0] output_1_addr_reg_354;
reg   [4:0] ap_reg_ppstg_output_1_addr_reg_354_pp0_iter12;
reg   [4:0] ap_reg_ppstg_output_1_addr_reg_354_pp0_iter13;
reg   [4:0] ap_reg_ppstg_output_1_addr_reg_354_pp0_iter14;
reg   [4:0] ap_reg_ppstg_output_1_addr_reg_354_pp0_iter15;
reg   [4:0] ap_reg_ppstg_output_1_addr_reg_354_pp0_iter16;
reg   [4:0] ap_reg_ppstg_output_1_addr_reg_354_pp0_iter17;
reg   [4:0] output_2_addr_reg_360;
reg   [4:0] ap_reg_ppstg_output_2_addr_reg_360_pp0_iter12;
reg   [4:0] ap_reg_ppstg_output_2_addr_reg_360_pp0_iter13;
reg   [4:0] ap_reg_ppstg_output_2_addr_reg_360_pp0_iter14;
reg   [4:0] ap_reg_ppstg_output_2_addr_reg_360_pp0_iter15;
reg   [4:0] ap_reg_ppstg_output_2_addr_reg_360_pp0_iter16;
reg   [4:0] ap_reg_ppstg_output_2_addr_reg_360_pp0_iter17;
reg   [4:0] output_3_addr_reg_366;
reg   [4:0] ap_reg_ppstg_output_3_addr_reg_366_pp0_iter12;
reg   [4:0] ap_reg_ppstg_output_3_addr_reg_366_pp0_iter13;
reg   [4:0] ap_reg_ppstg_output_3_addr_reg_366_pp0_iter14;
reg   [4:0] ap_reg_ppstg_output_3_addr_reg_366_pp0_iter15;
reg   [4:0] ap_reg_ppstg_output_3_addr_reg_366_pp0_iter16;
reg   [4:0] ap_reg_ppstg_output_3_addr_reg_366_pp0_iter17;
wire   [27:0] tmp_19_fu_256_p4;
reg   [27:0] tmp_19_reg_372;
reg   [27:0] ap_reg_ppstg_tmp_19_reg_372_pp0_iter13;
reg   [27:0] ap_reg_ppstg_tmp_19_reg_372_pp0_iter14;
reg   [27:0] ap_reg_ppstg_tmp_19_reg_372_pp0_iter15;
reg   [27:0] ap_reg_ppstg_tmp_19_reg_372_pp0_iter16;
reg   [27:0] ap_reg_ppstg_tmp_19_reg_372_pp0_iter17;
wire   [31:0] tmp_13_fu_270_p6;
reg   [31:0] tmp_13_reg_376;
wire   [31:0] grp_fu_191_p2;
reg   [31:0] tmp_6_reg_381;
wire   [63:0] tmp_s_fu_221_p1;
wire   [63:0] tmp_3_fu_228_p1;
wire   [63:0] newIndex4_fu_248_p1;
wire   [31:0] i_cast1_fu_212_p1;
wire   [5:0] grp_fu_233_p1;
wire   [6:0] grp_fu_242_p0;
wire   [33:0] grp_fu_242_p1;
wire   [6:0] grp_fu_233_p2;
wire   [64:0] grp_fu_242_p2;
wire   [31:0] tmp_13_fu_270_p5;
reg    ap_sig_cseq_ST_st21_fsm_2;
reg    ap_sig_412;
reg   [2:0] ap_NS_fsm;
wire   [64:0] grp_fu_242_p00;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'b1;
#0 ap_reg_ppiten_pp0_it0 = 1'b0;
#0 ap_reg_ppiten_pp0_it1 = 1'b0;
#0 ap_reg_ppiten_pp0_it2 = 1'b0;
#0 ap_reg_ppiten_pp0_it3 = 1'b0;
#0 ap_reg_ppiten_pp0_it4 = 1'b0;
#0 ap_reg_ppiten_pp0_it5 = 1'b0;
#0 ap_reg_ppiten_pp0_it6 = 1'b0;
#0 ap_reg_ppiten_pp0_it7 = 1'b0;
#0 ap_reg_ppiten_pp0_it8 = 1'b0;
#0 ap_reg_ppiten_pp0_it9 = 1'b0;
#0 ap_reg_ppiten_pp0_it10 = 1'b0;
#0 ap_reg_ppiten_pp0_it11 = 1'b0;
#0 ap_reg_ppiten_pp0_it12 = 1'b0;
#0 ap_reg_ppiten_pp0_it13 = 1'b0;
#0 ap_reg_ppiten_pp0_it14 = 1'b0;
#0 ap_reg_ppiten_pp0_it15 = 1'b0;
#0 ap_reg_ppiten_pp0_it16 = 1'b0;
#0 ap_reg_ppiten_pp0_it17 = 1'b0;
#0 ap_reg_ppiten_pp0_it18 = 1'b0;
end

worker_COO_SpMV_vector #(
    .DataWidth( 32 ),
    .AddressRange( 100 ),
    .AddressWidth( 7 ))
vector_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(vector_address0),
    .ce0(vector_ce0),
    .q0(vector_q0)
);

worker_fadd_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
worker_fadd_32ns_32ns_32_5_full_dsp_U26(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_13_reg_376),
    .din1(ap_reg_ppstg_tmp_4_reg_338_pp0_iter12),
    .ce(1'b1),
    .dout(grp_fu_191_p2)
);

worker_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
worker_fmul_32ns_32ns_32_4_max_dsp_U27(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(val_load_reg_317),
    .din1(vector_q0),
    .ce(1'b1),
    .dout(grp_fu_195_p2)
);

worker_urem_7ns_6ns_7_11 #(
    .ID( 1 ),
    .NUM_STAGE( 11 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 7 ))
worker_urem_7ns_6ns_7_11_U28(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(row_q0),
    .din1(grp_fu_233_p1),
    .ce(1'b1),
    .dout(grp_fu_233_p2)
);

worker_mul_7ns_34ns_65_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 34 ),
    .dout_WIDTH( 65 ))
worker_mul_7ns_34ns_65_3_U29(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_242_p0),
    .din1(grp_fu_242_p1),
    .ce(1'b1),
    .dout(grp_fu_242_p2)
);

worker_mux_4to1_sel32_32_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
worker_mux_4to1_sel32_32_1_U30(
    .din1(output_0_q0),
    .din2(output_1_q0),
    .din3(output_2_q0),
    .din4(output_3_q0),
    .din5(tmp_13_fu_270_p5),
    .dout(tmp_13_fu_270_p6)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(exitcond_fu_200_p2 == 1'b0))) begin
            ap_reg_ppiten_pp0_it0 <= 1'b0;
        end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
            ap_reg_ppiten_pp0_it0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (exitcond_fu_200_p2 == 1'b0))) begin
            ap_reg_ppiten_pp0_it1 <= 1'b1;
        end else if ((((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0)) | ((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(exitcond_fu_200_p2 == 1'b0)))) begin
            ap_reg_ppiten_pp0_it1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it10 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp0_it10 <= ap_reg_ppiten_pp0_it9;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it11 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp0_it11 <= ap_reg_ppiten_pp0_it10;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it12 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp0_it12 <= ap_reg_ppiten_pp0_it11;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it13 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp0_it13 <= ap_reg_ppiten_pp0_it12;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it14 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp0_it14 <= ap_reg_ppiten_pp0_it13;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it15 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp0_it15 <= ap_reg_ppiten_pp0_it14;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it16 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp0_it16 <= ap_reg_ppiten_pp0_it15;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it17 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp0_it17 <= ap_reg_ppiten_pp0_it16;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it18 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp0_it18 <= ap_reg_ppiten_pp0_it17;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it2 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it3 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it4 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it5 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp0_it5 <= ap_reg_ppiten_pp0_it4;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it6 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp0_it6 <= ap_reg_ppiten_pp0_it5;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it7 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp0_it7 <= ap_reg_ppiten_pp0_it6;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it8 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp0_it8 <= ap_reg_ppiten_pp0_it7;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it9 <= 1'b0;
    end else begin
        ap_reg_ppiten_pp0_it9 <= ap_reg_ppiten_pp0_it8;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (1'b1 == ap_reg_ppiten_pp0_it0) & (exitcond_fu_200_p2 == 1'b0))) begin
        i_reg_180 <= i_4_fu_206_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        i_reg_180 <= ap_const_lv12_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == 1'b1)) begin
        ap_reg_ppstg_output_0_addr_reg_348_pp0_iter12 <= output_0_addr_reg_348;
        ap_reg_ppstg_output_0_addr_reg_348_pp0_iter13 <= ap_reg_ppstg_output_0_addr_reg_348_pp0_iter12;
        ap_reg_ppstg_output_0_addr_reg_348_pp0_iter14 <= ap_reg_ppstg_output_0_addr_reg_348_pp0_iter13;
        ap_reg_ppstg_output_0_addr_reg_348_pp0_iter15 <= ap_reg_ppstg_output_0_addr_reg_348_pp0_iter14;
        ap_reg_ppstg_output_0_addr_reg_348_pp0_iter16 <= ap_reg_ppstg_output_0_addr_reg_348_pp0_iter15;
        ap_reg_ppstg_output_0_addr_reg_348_pp0_iter17 <= ap_reg_ppstg_output_0_addr_reg_348_pp0_iter16;
        ap_reg_ppstg_output_1_addr_reg_354_pp0_iter12 <= output_1_addr_reg_354;
        ap_reg_ppstg_output_1_addr_reg_354_pp0_iter13 <= ap_reg_ppstg_output_1_addr_reg_354_pp0_iter12;
        ap_reg_ppstg_output_1_addr_reg_354_pp0_iter14 <= ap_reg_ppstg_output_1_addr_reg_354_pp0_iter13;
        ap_reg_ppstg_output_1_addr_reg_354_pp0_iter15 <= ap_reg_ppstg_output_1_addr_reg_354_pp0_iter14;
        ap_reg_ppstg_output_1_addr_reg_354_pp0_iter16 <= ap_reg_ppstg_output_1_addr_reg_354_pp0_iter15;
        ap_reg_ppstg_output_1_addr_reg_354_pp0_iter17 <= ap_reg_ppstg_output_1_addr_reg_354_pp0_iter16;
        ap_reg_ppstg_output_2_addr_reg_360_pp0_iter12 <= output_2_addr_reg_360;
        ap_reg_ppstg_output_2_addr_reg_360_pp0_iter13 <= ap_reg_ppstg_output_2_addr_reg_360_pp0_iter12;
        ap_reg_ppstg_output_2_addr_reg_360_pp0_iter14 <= ap_reg_ppstg_output_2_addr_reg_360_pp0_iter13;
        ap_reg_ppstg_output_2_addr_reg_360_pp0_iter15 <= ap_reg_ppstg_output_2_addr_reg_360_pp0_iter14;
        ap_reg_ppstg_output_2_addr_reg_360_pp0_iter16 <= ap_reg_ppstg_output_2_addr_reg_360_pp0_iter15;
        ap_reg_ppstg_output_2_addr_reg_360_pp0_iter17 <= ap_reg_ppstg_output_2_addr_reg_360_pp0_iter16;
        ap_reg_ppstg_output_3_addr_reg_366_pp0_iter12 <= output_3_addr_reg_366;
        ap_reg_ppstg_output_3_addr_reg_366_pp0_iter13 <= ap_reg_ppstg_output_3_addr_reg_366_pp0_iter12;
        ap_reg_ppstg_output_3_addr_reg_366_pp0_iter14 <= ap_reg_ppstg_output_3_addr_reg_366_pp0_iter13;
        ap_reg_ppstg_output_3_addr_reg_366_pp0_iter15 <= ap_reg_ppstg_output_3_addr_reg_366_pp0_iter14;
        ap_reg_ppstg_output_3_addr_reg_366_pp0_iter16 <= ap_reg_ppstg_output_3_addr_reg_366_pp0_iter15;
        ap_reg_ppstg_output_3_addr_reg_366_pp0_iter17 <= ap_reg_ppstg_output_3_addr_reg_366_pp0_iter16;
        ap_reg_ppstg_row_load_reg_327_pp0_iter2 <= row_load_reg_327;
        ap_reg_ppstg_row_load_reg_327_pp0_iter3 <= ap_reg_ppstg_row_load_reg_327_pp0_iter2;
        ap_reg_ppstg_row_load_reg_327_pp0_iter4 <= ap_reg_ppstg_row_load_reg_327_pp0_iter3;
        ap_reg_ppstg_row_load_reg_327_pp0_iter5 <= ap_reg_ppstg_row_load_reg_327_pp0_iter4;
        ap_reg_ppstg_row_load_reg_327_pp0_iter6 <= ap_reg_ppstg_row_load_reg_327_pp0_iter5;
        ap_reg_ppstg_row_load_reg_327_pp0_iter7 <= ap_reg_ppstg_row_load_reg_327_pp0_iter6;
        ap_reg_ppstg_row_load_reg_327_pp0_iter8 <= ap_reg_ppstg_row_load_reg_327_pp0_iter7;
        ap_reg_ppstg_row_load_reg_327_pp0_iter9 <= ap_reg_ppstg_row_load_reg_327_pp0_iter8;
        ap_reg_ppstg_tmp_19_reg_372_pp0_iter13 <= tmp_19_reg_372;
        ap_reg_ppstg_tmp_19_reg_372_pp0_iter14 <= ap_reg_ppstg_tmp_19_reg_372_pp0_iter13;
        ap_reg_ppstg_tmp_19_reg_372_pp0_iter15 <= ap_reg_ppstg_tmp_19_reg_372_pp0_iter14;
        ap_reg_ppstg_tmp_19_reg_372_pp0_iter16 <= ap_reg_ppstg_tmp_19_reg_372_pp0_iter15;
        ap_reg_ppstg_tmp_19_reg_372_pp0_iter17 <= ap_reg_ppstg_tmp_19_reg_372_pp0_iter16;
        ap_reg_ppstg_tmp_4_reg_338_pp0_iter10 <= ap_reg_ppstg_tmp_4_reg_338_pp0_iter9;
        ap_reg_ppstg_tmp_4_reg_338_pp0_iter11 <= ap_reg_ppstg_tmp_4_reg_338_pp0_iter10;
        ap_reg_ppstg_tmp_4_reg_338_pp0_iter12 <= ap_reg_ppstg_tmp_4_reg_338_pp0_iter11;
        ap_reg_ppstg_tmp_4_reg_338_pp0_iter6 <= tmp_4_reg_338;
        ap_reg_ppstg_tmp_4_reg_338_pp0_iter7 <= ap_reg_ppstg_tmp_4_reg_338_pp0_iter6;
        ap_reg_ppstg_tmp_4_reg_338_pp0_iter8 <= ap_reg_ppstg_tmp_4_reg_338_pp0_iter7;
        ap_reg_ppstg_tmp_4_reg_338_pp0_iter9 <= ap_reg_ppstg_tmp_4_reg_338_pp0_iter8;
        ap_reg_ppstg_tmp_reg_298_pp0_iter10 <= ap_reg_ppstg_tmp_reg_298_pp0_iter9;
        ap_reg_ppstg_tmp_reg_298_pp0_iter11 <= ap_reg_ppstg_tmp_reg_298_pp0_iter10;
        ap_reg_ppstg_tmp_reg_298_pp0_iter12 <= ap_reg_ppstg_tmp_reg_298_pp0_iter11;
        ap_reg_ppstg_tmp_reg_298_pp0_iter13 <= ap_reg_ppstg_tmp_reg_298_pp0_iter12;
        ap_reg_ppstg_tmp_reg_298_pp0_iter14 <= ap_reg_ppstg_tmp_reg_298_pp0_iter13;
        ap_reg_ppstg_tmp_reg_298_pp0_iter15 <= ap_reg_ppstg_tmp_reg_298_pp0_iter14;
        ap_reg_ppstg_tmp_reg_298_pp0_iter16 <= ap_reg_ppstg_tmp_reg_298_pp0_iter15;
        ap_reg_ppstg_tmp_reg_298_pp0_iter17 <= ap_reg_ppstg_tmp_reg_298_pp0_iter16;
        ap_reg_ppstg_tmp_reg_298_pp0_iter2 <= ap_reg_ppstg_tmp_reg_298_pp0_iter1;
        ap_reg_ppstg_tmp_reg_298_pp0_iter3 <= ap_reg_ppstg_tmp_reg_298_pp0_iter2;
        ap_reg_ppstg_tmp_reg_298_pp0_iter4 <= ap_reg_ppstg_tmp_reg_298_pp0_iter3;
        ap_reg_ppstg_tmp_reg_298_pp0_iter5 <= ap_reg_ppstg_tmp_reg_298_pp0_iter4;
        ap_reg_ppstg_tmp_reg_298_pp0_iter6 <= ap_reg_ppstg_tmp_reg_298_pp0_iter5;
        ap_reg_ppstg_tmp_reg_298_pp0_iter7 <= ap_reg_ppstg_tmp_reg_298_pp0_iter6;
        ap_reg_ppstg_tmp_reg_298_pp0_iter8 <= ap_reg_ppstg_tmp_reg_298_pp0_iter7;
        ap_reg_ppstg_tmp_reg_298_pp0_iter9 <= ap_reg_ppstg_tmp_reg_298_pp0_iter8;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1)) begin
        ap_reg_ppstg_tmp_reg_298_pp0_iter1 <= tmp_reg_298;
    end
end

always @ (posedge ap_clk) begin
    if (~(1'b0 == ap_reg_ppstg_tmp_reg_298_pp0_iter10)) begin
        output_0_addr_reg_348 <= newIndex4_fu_248_p1;
        output_1_addr_reg_354 <= newIndex4_fu_248_p1;
        output_2_addr_reg_360 <= newIndex4_fu_248_p1;
        output_3_addr_reg_366 <= newIndex4_fu_248_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(tmp_reg_298 == 1'b0))) begin
        row_load_reg_327 <= row_q0;
        val_load_reg_317 <= val_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if (~(1'b0 == ap_reg_ppstg_tmp_reg_298_pp0_iter11)) begin
        tmp_13_reg_376 <= tmp_13_fu_270_p6;
        tmp_19_reg_372 <= {{grp_fu_242_p2[ap_const_lv32_40 : ap_const_lv32_25]}};
    end
end

always @ (posedge ap_clk) begin
    if (~(1'b0 == ap_reg_ppstg_tmp_reg_298_pp0_iter4)) begin
        tmp_4_reg_338 <= grp_fu_195_p2;
    end
end

always @ (posedge ap_clk) begin
    if (~(1'b0 == ap_reg_ppstg_tmp_reg_298_pp0_iter16)) begin
        tmp_6_reg_381 <= grp_fu_191_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (exitcond_fu_200_p2 == 1'b0))) begin
        tmp_reg_298 <= tmp_fu_216_p2;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0)) | (1'b1 == ap_sig_cseq_ST_st21_fsm_2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st21_fsm_2)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_105) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_20) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_412) begin
        ap_sig_cseq_ST_st21_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st21_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (1'b1 == ap_reg_ppiten_pp0_it0))) begin
        col_ce0 = 1'b1;
    end else begin
        col_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it11)) begin
        output_0_ce0 = 1'b1;
    end else begin
        output_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it18)) begin
        output_0_ce1 = 1'b1;
    end else begin
        output_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it18) & ~(1'b0 == ap_reg_ppstg_tmp_reg_298_pp0_iter17) & (ap_reg_ppstg_tmp_19_reg_372_pp0_iter17 == ap_const_lv28_0))) begin
        output_0_we1 = 1'b1;
    end else begin
        output_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it11)) begin
        output_1_ce0 = 1'b1;
    end else begin
        output_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it18)) begin
        output_1_ce1 = 1'b1;
    end else begin
        output_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it18) & ~(1'b0 == ap_reg_ppstg_tmp_reg_298_pp0_iter17) & (ap_reg_ppstg_tmp_19_reg_372_pp0_iter17 == ap_const_lv28_1))) begin
        output_1_we1 = 1'b1;
    end else begin
        output_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it11)) begin
        output_2_ce0 = 1'b1;
    end else begin
        output_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it18)) begin
        output_2_ce1 = 1'b1;
    end else begin
        output_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it18) & ~(1'b0 == ap_reg_ppstg_tmp_reg_298_pp0_iter17) & (ap_reg_ppstg_tmp_19_reg_372_pp0_iter17 == ap_const_lv28_2))) begin
        output_2_we1 = 1'b1;
    end else begin
        output_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it11)) begin
        output_3_ce0 = 1'b1;
    end else begin
        output_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_reg_ppiten_pp0_it18)) begin
        output_3_ce1 = 1'b1;
    end else begin
        output_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it18) & ~(1'b0 == ap_reg_ppstg_tmp_reg_298_pp0_iter17) & ~(ap_reg_ppstg_tmp_19_reg_372_pp0_iter17 == ap_const_lv28_0) & ~(ap_reg_ppstg_tmp_19_reg_372_pp0_iter17 == ap_const_lv28_1) & ~(ap_reg_ppstg_tmp_19_reg_372_pp0_iter17 == ap_const_lv28_2))) begin
        output_3_we1 = 1'b1;
    end else begin
        output_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (1'b1 == ap_reg_ppiten_pp0_it0))) begin
        row_ce0 = 1'b1;
    end else begin
        row_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (1'b1 == ap_reg_ppiten_pp0_it0))) begin
        val_r_ce0 = 1'b1;
    end else begin
        val_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (1'b1 == ap_reg_ppiten_pp0_it1))) begin
        vector_ce0 = 1'b1;
    end else begin
        vector_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_pp0_stg0_fsm_1 : begin
            if ((~((1'b1 == ap_reg_ppiten_pp0_it18) & ~(1'b1 == ap_reg_ppiten_pp0_it17)) & ~((1'b1 == ap_reg_ppiten_pp0_it0) & ~(exitcond_fu_200_p2 == 1'b0) & ~(1'b1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            end else if (((1'b1 == ap_reg_ppiten_pp0_it0) & ~(exitcond_fu_200_p2 == 1'b0) & ~(1'b1 == ap_reg_ppiten_pp0_it1))) begin
                ap_NS_fsm = ap_ST_st21_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st21_fsm_2;
            end
        end
        ap_ST_st21_fsm_2 : begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    ap_sig_105 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_20 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_412 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

assign col_address0 = tmp_s_fu_221_p1;

assign exitcond_fu_200_p2 = ((i_reg_180 == ap_const_lv12_9C4) ? 1'b1 : 1'b0);

assign grp_fu_233_p1 = ap_const_lv7_19;

assign grp_fu_242_p0 = grp_fu_242_p00;

assign grp_fu_242_p00 = ap_reg_ppstg_row_load_reg_327_pp0_iter9;

assign grp_fu_242_p1 = ap_const_lv65_147AE147B;

assign i_4_fu_206_p2 = (i_reg_180 + ap_const_lv12_1);

assign i_cast1_fu_212_p1 = i_reg_180;

assign newIndex4_fu_248_p1 = grp_fu_233_p2;

assign output_0_address0 = newIndex4_fu_248_p1;

assign output_0_address1 = ap_reg_ppstg_output_0_addr_reg_348_pp0_iter17;

assign output_0_d1 = tmp_6_reg_381;

assign output_1_address0 = newIndex4_fu_248_p1;

assign output_1_address1 = ap_reg_ppstg_output_1_addr_reg_354_pp0_iter17;

assign output_1_d1 = tmp_6_reg_381;

assign output_2_address0 = newIndex4_fu_248_p1;

assign output_2_address1 = ap_reg_ppstg_output_2_addr_reg_360_pp0_iter17;

assign output_2_d1 = tmp_6_reg_381;

assign output_3_address0 = newIndex4_fu_248_p1;

assign output_3_address1 = ap_reg_ppstg_output_3_addr_reg_366_pp0_iter17;

assign output_3_d1 = tmp_6_reg_381;

assign row_address0 = tmp_s_fu_221_p1;

assign tmp_13_fu_270_p5 = tmp_19_fu_256_p4;

assign tmp_19_fu_256_p4 = {{grp_fu_242_p2[ap_const_lv32_40 : ap_const_lv32_25]}};

assign tmp_3_fu_228_p1 = col_q0;

assign tmp_fu_216_p2 = (($signed(i_cast1_fu_212_p1) < $signed(nnz)) ? 1'b1 : 1'b0);

assign tmp_s_fu_221_p1 = i_reg_180;

assign val_r_address0 = tmp_s_fu_221_p1;

assign vector_address0 = tmp_3_fu_228_p1;

endmodule //worker_COO_SpMV
