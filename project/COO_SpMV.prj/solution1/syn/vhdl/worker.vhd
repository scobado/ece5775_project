-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.2
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity worker is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    dest_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    dest_0_ce0 : OUT STD_LOGIC;
    dest_0_we0 : OUT STD_LOGIC;
    dest_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    dest_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    dest_0_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    dest_0_ce1 : OUT STD_LOGIC;
    dest_0_we1 : OUT STD_LOGIC;
    dest_0_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    dest_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    dest_1_ce0 : OUT STD_LOGIC;
    dest_1_we0 : OUT STD_LOGIC;
    dest_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    dest_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    dest_1_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    dest_1_ce1 : OUT STD_LOGIC;
    dest_1_we1 : OUT STD_LOGIC;
    dest_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    dest_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    dest_2_ce0 : OUT STD_LOGIC;
    dest_2_we0 : OUT STD_LOGIC;
    dest_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    dest_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    dest_2_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    dest_2_ce1 : OUT STD_LOGIC;
    dest_2_we1 : OUT STD_LOGIC;
    dest_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    dest_3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    dest_3_ce0 : OUT STD_LOGIC;
    dest_3_we0 : OUT STD_LOGIC;
    dest_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    dest_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    dest_3_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    dest_3_ce1 : OUT STD_LOGIC;
    dest_3_we1 : OUT STD_LOGIC;
    dest_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of worker is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "worker,hls_ip_2016_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.159000,HLS_SYN_LAT=61500,HLS_SYN_TPT=none,HLS_SYN_MEM=91,HLS_SYN_DSP=9,HLS_SYN_FF=1219,HLS_SYN_LUT=2006}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000001000";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000010000";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000100000";
    constant ap_ST_st7_fsm_6 : STD_LOGIC_VECTOR (16 downto 0) := "00000000001000000";
    constant ap_ST_st8_fsm_7 : STD_LOGIC_VECTOR (16 downto 0) := "00000000010000000";
    constant ap_ST_st9_fsm_8 : STD_LOGIC_VECTOR (16 downto 0) := "00000000100000000";
    constant ap_ST_st10_fsm_9 : STD_LOGIC_VECTOR (16 downto 0) := "00000001000000000";
    constant ap_ST_st11_fsm_10 : STD_LOGIC_VECTOR (16 downto 0) := "00000010000000000";
    constant ap_ST_st12_fsm_11 : STD_LOGIC_VECTOR (16 downto 0) := "00000100000000000";
    constant ap_ST_st13_fsm_12 : STD_LOGIC_VECTOR (16 downto 0) := "00001000000000000";
    constant ap_ST_st14_fsm_13 : STD_LOGIC_VECTOR (16 downto 0) := "00010000000000000";
    constant ap_ST_st15_fsm_14 : STD_LOGIC_VECTOR (16 downto 0) := "00100000000000000";
    constant ap_ST_st16_fsm_15 : STD_LOGIC_VECTOR (16 downto 0) := "01000000000000000";
    constant ap_ST_st17_fsm_16 : STD_LOGIC_VECTOR (16 downto 0) := "10000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv8_19 : STD_LOGIC_VECTOR (7 downto 0) := "00011001";
    constant ap_const_lv8_32 : STD_LOGIC_VECTOR (7 downto 0) := "00110010";
    constant ap_const_lv8_4B : STD_LOGIC_VECTOR (7 downto 0) := "01001011";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv7_64 : STD_LOGIC_VECTOR (6 downto 0) := "1100100";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv15_A4 : STD_LOGIC_VECTOR (14 downto 0) := "000000010100100";
    constant ap_const_lv7_19 : STD_LOGIC_VECTOR (6 downto 0) := "0011001";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_32 : BOOLEAN;
    signal grp_worker_create_COO_fu_209_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_253 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_94 : BOOLEAN;
    signal grp_worker_create_COO_fu_209_ap_done : STD_LOGIC;
    signal ap_sig_cseq_ST_st7_fsm_6 : STD_LOGIC;
    signal ap_sig_105 : BOOLEAN;
    signal ap_sig_cseq_ST_st11_fsm_10 : STD_LOGIC;
    signal ap_sig_114 : BOOLEAN;
    signal ap_sig_cseq_ST_st15_fsm_14 : STD_LOGIC;
    signal ap_sig_123 : BOOLEAN;
    signal i_1_fu_264_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_134 : BOOLEAN;
    signal next_mul_fu_270_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal exitcond1_fu_258_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal idx_urem_fu_306_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal row_1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal row_1_ce0 : STD_LOGIC;
    signal row_1_q0 : STD_LOGIC_VECTOR (6 downto 0);
    signal col_1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal col_1_ce0 : STD_LOGIC;
    signal col_1_q0 : STD_LOGIC_VECTOR (6 downto 0);
    signal val_1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal val_1_ce0 : STD_LOGIC;
    signal val_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_worker_COO_SpMV_fu_191_ap_start : STD_LOGIC;
    signal grp_worker_COO_SpMV_fu_191_ap_done : STD_LOGIC;
    signal grp_worker_COO_SpMV_fu_191_ap_idle : STD_LOGIC;
    signal grp_worker_COO_SpMV_fu_191_ap_ready : STD_LOGIC;
    signal grp_worker_COO_SpMV_fu_191_row_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_worker_COO_SpMV_fu_191_row_ce0 : STD_LOGIC;
    signal grp_worker_COO_SpMV_fu_191_col_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_worker_COO_SpMV_fu_191_col_ce0 : STD_LOGIC;
    signal grp_worker_COO_SpMV_fu_191_val_r_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_worker_COO_SpMV_fu_191_val_r_ce0 : STD_LOGIC;
    signal grp_worker_COO_SpMV_fu_191_output_0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_worker_COO_SpMV_fu_191_output_0_ce0 : STD_LOGIC;
    signal grp_worker_COO_SpMV_fu_191_output_0_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_worker_COO_SpMV_fu_191_output_0_ce1 : STD_LOGIC;
    signal grp_worker_COO_SpMV_fu_191_output_0_we1 : STD_LOGIC;
    signal grp_worker_COO_SpMV_fu_191_output_0_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_worker_COO_SpMV_fu_191_output_1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_worker_COO_SpMV_fu_191_output_1_ce0 : STD_LOGIC;
    signal grp_worker_COO_SpMV_fu_191_output_1_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_worker_COO_SpMV_fu_191_output_1_ce1 : STD_LOGIC;
    signal grp_worker_COO_SpMV_fu_191_output_1_we1 : STD_LOGIC;
    signal grp_worker_COO_SpMV_fu_191_output_1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_worker_COO_SpMV_fu_191_output_2_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_worker_COO_SpMV_fu_191_output_2_ce0 : STD_LOGIC;
    signal grp_worker_COO_SpMV_fu_191_output_2_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_worker_COO_SpMV_fu_191_output_2_ce1 : STD_LOGIC;
    signal grp_worker_COO_SpMV_fu_191_output_2_we1 : STD_LOGIC;
    signal grp_worker_COO_SpMV_fu_191_output_2_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_worker_COO_SpMV_fu_191_output_3_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_worker_COO_SpMV_fu_191_output_3_ce0 : STD_LOGIC;
    signal grp_worker_COO_SpMV_fu_191_output_3_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_worker_COO_SpMV_fu_191_output_3_ce1 : STD_LOGIC;
    signal grp_worker_COO_SpMV_fu_191_output_3_we1 : STD_LOGIC;
    signal grp_worker_COO_SpMV_fu_191_output_3_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_worker_create_COO_fu_209_ap_start : STD_LOGIC;
    signal grp_worker_create_COO_fu_209_ap_idle : STD_LOGIC;
    signal grp_worker_create_COO_fu_209_ap_ready : STD_LOGIC;
    signal grp_worker_create_COO_fu_209_row_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_worker_create_COO_fu_209_row_ce0 : STD_LOGIC;
    signal grp_worker_create_COO_fu_209_row_we0 : STD_LOGIC;
    signal grp_worker_create_COO_fu_209_row_d0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_worker_create_COO_fu_209_col_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_worker_create_COO_fu_209_col_ce0 : STD_LOGIC;
    signal grp_worker_create_COO_fu_209_col_we0 : STD_LOGIC;
    signal grp_worker_create_COO_fu_209_col_d0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_worker_create_COO_fu_209_val_r_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_worker_create_COO_fu_209_val_r_ce0 : STD_LOGIC;
    signal grp_worker_create_COO_fu_209_val_r_we0 : STD_LOGIC;
    signal grp_worker_create_COO_fu_209_val_r_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_worker_create_COO_fu_209_block_r : STD_LOGIC_VECTOR (7 downto 0);
    signal i_reg_158 : STD_LOGIC_VECTOR (6 downto 0);
    signal phi_mul_reg_169 : STD_LOGIC_VECTOR (14 downto 0);
    signal phi_urem_reg_180 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_reg_grp_worker_COO_SpMV_fu_191_ap_start : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_st4_fsm_3 : STD_LOGIC;
    signal ap_sig_253 : BOOLEAN;
    signal ap_sig_cseq_ST_st8_fsm_7 : STD_LOGIC;
    signal ap_sig_260 : BOOLEAN;
    signal ap_sig_cseq_ST_st12_fsm_11 : STD_LOGIC;
    signal ap_sig_268 : BOOLEAN;
    signal ap_sig_cseq_ST_st16_fsm_15 : STD_LOGIC;
    signal ap_sig_276 : BOOLEAN;
    signal ap_sig_cseq_ST_st5_fsm_4 : STD_LOGIC;
    signal ap_sig_284 : BOOLEAN;
    signal ap_sig_cseq_ST_st9_fsm_8 : STD_LOGIC;
    signal ap_sig_291 : BOOLEAN;
    signal ap_sig_cseq_ST_st13_fsm_12 : STD_LOGIC;
    signal ap_sig_299 : BOOLEAN;
    signal ap_sig_cseq_ST_st17_fsm_16 : STD_LOGIC;
    signal ap_sig_307 : BOOLEAN;
    signal ap_reg_grp_worker_create_COO_fu_209_ap_start : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_st6_fsm_5 : STD_LOGIC;
    signal ap_sig_327 : BOOLEAN;
    signal ap_sig_cseq_ST_st10_fsm_9 : STD_LOGIC;
    signal ap_sig_335 : BOOLEAN;
    signal ap_sig_cseq_ST_st14_fsm_13 : STD_LOGIC;
    signal ap_sig_343 : BOOLEAN;
    signal newIndex7_fu_286_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_fu_276_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal next_urem_fu_294_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_2_fu_300_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (16 downto 0);

    component worker_COO_SpMV IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        row_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        row_ce0 : OUT STD_LOGIC;
        row_q0 : IN STD_LOGIC_VECTOR (6 downto 0);
        col_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        col_ce0 : OUT STD_LOGIC;
        col_q0 : IN STD_LOGIC_VECTOR (6 downto 0);
        val_r_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        val_r_ce0 : OUT STD_LOGIC;
        val_r_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        output_0_ce0 : OUT STD_LOGIC;
        output_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_0_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        output_0_ce1 : OUT STD_LOGIC;
        output_0_we1 : OUT STD_LOGIC;
        output_0_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        output_1_ce0 : OUT STD_LOGIC;
        output_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_1_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        output_1_ce1 : OUT STD_LOGIC;
        output_1_we1 : OUT STD_LOGIC;
        output_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        output_2_ce0 : OUT STD_LOGIC;
        output_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_2_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        output_2_ce1 : OUT STD_LOGIC;
        output_2_we1 : OUT STD_LOGIC;
        output_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        output_3_ce0 : OUT STD_LOGIC;
        output_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_3_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        output_3_ce1 : OUT STD_LOGIC;
        output_3_we1 : OUT STD_LOGIC;
        output_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        nnz : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component worker_create_COO IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        row_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        row_ce0 : OUT STD_LOGIC;
        row_we0 : OUT STD_LOGIC;
        row_d0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        col_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        col_ce0 : OUT STD_LOGIC;
        col_we0 : OUT STD_LOGIC;
        col_d0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        val_r_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        val_r_ce0 : OUT STD_LOGIC;
        val_r_we0 : OUT STD_LOGIC;
        val_r_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        block_r : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component worker_row_1 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (6 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (6 downto 0) );
    end component;


    component worker_val_1 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    row_1_U : component worker_row_1
    generic map (
        DataWidth => 7,
        AddressRange => 2500,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => row_1_address0,
        ce0 => row_1_ce0,
        we0 => grp_worker_create_COO_fu_209_row_we0,
        d0 => grp_worker_create_COO_fu_209_row_d0,
        q0 => row_1_q0);

    col_1_U : component worker_row_1
    generic map (
        DataWidth => 7,
        AddressRange => 2500,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => col_1_address0,
        ce0 => col_1_ce0,
        we0 => grp_worker_create_COO_fu_209_col_we0,
        d0 => grp_worker_create_COO_fu_209_col_d0,
        q0 => col_1_q0);

    val_1_U : component worker_val_1
    generic map (
        DataWidth => 32,
        AddressRange => 2500,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => val_1_address0,
        ce0 => val_1_ce0,
        we0 => grp_worker_create_COO_fu_209_val_r_we0,
        d0 => grp_worker_create_COO_fu_209_val_r_d0,
        q0 => val_1_q0);

    grp_worker_COO_SpMV_fu_191 : component worker_COO_SpMV
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_worker_COO_SpMV_fu_191_ap_start,
        ap_done => grp_worker_COO_SpMV_fu_191_ap_done,
        ap_idle => grp_worker_COO_SpMV_fu_191_ap_idle,
        ap_ready => grp_worker_COO_SpMV_fu_191_ap_ready,
        row_address0 => grp_worker_COO_SpMV_fu_191_row_address0,
        row_ce0 => grp_worker_COO_SpMV_fu_191_row_ce0,
        row_q0 => row_1_q0,
        col_address0 => grp_worker_COO_SpMV_fu_191_col_address0,
        col_ce0 => grp_worker_COO_SpMV_fu_191_col_ce0,
        col_q0 => col_1_q0,
        val_r_address0 => grp_worker_COO_SpMV_fu_191_val_r_address0,
        val_r_ce0 => grp_worker_COO_SpMV_fu_191_val_r_ce0,
        val_r_q0 => val_1_q0,
        output_0_address0 => grp_worker_COO_SpMV_fu_191_output_0_address0,
        output_0_ce0 => grp_worker_COO_SpMV_fu_191_output_0_ce0,
        output_0_q0 => dest_0_q0,
        output_0_address1 => grp_worker_COO_SpMV_fu_191_output_0_address1,
        output_0_ce1 => grp_worker_COO_SpMV_fu_191_output_0_ce1,
        output_0_we1 => grp_worker_COO_SpMV_fu_191_output_0_we1,
        output_0_d1 => grp_worker_COO_SpMV_fu_191_output_0_d1,
        output_1_address0 => grp_worker_COO_SpMV_fu_191_output_1_address0,
        output_1_ce0 => grp_worker_COO_SpMV_fu_191_output_1_ce0,
        output_1_q0 => dest_1_q0,
        output_1_address1 => grp_worker_COO_SpMV_fu_191_output_1_address1,
        output_1_ce1 => grp_worker_COO_SpMV_fu_191_output_1_ce1,
        output_1_we1 => grp_worker_COO_SpMV_fu_191_output_1_we1,
        output_1_d1 => grp_worker_COO_SpMV_fu_191_output_1_d1,
        output_2_address0 => grp_worker_COO_SpMV_fu_191_output_2_address0,
        output_2_ce0 => grp_worker_COO_SpMV_fu_191_output_2_ce0,
        output_2_q0 => dest_2_q0,
        output_2_address1 => grp_worker_COO_SpMV_fu_191_output_2_address1,
        output_2_ce1 => grp_worker_COO_SpMV_fu_191_output_2_ce1,
        output_2_we1 => grp_worker_COO_SpMV_fu_191_output_2_we1,
        output_2_d1 => grp_worker_COO_SpMV_fu_191_output_2_d1,
        output_3_address0 => grp_worker_COO_SpMV_fu_191_output_3_address0,
        output_3_ce0 => grp_worker_COO_SpMV_fu_191_output_3_ce0,
        output_3_q0 => dest_3_q0,
        output_3_address1 => grp_worker_COO_SpMV_fu_191_output_3_address1,
        output_3_ce1 => grp_worker_COO_SpMV_fu_191_output_3_ce1,
        output_3_we1 => grp_worker_COO_SpMV_fu_191_output_3_we1,
        output_3_d1 => grp_worker_COO_SpMV_fu_191_output_3_d1,
        nnz => reg_253);

    grp_worker_create_COO_fu_209 : component worker_create_COO
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_worker_create_COO_fu_209_ap_start,
        ap_done => grp_worker_create_COO_fu_209_ap_done,
        ap_idle => grp_worker_create_COO_fu_209_ap_idle,
        ap_ready => grp_worker_create_COO_fu_209_ap_ready,
        row_address0 => grp_worker_create_COO_fu_209_row_address0,
        row_ce0 => grp_worker_create_COO_fu_209_row_ce0,
        row_we0 => grp_worker_create_COO_fu_209_row_we0,
        row_d0 => grp_worker_create_COO_fu_209_row_d0,
        col_address0 => grp_worker_create_COO_fu_209_col_address0,
        col_ce0 => grp_worker_create_COO_fu_209_col_ce0,
        col_we0 => grp_worker_create_COO_fu_209_col_we0,
        col_d0 => grp_worker_create_COO_fu_209_col_d0,
        val_r_address0 => grp_worker_create_COO_fu_209_val_r_address0,
        val_r_ce0 => grp_worker_create_COO_fu_209_val_r_ce0,
        val_r_we0 => grp_worker_create_COO_fu_209_val_r_we0,
        val_r_d0 => grp_worker_create_COO_fu_209_val_r_d0,
        block_r => grp_worker_create_COO_fu_209_block_r,
        ap_return => grp_worker_create_COO_fu_209_ap_return);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_reg_grp_worker_COO_SpMV_fu_191_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_worker_COO_SpMV_fu_191_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) or (ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) or (ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) or (ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15))) then 
                    ap_reg_grp_worker_COO_SpMV_fu_191_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_worker_COO_SpMV_fu_191_ap_ready)) then 
                    ap_reg_grp_worker_COO_SpMV_fu_191_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_worker_create_COO_fu_209_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_worker_create_COO_fu_209_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((exitcond1_fu_258_p2 = ap_const_lv1_0))) or (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) or (ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13))) then 
                    ap_reg_grp_worker_create_COO_fu_209_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_worker_create_COO_fu_209_ap_ready)) then 
                    ap_reg_grp_worker_create_COO_fu_209_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_reg_158_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond1_fu_258_p2 = ap_const_lv1_0))) then 
                i_reg_158 <= i_1_fu_264_p2;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                i_reg_158 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    phi_mul_reg_169_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond1_fu_258_p2 = ap_const_lv1_0))) then 
                phi_mul_reg_169 <= next_mul_fu_270_p2;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                phi_mul_reg_169 <= ap_const_lv15_0;
            end if; 
        end if;
    end process;

    phi_urem_reg_180_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond1_fu_258_p2 = ap_const_lv1_0))) then 
                phi_urem_reg_180 <= idx_urem_fu_306_p3;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                phi_urem_reg_180 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((ap_const_logic_0 = grp_worker_create_COO_fu_209_ap_done))) or (not((ap_const_logic_0 = grp_worker_create_COO_fu_209_ap_done)) and (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) or (not((ap_const_logic_0 = grp_worker_create_COO_fu_209_ap_done)) and (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) or (not((ap_const_logic_0 = grp_worker_create_COO_fu_209_ap_done)) and (ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14)))) then
                reg_253 <= grp_worker_create_COO_fu_209_ap_return;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, grp_worker_create_COO_fu_209_ap_done, exitcond1_fu_258_p2, grp_worker_COO_SpMV_fu_191_ap_done)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if ((exitcond1_fu_258_p2 = ap_const_lv1_0)) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                end if;
            when ap_ST_st3_fsm_2 => 
                if (not((ap_const_logic_0 = grp_worker_create_COO_fu_209_ap_done))) then
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                else
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                end if;
            when ap_ST_st4_fsm_3 => 
                ap_NS_fsm <= ap_ST_st5_fsm_4;
            when ap_ST_st5_fsm_4 => 
                if (not((ap_const_logic_0 = grp_worker_COO_SpMV_fu_191_ap_done))) then
                    ap_NS_fsm <= ap_ST_st6_fsm_5;
                else
                    ap_NS_fsm <= ap_ST_st5_fsm_4;
                end if;
            when ap_ST_st6_fsm_5 => 
                ap_NS_fsm <= ap_ST_st7_fsm_6;
            when ap_ST_st7_fsm_6 => 
                if (not((ap_const_logic_0 = grp_worker_create_COO_fu_209_ap_done))) then
                    ap_NS_fsm <= ap_ST_st8_fsm_7;
                else
                    ap_NS_fsm <= ap_ST_st7_fsm_6;
                end if;
            when ap_ST_st8_fsm_7 => 
                ap_NS_fsm <= ap_ST_st9_fsm_8;
            when ap_ST_st9_fsm_8 => 
                if (not((ap_const_logic_0 = grp_worker_COO_SpMV_fu_191_ap_done))) then
                    ap_NS_fsm <= ap_ST_st10_fsm_9;
                else
                    ap_NS_fsm <= ap_ST_st9_fsm_8;
                end if;
            when ap_ST_st10_fsm_9 => 
                ap_NS_fsm <= ap_ST_st11_fsm_10;
            when ap_ST_st11_fsm_10 => 
                if (not((ap_const_logic_0 = grp_worker_create_COO_fu_209_ap_done))) then
                    ap_NS_fsm <= ap_ST_st12_fsm_11;
                else
                    ap_NS_fsm <= ap_ST_st11_fsm_10;
                end if;
            when ap_ST_st12_fsm_11 => 
                ap_NS_fsm <= ap_ST_st13_fsm_12;
            when ap_ST_st13_fsm_12 => 
                if (not((ap_const_logic_0 = grp_worker_COO_SpMV_fu_191_ap_done))) then
                    ap_NS_fsm <= ap_ST_st14_fsm_13;
                else
                    ap_NS_fsm <= ap_ST_st13_fsm_12;
                end if;
            when ap_ST_st14_fsm_13 => 
                ap_NS_fsm <= ap_ST_st15_fsm_14;
            when ap_ST_st15_fsm_14 => 
                if (not((ap_const_logic_0 = grp_worker_create_COO_fu_209_ap_done))) then
                    ap_NS_fsm <= ap_ST_st16_fsm_15;
                else
                    ap_NS_fsm <= ap_ST_st15_fsm_14;
                end if;
            when ap_ST_st16_fsm_15 => 
                ap_NS_fsm <= ap_ST_st17_fsm_16;
            when ap_ST_st17_fsm_16 => 
                if (not((ap_const_logic_0 = grp_worker_COO_SpMV_fu_191_ap_done))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_st17_fsm_16;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXX";
        end case;
    end process;

    ap_done_assign_proc : process(grp_worker_COO_SpMV_fu_191_ap_done, ap_sig_cseq_ST_st17_fsm_16)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16) and not((ap_const_logic_0 = grp_worker_COO_SpMV_fu_191_ap_done)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_worker_COO_SpMV_fu_191_ap_done, ap_sig_cseq_ST_st17_fsm_16)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16) and not((ap_const_logic_0 = grp_worker_COO_SpMV_fu_191_ap_done)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_105_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_105 <= (ap_const_lv1_1 = ap_CS_fsm(6 downto 6));
    end process;


    ap_sig_114_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_114 <= (ap_const_lv1_1 = ap_CS_fsm(10 downto 10));
    end process;


    ap_sig_123_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_123 <= (ap_const_lv1_1 = ap_CS_fsm(14 downto 14));
    end process;


    ap_sig_134_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_134 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    ap_sig_253_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_253 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    ap_sig_260_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_260 <= (ap_const_lv1_1 = ap_CS_fsm(7 downto 7));
    end process;


    ap_sig_268_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_268 <= (ap_const_lv1_1 = ap_CS_fsm(11 downto 11));
    end process;


    ap_sig_276_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_276 <= (ap_const_lv1_1 = ap_CS_fsm(15 downto 15));
    end process;


    ap_sig_284_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_284 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    ap_sig_291_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_291 <= (ap_const_lv1_1 = ap_CS_fsm(8 downto 8));
    end process;


    ap_sig_299_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_299 <= (ap_const_lv1_1 = ap_CS_fsm(12 downto 12));
    end process;


    ap_sig_307_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_307 <= (ap_const_lv1_1 = ap_CS_fsm(16 downto 16));
    end process;


    ap_sig_32_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_32 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_327_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_327 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    ap_sig_335_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_335 <= (ap_const_lv1_1 = ap_CS_fsm(9 downto 9));
    end process;


    ap_sig_343_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_343 <= (ap_const_lv1_1 = ap_CS_fsm(13 downto 13));
    end process;


    ap_sig_94_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_94 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    ap_sig_cseq_ST_st10_fsm_9_assign_proc : process(ap_sig_335)
    begin
        if (ap_sig_335) then 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st11_fsm_10_assign_proc : process(ap_sig_114)
    begin
        if (ap_sig_114) then 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st12_fsm_11_assign_proc : process(ap_sig_268)
    begin
        if (ap_sig_268) then 
            ap_sig_cseq_ST_st12_fsm_11 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st12_fsm_11 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st13_fsm_12_assign_proc : process(ap_sig_299)
    begin
        if (ap_sig_299) then 
            ap_sig_cseq_ST_st13_fsm_12 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st13_fsm_12 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st14_fsm_13_assign_proc : process(ap_sig_343)
    begin
        if (ap_sig_343) then 
            ap_sig_cseq_ST_st14_fsm_13 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st14_fsm_13 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st15_fsm_14_assign_proc : process(ap_sig_123)
    begin
        if (ap_sig_123) then 
            ap_sig_cseq_ST_st15_fsm_14 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st15_fsm_14 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st16_fsm_15_assign_proc : process(ap_sig_276)
    begin
        if (ap_sig_276) then 
            ap_sig_cseq_ST_st16_fsm_15 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st16_fsm_15 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st17_fsm_16_assign_proc : process(ap_sig_307)
    begin
        if (ap_sig_307) then 
            ap_sig_cseq_ST_st17_fsm_16 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st17_fsm_16 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_32)
    begin
        if (ap_sig_32) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_134)
    begin
        if (ap_sig_134) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_94)
    begin
        if (ap_sig_94) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st4_fsm_3_assign_proc : process(ap_sig_253)
    begin
        if (ap_sig_253) then 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st5_fsm_4_assign_proc : process(ap_sig_284)
    begin
        if (ap_sig_284) then 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st6_fsm_5_assign_proc : process(ap_sig_327)
    begin
        if (ap_sig_327) then 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st7_fsm_6_assign_proc : process(ap_sig_105)
    begin
        if (ap_sig_105) then 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st8_fsm_7_assign_proc : process(ap_sig_260)
    begin
        if (ap_sig_260) then 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st9_fsm_8_assign_proc : process(ap_sig_291)
    begin
        if (ap_sig_291) then 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_0;
        end if; 
    end process;


    col_1_address0_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st11_fsm_10, ap_sig_cseq_ST_st15_fsm_14, grp_worker_COO_SpMV_fu_191_col_address0, grp_worker_create_COO_fu_209_col_address0, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st17_fsm_16)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) or (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) or (ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14))) then 
            col_1_address0 <= grp_worker_create_COO_fu_209_col_address0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) or (ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16))) then 
            col_1_address0 <= grp_worker_COO_SpMV_fu_191_col_address0;
        else 
            col_1_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    col_1_ce0_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st11_fsm_10, ap_sig_cseq_ST_st15_fsm_14, grp_worker_COO_SpMV_fu_191_col_ce0, grp_worker_create_COO_fu_209_col_ce0, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st17_fsm_16)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) or (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) or (ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14))) then 
            col_1_ce0 <= grp_worker_create_COO_fu_209_col_ce0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) or (ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16))) then 
            col_1_ce0 <= grp_worker_COO_SpMV_fu_191_col_ce0;
        else 
            col_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dest_0_address0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, grp_worker_COO_SpMV_fu_191_output_0_address0, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st17_fsm_16, newIndex7_fu_286_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            dest_0_address0 <= newIndex7_fu_286_p1(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) or (ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16))) then 
            dest_0_address0 <= grp_worker_COO_SpMV_fu_191_output_0_address0;
        else 
            dest_0_address0 <= "XXXXX";
        end if; 
    end process;

    dest_0_address1 <= grp_worker_COO_SpMV_fu_191_output_0_address1;

    dest_0_ce0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, grp_worker_COO_SpMV_fu_191_output_0_ce0, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st17_fsm_16)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            dest_0_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) or (ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16))) then 
            dest_0_ce0 <= grp_worker_COO_SpMV_fu_191_output_0_ce0;
        else 
            dest_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dest_0_ce1_assign_proc : process(grp_worker_COO_SpMV_fu_191_output_0_ce1, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st17_fsm_16)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) or (ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16))) then 
            dest_0_ce1 <= grp_worker_COO_SpMV_fu_191_output_0_ce1;
        else 
            dest_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    dest_0_d0 <= ap_const_lv32_0;
    dest_0_d1 <= grp_worker_COO_SpMV_fu_191_output_0_d1;

    dest_0_we0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, exitcond1_fu_258_p2, tmp_fu_276_p4)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond1_fu_258_p2 = ap_const_lv1_0) and (tmp_fu_276_p4 = ap_const_lv3_0)))) then 
            dest_0_we0 <= ap_const_logic_1;
        else 
            dest_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    dest_0_we1 <= grp_worker_COO_SpMV_fu_191_output_0_we1;

    dest_1_address0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, grp_worker_COO_SpMV_fu_191_output_1_address0, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st17_fsm_16, newIndex7_fu_286_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            dest_1_address0 <= newIndex7_fu_286_p1(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) or (ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16))) then 
            dest_1_address0 <= grp_worker_COO_SpMV_fu_191_output_1_address0;
        else 
            dest_1_address0 <= "XXXXX";
        end if; 
    end process;

    dest_1_address1 <= grp_worker_COO_SpMV_fu_191_output_1_address1;

    dest_1_ce0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, grp_worker_COO_SpMV_fu_191_output_1_ce0, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st17_fsm_16)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            dest_1_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) or (ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16))) then 
            dest_1_ce0 <= grp_worker_COO_SpMV_fu_191_output_1_ce0;
        else 
            dest_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dest_1_ce1_assign_proc : process(grp_worker_COO_SpMV_fu_191_output_1_ce1, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st17_fsm_16)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) or (ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16))) then 
            dest_1_ce1 <= grp_worker_COO_SpMV_fu_191_output_1_ce1;
        else 
            dest_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    dest_1_d0 <= ap_const_lv32_0;
    dest_1_d1 <= grp_worker_COO_SpMV_fu_191_output_1_d1;

    dest_1_we0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, exitcond1_fu_258_p2, tmp_fu_276_p4)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond1_fu_258_p2 = ap_const_lv1_0) and (tmp_fu_276_p4 = ap_const_lv3_1)))) then 
            dest_1_we0 <= ap_const_logic_1;
        else 
            dest_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    dest_1_we1 <= grp_worker_COO_SpMV_fu_191_output_1_we1;

    dest_2_address0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, grp_worker_COO_SpMV_fu_191_output_2_address0, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st17_fsm_16, newIndex7_fu_286_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            dest_2_address0 <= newIndex7_fu_286_p1(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) or (ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16))) then 
            dest_2_address0 <= grp_worker_COO_SpMV_fu_191_output_2_address0;
        else 
            dest_2_address0 <= "XXXXX";
        end if; 
    end process;

    dest_2_address1 <= grp_worker_COO_SpMV_fu_191_output_2_address1;

    dest_2_ce0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, grp_worker_COO_SpMV_fu_191_output_2_ce0, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st17_fsm_16)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            dest_2_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) or (ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16))) then 
            dest_2_ce0 <= grp_worker_COO_SpMV_fu_191_output_2_ce0;
        else 
            dest_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dest_2_ce1_assign_proc : process(grp_worker_COO_SpMV_fu_191_output_2_ce1, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st17_fsm_16)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) or (ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16))) then 
            dest_2_ce1 <= grp_worker_COO_SpMV_fu_191_output_2_ce1;
        else 
            dest_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    dest_2_d0 <= ap_const_lv32_0;
    dest_2_d1 <= grp_worker_COO_SpMV_fu_191_output_2_d1;

    dest_2_we0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, exitcond1_fu_258_p2, tmp_fu_276_p4)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond1_fu_258_p2 = ap_const_lv1_0) and (tmp_fu_276_p4 = ap_const_lv3_2)))) then 
            dest_2_we0 <= ap_const_logic_1;
        else 
            dest_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    dest_2_we1 <= grp_worker_COO_SpMV_fu_191_output_2_we1;

    dest_3_address0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, grp_worker_COO_SpMV_fu_191_output_3_address0, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st17_fsm_16, newIndex7_fu_286_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            dest_3_address0 <= newIndex7_fu_286_p1(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) or (ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16))) then 
            dest_3_address0 <= grp_worker_COO_SpMV_fu_191_output_3_address0;
        else 
            dest_3_address0 <= "XXXXX";
        end if; 
    end process;

    dest_3_address1 <= grp_worker_COO_SpMV_fu_191_output_3_address1;

    dest_3_ce0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, grp_worker_COO_SpMV_fu_191_output_3_ce0, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st17_fsm_16)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            dest_3_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) or (ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16))) then 
            dest_3_ce0 <= grp_worker_COO_SpMV_fu_191_output_3_ce0;
        else 
            dest_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dest_3_ce1_assign_proc : process(grp_worker_COO_SpMV_fu_191_output_3_ce1, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st17_fsm_16)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) or (ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16))) then 
            dest_3_ce1 <= grp_worker_COO_SpMV_fu_191_output_3_ce1;
        else 
            dest_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    dest_3_d0 <= ap_const_lv32_0;
    dest_3_d1 <= grp_worker_COO_SpMV_fu_191_output_3_d1;

    dest_3_we0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, exitcond1_fu_258_p2, tmp_fu_276_p4)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond1_fu_258_p2 = ap_const_lv1_0) and not((tmp_fu_276_p4 = ap_const_lv3_0)) and not((tmp_fu_276_p4 = ap_const_lv3_1)) and not((tmp_fu_276_p4 = ap_const_lv3_2))))) then 
            dest_3_we0 <= ap_const_logic_1;
        else 
            dest_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    dest_3_we1 <= grp_worker_COO_SpMV_fu_191_output_3_we1;
    exitcond1_fu_258_p2 <= "1" when (i_reg_158 = ap_const_lv7_64) else "0";
    grp_worker_COO_SpMV_fu_191_ap_start <= ap_reg_grp_worker_COO_SpMV_fu_191_ap_start;
    grp_worker_create_COO_fu_209_ap_start <= ap_reg_grp_worker_create_COO_fu_209_ap_start;

    grp_worker_create_COO_fu_209_block_r_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st11_fsm_10, ap_sig_cseq_ST_st15_fsm_14)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14)) then 
            grp_worker_create_COO_fu_209_block_r <= ap_const_lv8_4B;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then 
            grp_worker_create_COO_fu_209_block_r <= ap_const_lv8_32;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            grp_worker_create_COO_fu_209_block_r <= ap_const_lv8_19;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            grp_worker_create_COO_fu_209_block_r <= ap_const_lv8_0;
        else 
            grp_worker_create_COO_fu_209_block_r <= "XXXXXXXX";
        end if; 
    end process;

    i_1_fu_264_p2 <= std_logic_vector(unsigned(i_reg_158) + unsigned(ap_const_lv7_1));
    idx_urem_fu_306_p3 <= 
        next_urem_fu_294_p2 when (tmp_2_fu_300_p2(0) = '1') else 
        ap_const_lv7_0;
    newIndex7_fu_286_p1 <= std_logic_vector(resize(unsigned(phi_urem_reg_180),64));
    next_mul_fu_270_p2 <= std_logic_vector(unsigned(phi_mul_reg_169) + unsigned(ap_const_lv15_A4));
    next_urem_fu_294_p2 <= std_logic_vector(unsigned(phi_urem_reg_180) + unsigned(ap_const_lv7_1));

    row_1_address0_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st11_fsm_10, ap_sig_cseq_ST_st15_fsm_14, grp_worker_COO_SpMV_fu_191_row_address0, grp_worker_create_COO_fu_209_row_address0, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st17_fsm_16)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) or (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) or (ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14))) then 
            row_1_address0 <= grp_worker_create_COO_fu_209_row_address0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) or (ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16))) then 
            row_1_address0 <= grp_worker_COO_SpMV_fu_191_row_address0;
        else 
            row_1_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    row_1_ce0_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st11_fsm_10, ap_sig_cseq_ST_st15_fsm_14, grp_worker_COO_SpMV_fu_191_row_ce0, grp_worker_create_COO_fu_209_row_ce0, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st17_fsm_16)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) or (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) or (ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14))) then 
            row_1_ce0 <= grp_worker_create_COO_fu_209_row_ce0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) or (ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16))) then 
            row_1_ce0 <= grp_worker_COO_SpMV_fu_191_row_ce0;
        else 
            row_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_2_fu_300_p2 <= "1" when (unsigned(next_urem_fu_294_p2) < unsigned(ap_const_lv7_19)) else "0";
    tmp_fu_276_p4 <= phi_mul_reg_169(14 downto 12);

    val_1_address0_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st11_fsm_10, ap_sig_cseq_ST_st15_fsm_14, grp_worker_COO_SpMV_fu_191_val_r_address0, grp_worker_create_COO_fu_209_val_r_address0, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st17_fsm_16)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) or (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) or (ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14))) then 
            val_1_address0 <= grp_worker_create_COO_fu_209_val_r_address0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) or (ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16))) then 
            val_1_address0 <= grp_worker_COO_SpMV_fu_191_val_r_address0;
        else 
            val_1_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    val_1_ce0_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st11_fsm_10, ap_sig_cseq_ST_st15_fsm_14, grp_worker_COO_SpMV_fu_191_val_r_ce0, grp_worker_create_COO_fu_209_val_r_ce0, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st17_fsm_16)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) or (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) or (ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14))) then 
            val_1_ce0 <= grp_worker_create_COO_fu_209_val_r_ce0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) or (ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16))) then 
            val_1_ce0 <= grp_worker_COO_SpMV_fu_191_val_r_ce0;
        else 
            val_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
