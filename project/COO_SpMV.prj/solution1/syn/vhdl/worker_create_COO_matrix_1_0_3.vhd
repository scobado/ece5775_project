-- ==============================================================
-- File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.2
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ==============================================================

library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity worker_create_COO_matrix_1_0_3_rom is 
    generic(
             dwidth     : integer := 32; 
             awidth     : integer := 10; 
             mem_size    : integer := 625
    ); 
    port (
          addr0      : in std_logic_vector(awidth-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(dwidth-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of worker_create_COO_matrix_1_0_3_rom is 

signal addr0_tmp : std_logic_vector(awidth-1 downto 0); 
type mem_array is array (0 to mem_size-1) of std_logic_vector (dwidth-1 downto 0); 
signal mem : mem_array := (
    0 to 46=> "00000000000000000000000000000000", 
    47 => "11000000111110000111100101010001", 
    48 to 152=> "00000000000000000000000000000000", 
    153 => "11000000010110110010001010101010", 
    154 to 188=> "00000000000000000000000000000000", 
    189 => "11000000110000101110011111110100", 
    190 to 479=> "00000000000000000000000000000000", 
    480 => "00111111010000101001000111101100", 
    481 to 491=> "00000000000000000000000000000000", 
    492 => "11000000101011000001011110000110", 
    493 to 520=> "00000000000000000000000000000000", 
    521 => "01000000101111111100111100111010", 
    522 => "00111111001110110110001001110010", 
    523 to 552=> "00000000000000000000000000000000", 
    553 => "11000000110111110100010110001000", 
    554 to 583=> "00000000000000000000000000000000", 
    584 => "01000000110110110001110101010000", 
    585 to 606=> "00000000000000000000000000000000", 
    607 => "01000000101100010000010010101100", 
    608 to 624=> "00000000000000000000000000000000" );


attribute EQUIVALENT_REGISTER_REMOVAL : string;
begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;


Library IEEE;
use IEEE.std_logic_1164.all;

entity worker_create_COO_matrix_1_0_3 is
    generic (
        DataWidth : INTEGER := 32;
        AddressRange : INTEGER := 625;
        AddressWidth : INTEGER := 10);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of worker_create_COO_matrix_1_0_3 is
    component worker_create_COO_matrix_1_0_3_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    worker_create_COO_matrix_1_0_3_rom_U :  component worker_create_COO_matrix_1_0_3_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


