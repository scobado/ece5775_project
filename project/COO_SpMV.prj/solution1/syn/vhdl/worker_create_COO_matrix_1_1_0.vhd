-- ==============================================================
-- File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.2
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ==============================================================

library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity worker_create_COO_matrix_1_1_0_rom is 
    generic(
             dwidth     : integer := 32; 
             awidth     : integer := 10; 
             mem_size    : integer := 625
    ); 
    port (
          addr0      : in std_logic_vector(awidth-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(dwidth-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of worker_create_COO_matrix_1_1_0_rom is 

signal addr0_tmp : std_logic_vector(awidth-1 downto 0); 
type mem_array is array (0 to mem_size-1) of std_logic_vector (dwidth-1 downto 0); 
signal mem : mem_array := (
    0 to 35=> "00000000000000000000000000000000", 
    36 => "01000001000111101001101111001000", 
    37 to 41=> "00000000000000000000000000000000", 
    42 => "11000000110001110010100110001111", 
    43 to 82=> "00000000000000000000000000000000", 
    83 => "01000000011100010101100011000011", 
    84 to 94=> "00000000000000000000000000000000", 
    95 => "11000000001001011011111101010111", 
    96 to 105=> "00000000000000000000000000000000", 
    106 => "10111111001011100010100001001111", 
    107 => "10111111101001001001010001000001", 
    108 to 172=> "00000000000000000000000000000000", 
    173 => "11000000100100010111101111011000", 
    174 to 247=> "00000000000000000000000000000000", 
    248 => "00111111101111110110100111110111", 
    249 to 586=> "00000000000000000000000000000000", 
    587 => "11000000100100110100100110001000", 
    588 to 609=> "00000000000000000000000000000000", 
    610 => "01000000100000000001010100000011", 
    611 to 624=> "00000000000000000000000000000000" );


attribute EQUIVALENT_REGISTER_REMOVAL : string;
begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;


Library IEEE;
use IEEE.std_logic_1164.all;

entity worker_create_COO_matrix_1_1_0 is
    generic (
        DataWidth : INTEGER := 32;
        AddressRange : INTEGER := 625;
        AddressWidth : INTEGER := 10);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of worker_create_COO_matrix_1_1_0 is
    component worker_create_COO_matrix_1_1_0_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    worker_create_COO_matrix_1_1_0_rom_U :  component worker_create_COO_matrix_1_1_0_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


