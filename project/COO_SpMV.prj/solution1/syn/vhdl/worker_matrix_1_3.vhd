-- ==============================================================
-- File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.2
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ==============================================================

library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity worker_matrix_1_3_rom is 
    generic(
             dwidth     : integer := 32; 
             awidth     : integer := 12; 
             mem_size    : integer := 2500
    ); 
    port (
          addr0      : in std_logic_vector(awidth-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(dwidth-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of worker_matrix_1_3_rom is 

signal addr0_tmp : std_logic_vector(awidth-1 downto 0); 
type mem_array is array (0 to mem_size-1) of std_logic_vector (dwidth-1 downto 0); 
signal mem : mem_array := (
    0 to 183=> "00000000000000000000000000000000", 
    184 => "11000000010110101011100010010110", 
    185 to 583=> "00000000000000000000000000000000", 
    584 => "10111111010000110111100100011000", 
    585 to 596=> "00000000000000000000000000000000", 
    597 => "01000000110110110010101111101000", 
    598 to 728=> "00000000000000000000000000000000", 
    729 => "10111111111000101000101100111011", 
    730 to 904=> "00000000000000000000000000000000", 
    905 => "11000001000101110110101000110010", 
    906 to 925=> "00000000000000000000000000000000", 
    926 => "01000000100100010011000110010010", 
    927 to 976=> "00000000000000000000000000000000", 
    977 => "11000000111011101111001001011001", 
    978 to 1039=> "00000000000000000000000000000000", 
    1040 => "01000001000101011001100010111111", 
    1041 to 1345=> "00000000000000000000000000000000", 
    1346 => "01000001000000101011100111100011", 
    1347 to 1368=> "00000000000000000000000000000000", 
    1369 => "11000000010110111011111111110101", 
    1370 to 1396=> "00000000000000000000000000000000", 
    1397 => "01000000101100001110010111010110", 
    1398 to 1419=> "00000000000000000000000000000000", 
    1420 => "01000001000110111001100100101010", 
    1421 to 1457=> "00000000000000000000000000000000", 
    1458 => "00111111011110011011001010001010", 
    1459 to 1569=> "00000000000000000000000000000000", 
    1570 => "10111111110100000010101110011101", 
    1571 to 1651=> "00000000000000000000000000000000", 
    1652 => "00111101100001010011011011010110", 
    1653 to 2020=> "00000000000000000000000000000000", 
    2021 => "11000000100100101111110001001100", 
    2022 to 2033=> "00000000000000000000000000000000", 
    2034 => "10111110010100101001101111011110", 
    2035 to 2154=> "00000000000000000000000000000000", 
    2155 => "11000000101100010111000100001100", 
    2156 to 2253=> "00000000000000000000000000000000", 
    2254 => "01000000110000011001000110111011", 
    2255 to 2499=> "00000000000000000000000000000000" );

attribute syn_rom_style : string;
attribute syn_rom_style of mem : signal is "block_rom";
attribute ROM_STYLE : string;
attribute ROM_STYLE of mem : signal is "block";

attribute EQUIVALENT_REGISTER_REMOVAL : string;
begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;


Library IEEE;
use IEEE.std_logic_1164.all;

entity worker_matrix_1_3 is
    generic (
        DataWidth : INTEGER := 32;
        AddressRange : INTEGER := 2500;
        AddressWidth : INTEGER := 12);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of worker_matrix_1_3 is
    component worker_matrix_1_3_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    worker_matrix_1_3_rom_U :  component worker_matrix_1_3_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


