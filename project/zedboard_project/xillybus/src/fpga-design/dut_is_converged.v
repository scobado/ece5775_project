// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dut_is_converged (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        v_old_0_read,
        v_old_1_read,
        v_old_2_read,
        v_old_3_read,
        v_old_4_read,
        v_old_5_read,
        v_old_6_read,
        v_old_7_read,
        v_old_8_read,
        v_old_9_read,
        v_old_10_read,
        v_old_11_read,
        v_old_12_read,
        v_old_13_read,
        v_old_14_read,
        v_old_15_read,
        v_old_16_read,
        v_old_17_read,
        v_old_18_read,
        v_old_19_read,
        v_old_20_read,
        v_old_21_read,
        v_old_22_read,
        v_old_23_read,
        v_old_24_read,
        v_old_25_read,
        v_old_26_read,
        v_old_27_read,
        v_old_28_read,
        v_old_29_read,
        v_old_30_read,
        v_old_31_read,
        v_old_32_read,
        v_old_33_read,
        v_old_34_read,
        v_old_35_read,
        v_old_36_read,
        v_old_37_read,
        v_old_38_read,
        v_old_39_read,
        v_old_40_read,
        v_old_41_read,
        v_old_42_read,
        v_old_43_read,
        v_old_44_read,
        v_old_45_read,
        v_old_46_read,
        v_old_47_read,
        v_old_48_read,
        v_old_49_read,
        v_old_50_read,
        v_old_51_read,
        v_old_52_read,
        v_old_53_read,
        v_old_54_read,
        v_old_55_read,
        v_old_56_read,
        v_old_57_read,
        v_old_58_read,
        v_old_59_read,
        v_old_60_read,
        v_old_61_read,
        v_old_62_read,
        v_old_63_read,
        v_old_64_read,
        v_old_65_read,
        v_old_66_read,
        v_old_67_read,
        v_old_68_read,
        v_old_69_read,
        v_old_70_read,
        v_old_71_read,
        v_old_72_read,
        v_old_73_read,
        v_old_74_read,
        v_old_75_read,
        v_old_76_read,
        v_old_77_read,
        v_old_78_read,
        v_old_79_read,
        v_old_80_read,
        v_old_81_read,
        v_old_82_read,
        v_old_83_read,
        v_old_84_read,
        v_old_85_read,
        v_old_86_read,
        v_old_87_read,
        v_old_88_read,
        v_old_89_read,
        v_old_90_read,
        v_old_91_read,
        v_old_92_read,
        v_old_93_read,
        v_old_94_read,
        v_old_95_read,
        v_old_96_read,
        v_old_97_read,
        v_old_98_read,
        v_old_99_read,
        v_new_0_read,
        v_new_1_read,
        v_new_2_read,
        v_new_3_read,
        v_new_4_read,
        v_new_5_read,
        v_new_6_read,
        v_new_7_read,
        v_new_8_read,
        v_new_9_read,
        v_new_10_read,
        v_new_11_read,
        v_new_12_read,
        v_new_13_read,
        v_new_14_read,
        v_new_15_read,
        v_new_16_read,
        v_new_17_read,
        v_new_18_read,
        v_new_19_read,
        v_new_20_read,
        v_new_21_read,
        v_new_22_read,
        v_new_23_read,
        v_new_24_read,
        v_new_25_read,
        v_new_26_read,
        v_new_27_read,
        v_new_28_read,
        v_new_29_read,
        v_new_30_read,
        v_new_31_read,
        v_new_32_read,
        v_new_33_read,
        v_new_34_read,
        v_new_35_read,
        v_new_36_read,
        v_new_37_read,
        v_new_38_read,
        v_new_39_read,
        v_new_40_read,
        v_new_41_read,
        v_new_42_read,
        v_new_43_read,
        v_new_44_read,
        v_new_45_read,
        v_new_46_read,
        v_new_47_read,
        v_new_48_read,
        v_new_49_read,
        v_new_50_read,
        v_new_51_read,
        v_new_52_read,
        v_new_53_read,
        v_new_54_read,
        v_new_55_read,
        v_new_56_read,
        v_new_57_read,
        v_new_58_read,
        v_new_59_read,
        v_new_60_read,
        v_new_61_read,
        v_new_62_read,
        v_new_63_read,
        v_new_64_read,
        v_new_65_read,
        v_new_66_read,
        v_new_67_read,
        v_new_68_read,
        v_new_69_read,
        v_new_70_read,
        v_new_71_read,
        v_new_72_read,
        v_new_73_read,
        v_new_74_read,
        v_new_75_read,
        v_new_76_read,
        v_new_77_read,
        v_new_78_read,
        v_new_79_read,
        v_new_80_read,
        v_new_81_read,
        v_new_82_read,
        v_new_83_read,
        v_new_84_read,
        v_new_85_read,
        v_new_86_read,
        v_new_87_read,
        v_new_88_read,
        v_new_89_read,
        v_new_90_read,
        v_new_91_read,
        v_new_92_read,
        v_new_93_read,
        v_new_94_read,
        v_new_95_read,
        v_new_96_read,
        v_new_97_read,
        v_new_98_read,
        v_new_99_read,
        ap_return
);

parameter    ap_ST_st1_fsm_0 = 16'b1;
parameter    ap_ST_st2_fsm_1 = 16'b10;
parameter    ap_ST_st3_fsm_2 = 16'b100;
parameter    ap_ST_st4_fsm_3 = 16'b1000;
parameter    ap_ST_st5_fsm_4 = 16'b10000;
parameter    ap_ST_st6_fsm_5 = 16'b100000;
parameter    ap_ST_st7_fsm_6 = 16'b1000000;
parameter    ap_ST_st8_fsm_7 = 16'b10000000;
parameter    ap_ST_st9_fsm_8 = 16'b100000000;
parameter    ap_ST_st10_fsm_9 = 16'b1000000000;
parameter    ap_ST_st11_fsm_10 = 16'b10000000000;
parameter    ap_ST_st12_fsm_11 = 16'b100000000000;
parameter    ap_ST_st13_fsm_12 = 16'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 16'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 16'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 16'b1000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv7_0 = 7'b0000000;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv7_64 = 7'b1100100;
parameter    ap_const_lv7_1 = 7'b1;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_const_lv23_0 = 23'b00000000000000000000000;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv5_1 = 5'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] v_old_0_read;
input  [31:0] v_old_1_read;
input  [31:0] v_old_2_read;
input  [31:0] v_old_3_read;
input  [31:0] v_old_4_read;
input  [31:0] v_old_5_read;
input  [31:0] v_old_6_read;
input  [31:0] v_old_7_read;
input  [31:0] v_old_8_read;
input  [31:0] v_old_9_read;
input  [31:0] v_old_10_read;
input  [31:0] v_old_11_read;
input  [31:0] v_old_12_read;
input  [31:0] v_old_13_read;
input  [31:0] v_old_14_read;
input  [31:0] v_old_15_read;
input  [31:0] v_old_16_read;
input  [31:0] v_old_17_read;
input  [31:0] v_old_18_read;
input  [31:0] v_old_19_read;
input  [31:0] v_old_20_read;
input  [31:0] v_old_21_read;
input  [31:0] v_old_22_read;
input  [31:0] v_old_23_read;
input  [31:0] v_old_24_read;
input  [31:0] v_old_25_read;
input  [31:0] v_old_26_read;
input  [31:0] v_old_27_read;
input  [31:0] v_old_28_read;
input  [31:0] v_old_29_read;
input  [31:0] v_old_30_read;
input  [31:0] v_old_31_read;
input  [31:0] v_old_32_read;
input  [31:0] v_old_33_read;
input  [31:0] v_old_34_read;
input  [31:0] v_old_35_read;
input  [31:0] v_old_36_read;
input  [31:0] v_old_37_read;
input  [31:0] v_old_38_read;
input  [31:0] v_old_39_read;
input  [31:0] v_old_40_read;
input  [31:0] v_old_41_read;
input  [31:0] v_old_42_read;
input  [31:0] v_old_43_read;
input  [31:0] v_old_44_read;
input  [31:0] v_old_45_read;
input  [31:0] v_old_46_read;
input  [31:0] v_old_47_read;
input  [31:0] v_old_48_read;
input  [31:0] v_old_49_read;
input  [31:0] v_old_50_read;
input  [31:0] v_old_51_read;
input  [31:0] v_old_52_read;
input  [31:0] v_old_53_read;
input  [31:0] v_old_54_read;
input  [31:0] v_old_55_read;
input  [31:0] v_old_56_read;
input  [31:0] v_old_57_read;
input  [31:0] v_old_58_read;
input  [31:0] v_old_59_read;
input  [31:0] v_old_60_read;
input  [31:0] v_old_61_read;
input  [31:0] v_old_62_read;
input  [31:0] v_old_63_read;
input  [31:0] v_old_64_read;
input  [31:0] v_old_65_read;
input  [31:0] v_old_66_read;
input  [31:0] v_old_67_read;
input  [31:0] v_old_68_read;
input  [31:0] v_old_69_read;
input  [31:0] v_old_70_read;
input  [31:0] v_old_71_read;
input  [31:0] v_old_72_read;
input  [31:0] v_old_73_read;
input  [31:0] v_old_74_read;
input  [31:0] v_old_75_read;
input  [31:0] v_old_76_read;
input  [31:0] v_old_77_read;
input  [31:0] v_old_78_read;
input  [31:0] v_old_79_read;
input  [31:0] v_old_80_read;
input  [31:0] v_old_81_read;
input  [31:0] v_old_82_read;
input  [31:0] v_old_83_read;
input  [31:0] v_old_84_read;
input  [31:0] v_old_85_read;
input  [31:0] v_old_86_read;
input  [31:0] v_old_87_read;
input  [31:0] v_old_88_read;
input  [31:0] v_old_89_read;
input  [31:0] v_old_90_read;
input  [31:0] v_old_91_read;
input  [31:0] v_old_92_read;
input  [31:0] v_old_93_read;
input  [31:0] v_old_94_read;
input  [31:0] v_old_95_read;
input  [31:0] v_old_96_read;
input  [31:0] v_old_97_read;
input  [31:0] v_old_98_read;
input  [31:0] v_old_99_read;
input  [31:0] v_new_0_read;
input  [31:0] v_new_1_read;
input  [31:0] v_new_2_read;
input  [31:0] v_new_3_read;
input  [31:0] v_new_4_read;
input  [31:0] v_new_5_read;
input  [31:0] v_new_6_read;
input  [31:0] v_new_7_read;
input  [31:0] v_new_8_read;
input  [31:0] v_new_9_read;
input  [31:0] v_new_10_read;
input  [31:0] v_new_11_read;
input  [31:0] v_new_12_read;
input  [31:0] v_new_13_read;
input  [31:0] v_new_14_read;
input  [31:0] v_new_15_read;
input  [31:0] v_new_16_read;
input  [31:0] v_new_17_read;
input  [31:0] v_new_18_read;
input  [31:0] v_new_19_read;
input  [31:0] v_new_20_read;
input  [31:0] v_new_21_read;
input  [31:0] v_new_22_read;
input  [31:0] v_new_23_read;
input  [31:0] v_new_24_read;
input  [31:0] v_new_25_read;
input  [31:0] v_new_26_read;
input  [31:0] v_new_27_read;
input  [31:0] v_new_28_read;
input  [31:0] v_new_29_read;
input  [31:0] v_new_30_read;
input  [31:0] v_new_31_read;
input  [31:0] v_new_32_read;
input  [31:0] v_new_33_read;
input  [31:0] v_new_34_read;
input  [31:0] v_new_35_read;
input  [31:0] v_new_36_read;
input  [31:0] v_new_37_read;
input  [31:0] v_new_38_read;
input  [31:0] v_new_39_read;
input  [31:0] v_new_40_read;
input  [31:0] v_new_41_read;
input  [31:0] v_new_42_read;
input  [31:0] v_new_43_read;
input  [31:0] v_new_44_read;
input  [31:0] v_new_45_read;
input  [31:0] v_new_46_read;
input  [31:0] v_new_47_read;
input  [31:0] v_new_48_read;
input  [31:0] v_new_49_read;
input  [31:0] v_new_50_read;
input  [31:0] v_new_51_read;
input  [31:0] v_new_52_read;
input  [31:0] v_new_53_read;
input  [31:0] v_new_54_read;
input  [31:0] v_new_55_read;
input  [31:0] v_new_56_read;
input  [31:0] v_new_57_read;
input  [31:0] v_new_58_read;
input  [31:0] v_new_59_read;
input  [31:0] v_new_60_read;
input  [31:0] v_new_61_read;
input  [31:0] v_new_62_read;
input  [31:0] v_new_63_read;
input  [31:0] v_new_64_read;
input  [31:0] v_new_65_read;
input  [31:0] v_new_66_read;
input  [31:0] v_new_67_read;
input  [31:0] v_new_68_read;
input  [31:0] v_new_69_read;
input  [31:0] v_new_70_read;
input  [31:0] v_new_71_read;
input  [31:0] v_new_72_read;
input  [31:0] v_new_73_read;
input  [31:0] v_new_74_read;
input  [31:0] v_new_75_read;
input  [31:0] v_new_76_read;
input  [31:0] v_new_77_read;
input  [31:0] v_new_78_read;
input  [31:0] v_new_79_read;
input  [31:0] v_new_80_read;
input  [31:0] v_new_81_read;
input  [31:0] v_new_82_read;
input  [31:0] v_new_83_read;
input  [31:0] v_new_84_read;
input  [31:0] v_new_85_read;
input  [31:0] v_new_86_read;
input  [31:0] v_new_87_read;
input  [31:0] v_new_88_read;
input  [31:0] v_new_89_read;
input  [31:0] v_new_90_read;
input  [31:0] v_new_91_read;
input  [31:0] v_new_92_read;
input  [31:0] v_new_93_read;
input  [31:0] v_new_94_read;
input  [31:0] v_new_95_read;
input  [31:0] v_new_96_read;
input  [31:0] v_new_97_read;
input  [31:0] v_new_98_read;
input  [31:0] v_new_99_read;
output  [0:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[0:0] ap_return;

(* fsm_encoding = "none" *) reg   [15:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_33;
wire   [6:0] i_4_fu_1674_p2;
reg   [6:0] i_4_reg_2937;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_649;
wire   [31:0] tmp_105_fu_1680_p102;
reg   [31:0] tmp_105_reg_2942;
wire   [0:0] exitcond_fu_1668_p2;
wire   [31:0] tmp_106_fu_1786_p102;
reg   [31:0] tmp_106_reg_2947;
wire   [31:0] grp_fu_1653_p2;
reg   [31:0] diff_reg_2952;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_666;
wire   [31:0] grp_fu_1658_p2;
reg   [31:0] tmp_s_reg_2958;
reg    ap_sig_cseq_ST_st11_fsm_10;
reg    ap_sig_675;
reg    ap_sig_cseq_ST_st16_fsm_15;
reg    ap_sig_683;
reg   [31:0] square_diff_reg_1630;
reg   [6:0] i_reg_1642;
reg   [31:0] grp_fu_1653_p0;
reg   [31:0] grp_fu_1653_p1;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_697;
reg    ap_sig_cseq_ST_st12_fsm_11;
reg    ap_sig_704;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_713;
wire   [31:0] square_diff_to_int_fu_1892_p1;
wire   [7:0] tmp_fu_1896_p4;
wire   [22:0] tmp_1_fu_1906_p1;
wire   [0:0] notrhs_fu_1916_p2;
wire   [0:0] notlhs_fu_1910_p2;
wire   [0:0] tmp_102_fu_1922_p2;
wire   [0:0] tmp_103_fu_1662_p2;
reg   [1:0] grp_fu_1653_opcode;
wire   [0:0] tmp_104_fu_1928_p2;
reg   [0:0] ap_return_preg;
reg   [15:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 16'b1;
#0 ap_return_preg = 1'b0;
end

dut_faddfsub_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dut_faddfsub_32ns_32ns_32_5_full_dsp_U1273(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1653_p0),
    .din1(grp_fu_1653_p1),
    .opcode(grp_fu_1653_opcode),
    .ce(1'b1),
    .dout(grp_fu_1653_p2)
);

dut_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dut_fmul_32ns_32ns_32_4_max_dsp_U1274(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(diff_reg_2952),
    .din1(diff_reg_2952),
    .ce(1'b1),
    .dout(grp_fu_1658_p2)
);

dut_fcmp_32ns_32ns_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
dut_fcmp_32ns_32ns_1_1_U1275(
    .din0(square_diff_reg_1630),
    .din1(ap_const_lv32_0),
    .opcode(ap_const_lv5_1),
    .dout(tmp_103_fu_1662_p2)
);

dut_mux_100to1_sel7_32_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 32 ),
    .din33_WIDTH( 32 ),
    .din34_WIDTH( 32 ),
    .din35_WIDTH( 32 ),
    .din36_WIDTH( 32 ),
    .din37_WIDTH( 32 ),
    .din38_WIDTH( 32 ),
    .din39_WIDTH( 32 ),
    .din40_WIDTH( 32 ),
    .din41_WIDTH( 32 ),
    .din42_WIDTH( 32 ),
    .din43_WIDTH( 32 ),
    .din44_WIDTH( 32 ),
    .din45_WIDTH( 32 ),
    .din46_WIDTH( 32 ),
    .din47_WIDTH( 32 ),
    .din48_WIDTH( 32 ),
    .din49_WIDTH( 32 ),
    .din50_WIDTH( 32 ),
    .din51_WIDTH( 32 ),
    .din52_WIDTH( 32 ),
    .din53_WIDTH( 32 ),
    .din54_WIDTH( 32 ),
    .din55_WIDTH( 32 ),
    .din56_WIDTH( 32 ),
    .din57_WIDTH( 32 ),
    .din58_WIDTH( 32 ),
    .din59_WIDTH( 32 ),
    .din60_WIDTH( 32 ),
    .din61_WIDTH( 32 ),
    .din62_WIDTH( 32 ),
    .din63_WIDTH( 32 ),
    .din64_WIDTH( 32 ),
    .din65_WIDTH( 32 ),
    .din66_WIDTH( 32 ),
    .din67_WIDTH( 32 ),
    .din68_WIDTH( 32 ),
    .din69_WIDTH( 32 ),
    .din70_WIDTH( 32 ),
    .din71_WIDTH( 32 ),
    .din72_WIDTH( 32 ),
    .din73_WIDTH( 32 ),
    .din74_WIDTH( 32 ),
    .din75_WIDTH( 32 ),
    .din76_WIDTH( 32 ),
    .din77_WIDTH( 32 ),
    .din78_WIDTH( 32 ),
    .din79_WIDTH( 32 ),
    .din80_WIDTH( 32 ),
    .din81_WIDTH( 32 ),
    .din82_WIDTH( 32 ),
    .din83_WIDTH( 32 ),
    .din84_WIDTH( 32 ),
    .din85_WIDTH( 32 ),
    .din86_WIDTH( 32 ),
    .din87_WIDTH( 32 ),
    .din88_WIDTH( 32 ),
    .din89_WIDTH( 32 ),
    .din90_WIDTH( 32 ),
    .din91_WIDTH( 32 ),
    .din92_WIDTH( 32 ),
    .din93_WIDTH( 32 ),
    .din94_WIDTH( 32 ),
    .din95_WIDTH( 32 ),
    .din96_WIDTH( 32 ),
    .din97_WIDTH( 32 ),
    .din98_WIDTH( 32 ),
    .din99_WIDTH( 32 ),
    .din100_WIDTH( 32 ),
    .din101_WIDTH( 7 ),
    .dout_WIDTH( 32 ))
dut_mux_100to1_sel7_32_1_U1276(
    .din1(v_old_0_read),
    .din2(v_old_1_read),
    .din3(v_old_2_read),
    .din4(v_old_3_read),
    .din5(v_old_4_read),
    .din6(v_old_5_read),
    .din7(v_old_6_read),
    .din8(v_old_7_read),
    .din9(v_old_8_read),
    .din10(v_old_9_read),
    .din11(v_old_10_read),
    .din12(v_old_11_read),
    .din13(v_old_12_read),
    .din14(v_old_13_read),
    .din15(v_old_14_read),
    .din16(v_old_15_read),
    .din17(v_old_16_read),
    .din18(v_old_17_read),
    .din19(v_old_18_read),
    .din20(v_old_19_read),
    .din21(v_old_20_read),
    .din22(v_old_21_read),
    .din23(v_old_22_read),
    .din24(v_old_23_read),
    .din25(v_old_24_read),
    .din26(v_old_25_read),
    .din27(v_old_26_read),
    .din28(v_old_27_read),
    .din29(v_old_28_read),
    .din30(v_old_29_read),
    .din31(v_old_30_read),
    .din32(v_old_31_read),
    .din33(v_old_32_read),
    .din34(v_old_33_read),
    .din35(v_old_34_read),
    .din36(v_old_35_read),
    .din37(v_old_36_read),
    .din38(v_old_37_read),
    .din39(v_old_38_read),
    .din40(v_old_39_read),
    .din41(v_old_40_read),
    .din42(v_old_41_read),
    .din43(v_old_42_read),
    .din44(v_old_43_read),
    .din45(v_old_44_read),
    .din46(v_old_45_read),
    .din47(v_old_46_read),
    .din48(v_old_47_read),
    .din49(v_old_48_read),
    .din50(v_old_49_read),
    .din51(v_old_50_read),
    .din52(v_old_51_read),
    .din53(v_old_52_read),
    .din54(v_old_53_read),
    .din55(v_old_54_read),
    .din56(v_old_55_read),
    .din57(v_old_56_read),
    .din58(v_old_57_read),
    .din59(v_old_58_read),
    .din60(v_old_59_read),
    .din61(v_old_60_read),
    .din62(v_old_61_read),
    .din63(v_old_62_read),
    .din64(v_old_63_read),
    .din65(v_old_64_read),
    .din66(v_old_65_read),
    .din67(v_old_66_read),
    .din68(v_old_67_read),
    .din69(v_old_68_read),
    .din70(v_old_69_read),
    .din71(v_old_70_read),
    .din72(v_old_71_read),
    .din73(v_old_72_read),
    .din74(v_old_73_read),
    .din75(v_old_74_read),
    .din76(v_old_75_read),
    .din77(v_old_76_read),
    .din78(v_old_77_read),
    .din79(v_old_78_read),
    .din80(v_old_79_read),
    .din81(v_old_80_read),
    .din82(v_old_81_read),
    .din83(v_old_82_read),
    .din84(v_old_83_read),
    .din85(v_old_84_read),
    .din86(v_old_85_read),
    .din87(v_old_86_read),
    .din88(v_old_87_read),
    .din89(v_old_88_read),
    .din90(v_old_89_read),
    .din91(v_old_90_read),
    .din92(v_old_91_read),
    .din93(v_old_92_read),
    .din94(v_old_93_read),
    .din95(v_old_94_read),
    .din96(v_old_95_read),
    .din97(v_old_96_read),
    .din98(v_old_97_read),
    .din99(v_old_98_read),
    .din100(v_old_99_read),
    .din101(i_reg_1642),
    .dout(tmp_105_fu_1680_p102)
);

dut_mux_100to1_sel7_32_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 32 ),
    .din33_WIDTH( 32 ),
    .din34_WIDTH( 32 ),
    .din35_WIDTH( 32 ),
    .din36_WIDTH( 32 ),
    .din37_WIDTH( 32 ),
    .din38_WIDTH( 32 ),
    .din39_WIDTH( 32 ),
    .din40_WIDTH( 32 ),
    .din41_WIDTH( 32 ),
    .din42_WIDTH( 32 ),
    .din43_WIDTH( 32 ),
    .din44_WIDTH( 32 ),
    .din45_WIDTH( 32 ),
    .din46_WIDTH( 32 ),
    .din47_WIDTH( 32 ),
    .din48_WIDTH( 32 ),
    .din49_WIDTH( 32 ),
    .din50_WIDTH( 32 ),
    .din51_WIDTH( 32 ),
    .din52_WIDTH( 32 ),
    .din53_WIDTH( 32 ),
    .din54_WIDTH( 32 ),
    .din55_WIDTH( 32 ),
    .din56_WIDTH( 32 ),
    .din57_WIDTH( 32 ),
    .din58_WIDTH( 32 ),
    .din59_WIDTH( 32 ),
    .din60_WIDTH( 32 ),
    .din61_WIDTH( 32 ),
    .din62_WIDTH( 32 ),
    .din63_WIDTH( 32 ),
    .din64_WIDTH( 32 ),
    .din65_WIDTH( 32 ),
    .din66_WIDTH( 32 ),
    .din67_WIDTH( 32 ),
    .din68_WIDTH( 32 ),
    .din69_WIDTH( 32 ),
    .din70_WIDTH( 32 ),
    .din71_WIDTH( 32 ),
    .din72_WIDTH( 32 ),
    .din73_WIDTH( 32 ),
    .din74_WIDTH( 32 ),
    .din75_WIDTH( 32 ),
    .din76_WIDTH( 32 ),
    .din77_WIDTH( 32 ),
    .din78_WIDTH( 32 ),
    .din79_WIDTH( 32 ),
    .din80_WIDTH( 32 ),
    .din81_WIDTH( 32 ),
    .din82_WIDTH( 32 ),
    .din83_WIDTH( 32 ),
    .din84_WIDTH( 32 ),
    .din85_WIDTH( 32 ),
    .din86_WIDTH( 32 ),
    .din87_WIDTH( 32 ),
    .din88_WIDTH( 32 ),
    .din89_WIDTH( 32 ),
    .din90_WIDTH( 32 ),
    .din91_WIDTH( 32 ),
    .din92_WIDTH( 32 ),
    .din93_WIDTH( 32 ),
    .din94_WIDTH( 32 ),
    .din95_WIDTH( 32 ),
    .din96_WIDTH( 32 ),
    .din97_WIDTH( 32 ),
    .din98_WIDTH( 32 ),
    .din99_WIDTH( 32 ),
    .din100_WIDTH( 32 ),
    .din101_WIDTH( 7 ),
    .dout_WIDTH( 32 ))
dut_mux_100to1_sel7_32_1_U1277(
    .din1(v_new_0_read),
    .din2(v_new_1_read),
    .din3(v_new_2_read),
    .din4(v_new_3_read),
    .din5(v_new_4_read),
    .din6(v_new_5_read),
    .din7(v_new_6_read),
    .din8(v_new_7_read),
    .din9(v_new_8_read),
    .din10(v_new_9_read),
    .din11(v_new_10_read),
    .din12(v_new_11_read),
    .din13(v_new_12_read),
    .din14(v_new_13_read),
    .din15(v_new_14_read),
    .din16(v_new_15_read),
    .din17(v_new_16_read),
    .din18(v_new_17_read),
    .din19(v_new_18_read),
    .din20(v_new_19_read),
    .din21(v_new_20_read),
    .din22(v_new_21_read),
    .din23(v_new_22_read),
    .din24(v_new_23_read),
    .din25(v_new_24_read),
    .din26(v_new_25_read),
    .din27(v_new_26_read),
    .din28(v_new_27_read),
    .din29(v_new_28_read),
    .din30(v_new_29_read),
    .din31(v_new_30_read),
    .din32(v_new_31_read),
    .din33(v_new_32_read),
    .din34(v_new_33_read),
    .din35(v_new_34_read),
    .din36(v_new_35_read),
    .din37(v_new_36_read),
    .din38(v_new_37_read),
    .din39(v_new_38_read),
    .din40(v_new_39_read),
    .din41(v_new_40_read),
    .din42(v_new_41_read),
    .din43(v_new_42_read),
    .din44(v_new_43_read),
    .din45(v_new_44_read),
    .din46(v_new_45_read),
    .din47(v_new_46_read),
    .din48(v_new_47_read),
    .din49(v_new_48_read),
    .din50(v_new_49_read),
    .din51(v_new_50_read),
    .din52(v_new_51_read),
    .din53(v_new_52_read),
    .din54(v_new_53_read),
    .din55(v_new_54_read),
    .din56(v_new_55_read),
    .din57(v_new_56_read),
    .din58(v_new_57_read),
    .din59(v_new_58_read),
    .din60(v_new_59_read),
    .din61(v_new_60_read),
    .din62(v_new_61_read),
    .din63(v_new_62_read),
    .din64(v_new_63_read),
    .din65(v_new_64_read),
    .din66(v_new_65_read),
    .din67(v_new_66_read),
    .din68(v_new_67_read),
    .din69(v_new_68_read),
    .din70(v_new_69_read),
    .din71(v_new_70_read),
    .din72(v_new_71_read),
    .din73(v_new_72_read),
    .din74(v_new_73_read),
    .din75(v_new_74_read),
    .din76(v_new_75_read),
    .din77(v_new_76_read),
    .din78(v_new_77_read),
    .din79(v_new_78_read),
    .din80(v_new_79_read),
    .din81(v_new_80_read),
    .din82(v_new_81_read),
    .din83(v_new_82_read),
    .din84(v_new_83_read),
    .din85(v_new_84_read),
    .din86(v_new_85_read),
    .din87(v_new_86_read),
    .din88(v_new_87_read),
    .din89(v_new_88_read),
    .din90(v_new_89_read),
    .din91(v_new_90_read),
    .din92(v_new_91_read),
    .din93(v_new_92_read),
    .din94(v_new_93_read),
    .din95(v_new_94_read),
    .din96(v_new_95_read),
    .din97(v_new_96_read),
    .din98(v_new_97_read),
    .din99(v_new_98_read),
    .din100(v_new_99_read),
    .din101(i_reg_1642),
    .dout(tmp_106_fu_1786_p102)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond_fu_1668_p2 == 1'b0))) begin
            ap_return_preg <= tmp_104_fu_1928_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st16_fsm_15)) begin
        i_reg_1642 <= i_4_reg_2937;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        i_reg_1642 <= ap_const_lv7_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st16_fsm_15)) begin
        square_diff_reg_1630 <= grp_fu_1653_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        square_diff_reg_1630 <= ap_const_lv32_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        diff_reg_2952 <= grp_fu_1653_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        i_4_reg_2937 <= i_4_fu_1674_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond_fu_1668_p2 == 1'b0))) begin
        tmp_105_reg_2942 <= tmp_105_fu_1680_p102;
        tmp_106_reg_2947 <= tmp_106_fu_1786_p102;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        tmp_s_reg_2958 <= grp_fu_1658_p2;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0)) | ((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond_fu_1668_p2 == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond_fu_1668_p2 == 1'b0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond_fu_1668_p2 == 1'b0))) begin
        ap_return = tmp_104_fu_1928_p2;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if (ap_sig_675) begin
        ap_sig_cseq_ST_st11_fsm_10 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_10 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_704) begin
        ap_sig_cseq_ST_st12_fsm_11 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st12_fsm_11 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_683) begin
        ap_sig_cseq_ST_st16_fsm_15 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st16_fsm_15 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_33) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_649) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_697) begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_666) begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_713) begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        grp_fu_1653_opcode = ap_const_lv2_1;
    end else if ((1'b1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        grp_fu_1653_opcode = ap_const_lv2_0;
    end else begin
        grp_fu_1653_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        grp_fu_1653_p0 = square_diff_reg_1630;
    end else if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        grp_fu_1653_p0 = tmp_105_reg_2942;
    end else begin
        grp_fu_1653_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        grp_fu_1653_p1 = tmp_s_reg_2958;
    end else if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        grp_fu_1653_p1 = tmp_106_reg_2947;
    end else begin
        grp_fu_1653_p1 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            if (~(exitcond_fu_1668_p2 == 1'b0)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st3_fsm_2 : begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : begin
            ap_NS_fsm = ap_ST_st2_fsm_1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    ap_sig_33 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_649 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_666 = (1'b1 == ap_CS_fsm[ap_const_lv32_6]);
end

always @ (*) begin
    ap_sig_675 = (1'b1 == ap_CS_fsm[ap_const_lv32_A]);
end

always @ (*) begin
    ap_sig_683 = (1'b1 == ap_CS_fsm[ap_const_lv32_F]);
end

always @ (*) begin
    ap_sig_697 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

always @ (*) begin
    ap_sig_704 = (1'b1 == ap_CS_fsm[ap_const_lv32_B]);
end

always @ (*) begin
    ap_sig_713 = (1'b1 == ap_CS_fsm[ap_const_lv32_7]);
end

assign exitcond_fu_1668_p2 = ((i_reg_1642 == ap_const_lv7_64) ? 1'b1 : 1'b0);

assign i_4_fu_1674_p2 = (i_reg_1642 + ap_const_lv7_1);

assign notlhs_fu_1910_p2 = ((tmp_fu_1896_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notrhs_fu_1916_p2 = ((tmp_1_fu_1906_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign square_diff_to_int_fu_1892_p1 = square_diff_reg_1630;

assign tmp_102_fu_1922_p2 = (notrhs_fu_1916_p2 | notlhs_fu_1910_p2);

assign tmp_104_fu_1928_p2 = (tmp_102_fu_1922_p2 & tmp_103_fu_1662_p2);

assign tmp_1_fu_1906_p1 = square_diff_to_int_fu_1892_p1[22:0];

assign tmp_fu_1896_p4 = {{square_diff_to_int_fu_1892_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

endmodule //dut_is_converged
